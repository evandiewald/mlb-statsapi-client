# coding: utf-8

"""
    Stats API Documentation

    Official API for Major League Baseball.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class StreakStatEnum(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AT_BATS = "AT_BATS"
    BALLS = "BALLS"
    BALKS = "BALKS"
    BLOWN_SAVES = "BLOWN_SAVES"
    CAUGHT_STEALING = "CAUGHT_STEALING"
    COMPLETE_GAMES = "COMPLETE_GAMES"
    DOUBLES = "DOUBLES"
    EARNED_RUN = "EARNED_RUN"
    ERRORS = "ERRORS"
    EXTRA_BASE_HITS = "EXTRA_BASE_HITS"
    GAMES_PLAYED = "GAMES_PLAYED"
    GAMES_STARTED = "GAMES_STARTED"
    GROUND_INTO_DOUBLE_PLAY = "GROUND_INTO_DOUBLE_PLAY"
    HIT_BY_PITCH = "HIT_BY_PITCH"
    HITS = "HITS"
    HOLDS = "HOLDS"
    HOME_RUNS = "HOME_RUNS"
    INTENTIONAL_WALKS = "INTENTIONAL_WALKS"
    LEFT_ON_BASE = "LEFT_ON_BASE"
    LOSSES = "LOSSES"
    ON_BASE = "ON_BASE"
    PASSED_BALLS = "PASSED_BALLS"
    PICKOFFS = "PICKOFFS"
    PITCHES = "PITCHES"
    PLATE_APPEARANCES = "PLATE_APPEARANCES"
    QUALITY_STARTS = "QUALITY_STARTS"
    RUNS = "RUNS"
    RUNS_BATTED_IN = "RUNS_BATTED_IN"
    SAVES = "SAVES"
    SHUTOUTS = "SHUTOUTS"
    STOLEN_BASES = "STOLEN_BASES"
    STRIKES = "STRIKES"
    STRIKEOUTS = "STRIKEOUTS"
    TOTAL_BASES = "TOTAL_BASES"
    TRIPLES = "TRIPLES"
    WALKS = "WALKS"
    WALKOFFS = "WALKOFFS"
    WINS = "WINS"
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
    }

    attribute_map = {
    }

    def __init__(self):  # noqa: E501
        """StreakStatEnum - a model defined in Swagger"""  # noqa: E501
        self.discriminator = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(StreakStatEnum, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, StreakStatEnum):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
