# coding: utf-8

"""
    Stats API Documentation

    Official API for Major League Baseball.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BaseballDraftProspectRestObject(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'copyright': 'str',
        'bis_player_id': 'int',
        'bis_school_id': 'int',
        'pick_round': 'str',
        'pick_number': 'int',
        'display_pick_number': 'int',
        'round_pick_number': 'int',
        'rank': 'int',
        'pick_value': 'str',
        'signing_bonus': 'str',
        'home': 'LocationRestObject',
        'scouting_report': 'str',
        'school': 'SchoolRestObject',
        'blurb': 'str',
        'headshot_link': 'str',
        'person': 'BaseballPersonRestObject',
        'team': 'BaseballTeamRestObject',
        'draft_type': 'DraftTypeEnumRestObject',
        'is_drafted': 'bool',
        'is_pass': 'bool',
        'year': 'str'
    }

    attribute_map = {
        'copyright': 'copyright',
        'bis_player_id': 'bisPlayerId',
        'bis_school_id': 'bisSchoolId',
        'pick_round': 'pickRound',
        'pick_number': 'pickNumber',
        'display_pick_number': 'displayPickNumber',
        'round_pick_number': 'roundPickNumber',
        'rank': 'rank',
        'pick_value': 'pickValue',
        'signing_bonus': 'signingBonus',
        'home': 'home',
        'scouting_report': 'scoutingReport',
        'school': 'school',
        'blurb': 'blurb',
        'headshot_link': 'headshotLink',
        'person': 'person',
        'team': 'team',
        'draft_type': 'draftType',
        'is_drafted': 'isDrafted',
        'is_pass': 'isPass',
        'year': 'year'
    }

    def __init__(self, copyright=None, bis_player_id=None, bis_school_id=None, pick_round=None, pick_number=None, display_pick_number=None, round_pick_number=None, rank=None, pick_value=None, signing_bonus=None, home=None, scouting_report=None, school=None, blurb=None, headshot_link=None, person=None, team=None, draft_type=None, is_drafted=None, is_pass=None, year=None):  # noqa: E501
        """BaseballDraftProspectRestObject - a model defined in Swagger"""  # noqa: E501
        self._copyright = None
        self._bis_player_id = None
        self._bis_school_id = None
        self._pick_round = None
        self._pick_number = None
        self._display_pick_number = None
        self._round_pick_number = None
        self._rank = None
        self._pick_value = None
        self._signing_bonus = None
        self._home = None
        self._scouting_report = None
        self._school = None
        self._blurb = None
        self._headshot_link = None
        self._person = None
        self._team = None
        self._draft_type = None
        self._is_drafted = None
        self._is_pass = None
        self._year = None
        self.discriminator = None
        if copyright is not None:
            self.copyright = copyright
        if bis_player_id is not None:
            self.bis_player_id = bis_player_id
        if bis_school_id is not None:
            self.bis_school_id = bis_school_id
        if pick_round is not None:
            self.pick_round = pick_round
        if pick_number is not None:
            self.pick_number = pick_number
        if display_pick_number is not None:
            self.display_pick_number = display_pick_number
        if round_pick_number is not None:
            self.round_pick_number = round_pick_number
        if rank is not None:
            self.rank = rank
        if pick_value is not None:
            self.pick_value = pick_value
        if signing_bonus is not None:
            self.signing_bonus = signing_bonus
        if home is not None:
            self.home = home
        if scouting_report is not None:
            self.scouting_report = scouting_report
        if school is not None:
            self.school = school
        if blurb is not None:
            self.blurb = blurb
        if headshot_link is not None:
            self.headshot_link = headshot_link
        if person is not None:
            self.person = person
        if team is not None:
            self.team = team
        if draft_type is not None:
            self.draft_type = draft_type
        if is_drafted is not None:
            self.is_drafted = is_drafted
        if is_pass is not None:
            self.is_pass = is_pass
        if year is not None:
            self.year = year

    @property
    def copyright(self):
        """Gets the copyright of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The copyright of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: str
        """
        return self._copyright

    @copyright.setter
    def copyright(self, copyright):
        """Sets the copyright of this BaseballDraftProspectRestObject.


        :param copyright: The copyright of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: str
        """

        self._copyright = copyright

    @property
    def bis_player_id(self):
        """Gets the bis_player_id of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The bis_player_id of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: int
        """
        return self._bis_player_id

    @bis_player_id.setter
    def bis_player_id(self, bis_player_id):
        """Sets the bis_player_id of this BaseballDraftProspectRestObject.


        :param bis_player_id: The bis_player_id of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: int
        """

        self._bis_player_id = bis_player_id

    @property
    def bis_school_id(self):
        """Gets the bis_school_id of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The bis_school_id of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: int
        """
        return self._bis_school_id

    @bis_school_id.setter
    def bis_school_id(self, bis_school_id):
        """Sets the bis_school_id of this BaseballDraftProspectRestObject.


        :param bis_school_id: The bis_school_id of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: int
        """

        self._bis_school_id = bis_school_id

    @property
    def pick_round(self):
        """Gets the pick_round of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The pick_round of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: str
        """
        return self._pick_round

    @pick_round.setter
    def pick_round(self, pick_round):
        """Sets the pick_round of this BaseballDraftProspectRestObject.


        :param pick_round: The pick_round of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: str
        """

        self._pick_round = pick_round

    @property
    def pick_number(self):
        """Gets the pick_number of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The pick_number of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: int
        """
        return self._pick_number

    @pick_number.setter
    def pick_number(self, pick_number):
        """Sets the pick_number of this BaseballDraftProspectRestObject.


        :param pick_number: The pick_number of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: int
        """

        self._pick_number = pick_number

    @property
    def display_pick_number(self):
        """Gets the display_pick_number of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The display_pick_number of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: int
        """
        return self._display_pick_number

    @display_pick_number.setter
    def display_pick_number(self, display_pick_number):
        """Sets the display_pick_number of this BaseballDraftProspectRestObject.


        :param display_pick_number: The display_pick_number of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: int
        """

        self._display_pick_number = display_pick_number

    @property
    def round_pick_number(self):
        """Gets the round_pick_number of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The round_pick_number of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: int
        """
        return self._round_pick_number

    @round_pick_number.setter
    def round_pick_number(self, round_pick_number):
        """Sets the round_pick_number of this BaseballDraftProspectRestObject.


        :param round_pick_number: The round_pick_number of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: int
        """

        self._round_pick_number = round_pick_number

    @property
    def rank(self):
        """Gets the rank of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The rank of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: int
        """
        return self._rank

    @rank.setter
    def rank(self, rank):
        """Sets the rank of this BaseballDraftProspectRestObject.


        :param rank: The rank of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: int
        """

        self._rank = rank

    @property
    def pick_value(self):
        """Gets the pick_value of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The pick_value of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: str
        """
        return self._pick_value

    @pick_value.setter
    def pick_value(self, pick_value):
        """Sets the pick_value of this BaseballDraftProspectRestObject.


        :param pick_value: The pick_value of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: str
        """

        self._pick_value = pick_value

    @property
    def signing_bonus(self):
        """Gets the signing_bonus of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The signing_bonus of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: str
        """
        return self._signing_bonus

    @signing_bonus.setter
    def signing_bonus(self, signing_bonus):
        """Sets the signing_bonus of this BaseballDraftProspectRestObject.


        :param signing_bonus: The signing_bonus of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: str
        """

        self._signing_bonus = signing_bonus

    @property
    def home(self):
        """Gets the home of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The home of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: LocationRestObject
        """
        return self._home

    @home.setter
    def home(self, home):
        """Sets the home of this BaseballDraftProspectRestObject.


        :param home: The home of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: LocationRestObject
        """

        self._home = home

    @property
    def scouting_report(self):
        """Gets the scouting_report of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The scouting_report of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: str
        """
        return self._scouting_report

    @scouting_report.setter
    def scouting_report(self, scouting_report):
        """Sets the scouting_report of this BaseballDraftProspectRestObject.


        :param scouting_report: The scouting_report of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: str
        """

        self._scouting_report = scouting_report

    @property
    def school(self):
        """Gets the school of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The school of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: SchoolRestObject
        """
        return self._school

    @school.setter
    def school(self, school):
        """Sets the school of this BaseballDraftProspectRestObject.


        :param school: The school of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: SchoolRestObject
        """

        self._school = school

    @property
    def blurb(self):
        """Gets the blurb of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The blurb of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: str
        """
        return self._blurb

    @blurb.setter
    def blurb(self, blurb):
        """Sets the blurb of this BaseballDraftProspectRestObject.


        :param blurb: The blurb of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: str
        """

        self._blurb = blurb

    @property
    def headshot_link(self):
        """Gets the headshot_link of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The headshot_link of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: str
        """
        return self._headshot_link

    @headshot_link.setter
    def headshot_link(self, headshot_link):
        """Sets the headshot_link of this BaseballDraftProspectRestObject.


        :param headshot_link: The headshot_link of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: str
        """

        self._headshot_link = headshot_link

    @property
    def person(self):
        """Gets the person of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The person of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: BaseballPersonRestObject
        """
        return self._person

    @person.setter
    def person(self, person):
        """Sets the person of this BaseballDraftProspectRestObject.


        :param person: The person of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: BaseballPersonRestObject
        """

        self._person = person

    @property
    def team(self):
        """Gets the team of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The team of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: BaseballTeamRestObject
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this BaseballDraftProspectRestObject.


        :param team: The team of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: BaseballTeamRestObject
        """

        self._team = team

    @property
    def draft_type(self):
        """Gets the draft_type of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The draft_type of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: DraftTypeEnumRestObject
        """
        return self._draft_type

    @draft_type.setter
    def draft_type(self, draft_type):
        """Sets the draft_type of this BaseballDraftProspectRestObject.


        :param draft_type: The draft_type of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: DraftTypeEnumRestObject
        """

        self._draft_type = draft_type

    @property
    def is_drafted(self):
        """Gets the is_drafted of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The is_drafted of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._is_drafted

    @is_drafted.setter
    def is_drafted(self, is_drafted):
        """Sets the is_drafted of this BaseballDraftProspectRestObject.


        :param is_drafted: The is_drafted of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: bool
        """

        self._is_drafted = is_drafted

    @property
    def is_pass(self):
        """Gets the is_pass of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The is_pass of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._is_pass

    @is_pass.setter
    def is_pass(self, is_pass):
        """Sets the is_pass of this BaseballDraftProspectRestObject.


        :param is_pass: The is_pass of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: bool
        """

        self._is_pass = is_pass

    @property
    def year(self):
        """Gets the year of this BaseballDraftProspectRestObject.  # noqa: E501


        :return: The year of this BaseballDraftProspectRestObject.  # noqa: E501
        :rtype: str
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this BaseballDraftProspectRestObject.


        :param year: The year of this BaseballDraftProspectRestObject.  # noqa: E501
        :type: str
        """

        self._year = year

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BaseballDraftProspectRestObject, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BaseballDraftProspectRestObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
