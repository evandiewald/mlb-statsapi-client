# coding: utf-8

"""
    Stats API Documentation

    Official API for Major League Baseball.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BaseballTeam(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'requesting_user_role': 'Role',
        'id': 'int',
        'name': 'str',
        'season': 'int',
        'str_season': 'str',
        'venue': 'Venue',
        'spring_venue': 'Venue',
        'team_code': 'str',
        'file_code': 'str',
        'abbreviation': 'str',
        'first_year_of_play': 'str',
        'team_name': 'str',
        'location_name': 'str',
        'active': 'bool',
        'placeholder': 'bool',
        'roster': 'BaseballRoster',
        'next_game_schedule': 'BaseballSchedule',
        'previous_game_schedule': 'BaseballSchedule',
        'next_schedule': 'BaseballSchedule',
        'previous_schedule': 'BaseballSchedule',
        'content': 'TeamContentCms',
        'device_properties': 'JsonNode',
        'tickets': 'list[BaseballTicket]',
        'playoff_info': 'TeamPlayoffs',
        'home_away': 'str',
        'record': 'BaseballTeamStandingsRecord',
        'team_stats': 'list[StatContainer]',
        'team_leaders': 'list[Leaders]',
        'other_team_names': 'OtherTeamNames',
        'social_media_info': 'SocialMediaInfo',
        'twitter': 'str',
        'league_id': 'int',
        'team_designation': 'TeamDesignationEnum',
        'parent_org_id': 'int',
        'parent_org_name': 'str',
        'seed_number': 'int',
        'franchise_name': 'str',
        'club_name': 'str',
        'location': 'Location',
        'spring_league': 'League',
        'xref_ids': 'list[XrefId]',
        'all_star_status': 'AllStarEnum',
        'team_seq': 'int',
        'name_language_history_start': 'date',
        'name_language_history_end': 'date',
        'cache_key': 'str',
        'short_name': 'str',
        'league': 'League',
        'sport': 'Sport',
        'division': 'Division',
        'conference': 'Conference',
        'hydrated_social': 'dict(str, object)',
        'hydrated_device_properties': 'dict(str, object)',
        'hydrated_game_promotions_at_bat': 'dict(str, object)',
        'hydrated_game_promotions': 'dict(str, object)',
        'hydrated_game_sponsorships': 'dict(str, object)',
        'hydrated_game_tickets': 'dict(str, object)',
        'hydrated_game_tickets_at_bat': 'dict(str, object)',
        'franchise': 'Franchise',
        'user_privileges': 'list[Privilege]'
    }

    attribute_map = {
        'requesting_user_role': 'requestingUserRole',
        'id': 'id',
        'name': 'name',
        'season': 'season',
        'str_season': 'strSeason',
        'venue': 'venue',
        'spring_venue': 'springVenue',
        'team_code': 'teamCode',
        'file_code': 'fileCode',
        'abbreviation': 'abbreviation',
        'first_year_of_play': 'firstYearOfPlay',
        'team_name': 'teamName',
        'location_name': 'locationName',
        'active': 'active',
        'placeholder': 'placeholder',
        'roster': 'roster',
        'next_game_schedule': 'nextGameSchedule',
        'previous_game_schedule': 'previousGameSchedule',
        'next_schedule': 'nextSchedule',
        'previous_schedule': 'previousSchedule',
        'content': 'content',
        'device_properties': 'deviceProperties',
        'tickets': 'tickets',
        'playoff_info': 'playoffInfo',
        'home_away': 'homeAway',
        'record': 'record',
        'team_stats': 'teamStats',
        'team_leaders': 'teamLeaders',
        'other_team_names': 'otherTeamNames',
        'social_media_info': 'socialMediaInfo',
        'twitter': 'twitter',
        'league_id': 'leagueId',
        'team_designation': 'teamDesignation',
        'parent_org_id': 'parentOrgId',
        'parent_org_name': 'parentOrgName',
        'seed_number': 'seedNumber',
        'franchise_name': 'franchiseName',
        'club_name': 'clubName',
        'location': 'location',
        'spring_league': 'springLeague',
        'xref_ids': 'xrefIds',
        'all_star_status': 'allStarStatus',
        'team_seq': 'teamSeq',
        'name_language_history_start': 'nameLanguageHistoryStart',
        'name_language_history_end': 'nameLanguageHistoryEnd',
        'cache_key': 'cacheKey',
        'short_name': 'shortName',
        'league': 'league',
        'sport': 'sport',
        'division': 'division',
        'conference': 'conference',
        'hydrated_social': 'hydratedSocial',
        'hydrated_device_properties': 'hydratedDeviceProperties',
        'hydrated_game_promotions_at_bat': 'hydratedGamePromotionsAtBat',
        'hydrated_game_promotions': 'hydratedGamePromotions',
        'hydrated_game_sponsorships': 'hydratedGameSponsorships',
        'hydrated_game_tickets': 'hydratedGameTickets',
        'hydrated_game_tickets_at_bat': 'hydratedGameTicketsAtBat',
        'franchise': 'franchise',
        'user_privileges': 'userPrivileges'
    }

    def __init__(self, requesting_user_role=None, id=None, name=None, season=None, str_season=None, venue=None, spring_venue=None, team_code=None, file_code=None, abbreviation=None, first_year_of_play=None, team_name=None, location_name=None, active=None, placeholder=None, roster=None, next_game_schedule=None, previous_game_schedule=None, next_schedule=None, previous_schedule=None, content=None, device_properties=None, tickets=None, playoff_info=None, home_away=None, record=None, team_stats=None, team_leaders=None, other_team_names=None, social_media_info=None, twitter=None, league_id=None, team_designation=None, parent_org_id=None, parent_org_name=None, seed_number=None, franchise_name=None, club_name=None, location=None, spring_league=None, xref_ids=None, all_star_status=None, team_seq=None, name_language_history_start=None, name_language_history_end=None, cache_key=None, short_name=None, league=None, sport=None, division=None, conference=None, hydrated_social=None, hydrated_device_properties=None, hydrated_game_promotions_at_bat=None, hydrated_game_promotions=None, hydrated_game_sponsorships=None, hydrated_game_tickets=None, hydrated_game_tickets_at_bat=None, franchise=None, user_privileges=None):  # noqa: E501
        """BaseballTeam - a model defined in Swagger"""  # noqa: E501
        self._requesting_user_role = None
        self._id = None
        self._name = None
        self._season = None
        self._str_season = None
        self._venue = None
        self._spring_venue = None
        self._team_code = None
        self._file_code = None
        self._abbreviation = None
        self._first_year_of_play = None
        self._team_name = None
        self._location_name = None
        self._active = None
        self._placeholder = None
        self._roster = None
        self._next_game_schedule = None
        self._previous_game_schedule = None
        self._next_schedule = None
        self._previous_schedule = None
        self._content = None
        self._device_properties = None
        self._tickets = None
        self._playoff_info = None
        self._home_away = None
        self._record = None
        self._team_stats = None
        self._team_leaders = None
        self._other_team_names = None
        self._social_media_info = None
        self._twitter = None
        self._league_id = None
        self._team_designation = None
        self._parent_org_id = None
        self._parent_org_name = None
        self._seed_number = None
        self._franchise_name = None
        self._club_name = None
        self._location = None
        self._spring_league = None
        self._xref_ids = None
        self._all_star_status = None
        self._team_seq = None
        self._name_language_history_start = None
        self._name_language_history_end = None
        self._cache_key = None
        self._short_name = None
        self._league = None
        self._sport = None
        self._division = None
        self._conference = None
        self._hydrated_social = None
        self._hydrated_device_properties = None
        self._hydrated_game_promotions_at_bat = None
        self._hydrated_game_promotions = None
        self._hydrated_game_sponsorships = None
        self._hydrated_game_tickets = None
        self._hydrated_game_tickets_at_bat = None
        self._franchise = None
        self._user_privileges = None
        self.discriminator = None
        if requesting_user_role is not None:
            self.requesting_user_role = requesting_user_role
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if season is not None:
            self.season = season
        if str_season is not None:
            self.str_season = str_season
        if venue is not None:
            self.venue = venue
        if spring_venue is not None:
            self.spring_venue = spring_venue
        if team_code is not None:
            self.team_code = team_code
        if file_code is not None:
            self.file_code = file_code
        if abbreviation is not None:
            self.abbreviation = abbreviation
        if first_year_of_play is not None:
            self.first_year_of_play = first_year_of_play
        if team_name is not None:
            self.team_name = team_name
        if location_name is not None:
            self.location_name = location_name
        if active is not None:
            self.active = active
        if placeholder is not None:
            self.placeholder = placeholder
        if roster is not None:
            self.roster = roster
        if next_game_schedule is not None:
            self.next_game_schedule = next_game_schedule
        if previous_game_schedule is not None:
            self.previous_game_schedule = previous_game_schedule
        if next_schedule is not None:
            self.next_schedule = next_schedule
        if previous_schedule is not None:
            self.previous_schedule = previous_schedule
        if content is not None:
            self.content = content
        if device_properties is not None:
            self.device_properties = device_properties
        if tickets is not None:
            self.tickets = tickets
        if playoff_info is not None:
            self.playoff_info = playoff_info
        if home_away is not None:
            self.home_away = home_away
        if record is not None:
            self.record = record
        if team_stats is not None:
            self.team_stats = team_stats
        if team_leaders is not None:
            self.team_leaders = team_leaders
        if other_team_names is not None:
            self.other_team_names = other_team_names
        if social_media_info is not None:
            self.social_media_info = social_media_info
        if twitter is not None:
            self.twitter = twitter
        if league_id is not None:
            self.league_id = league_id
        if team_designation is not None:
            self.team_designation = team_designation
        if parent_org_id is not None:
            self.parent_org_id = parent_org_id
        if parent_org_name is not None:
            self.parent_org_name = parent_org_name
        if seed_number is not None:
            self.seed_number = seed_number
        if franchise_name is not None:
            self.franchise_name = franchise_name
        if club_name is not None:
            self.club_name = club_name
        if location is not None:
            self.location = location
        if spring_league is not None:
            self.spring_league = spring_league
        if xref_ids is not None:
            self.xref_ids = xref_ids
        if all_star_status is not None:
            self.all_star_status = all_star_status
        if team_seq is not None:
            self.team_seq = team_seq
        if name_language_history_start is not None:
            self.name_language_history_start = name_language_history_start
        if name_language_history_end is not None:
            self.name_language_history_end = name_language_history_end
        if cache_key is not None:
            self.cache_key = cache_key
        if short_name is not None:
            self.short_name = short_name
        if league is not None:
            self.league = league
        if sport is not None:
            self.sport = sport
        if division is not None:
            self.division = division
        if conference is not None:
            self.conference = conference
        if hydrated_social is not None:
            self.hydrated_social = hydrated_social
        if hydrated_device_properties is not None:
            self.hydrated_device_properties = hydrated_device_properties
        if hydrated_game_promotions_at_bat is not None:
            self.hydrated_game_promotions_at_bat = hydrated_game_promotions_at_bat
        if hydrated_game_promotions is not None:
            self.hydrated_game_promotions = hydrated_game_promotions
        if hydrated_game_sponsorships is not None:
            self.hydrated_game_sponsorships = hydrated_game_sponsorships
        if hydrated_game_tickets is not None:
            self.hydrated_game_tickets = hydrated_game_tickets
        if hydrated_game_tickets_at_bat is not None:
            self.hydrated_game_tickets_at_bat = hydrated_game_tickets_at_bat
        if franchise is not None:
            self.franchise = franchise
        if user_privileges is not None:
            self.user_privileges = user_privileges

    @property
    def requesting_user_role(self):
        """Gets the requesting_user_role of this BaseballTeam.  # noqa: E501


        :return: The requesting_user_role of this BaseballTeam.  # noqa: E501
        :rtype: Role
        """
        return self._requesting_user_role

    @requesting_user_role.setter
    def requesting_user_role(self, requesting_user_role):
        """Sets the requesting_user_role of this BaseballTeam.


        :param requesting_user_role: The requesting_user_role of this BaseballTeam.  # noqa: E501
        :type: Role
        """

        self._requesting_user_role = requesting_user_role

    @property
    def id(self):
        """Gets the id of this BaseballTeam.  # noqa: E501


        :return: The id of this BaseballTeam.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BaseballTeam.


        :param id: The id of this BaseballTeam.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this BaseballTeam.  # noqa: E501


        :return: The name of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BaseballTeam.


        :param name: The name of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def season(self):
        """Gets the season of this BaseballTeam.  # noqa: E501


        :return: The season of this BaseballTeam.  # noqa: E501
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this BaseballTeam.


        :param season: The season of this BaseballTeam.  # noqa: E501
        :type: int
        """

        self._season = season

    @property
    def str_season(self):
        """Gets the str_season of this BaseballTeam.  # noqa: E501


        :return: The str_season of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._str_season

    @str_season.setter
    def str_season(self, str_season):
        """Sets the str_season of this BaseballTeam.


        :param str_season: The str_season of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._str_season = str_season

    @property
    def venue(self):
        """Gets the venue of this BaseballTeam.  # noqa: E501


        :return: The venue of this BaseballTeam.  # noqa: E501
        :rtype: Venue
        """
        return self._venue

    @venue.setter
    def venue(self, venue):
        """Sets the venue of this BaseballTeam.


        :param venue: The venue of this BaseballTeam.  # noqa: E501
        :type: Venue
        """

        self._venue = venue

    @property
    def spring_venue(self):
        """Gets the spring_venue of this BaseballTeam.  # noqa: E501


        :return: The spring_venue of this BaseballTeam.  # noqa: E501
        :rtype: Venue
        """
        return self._spring_venue

    @spring_venue.setter
    def spring_venue(self, spring_venue):
        """Sets the spring_venue of this BaseballTeam.


        :param spring_venue: The spring_venue of this BaseballTeam.  # noqa: E501
        :type: Venue
        """

        self._spring_venue = spring_venue

    @property
    def team_code(self):
        """Gets the team_code of this BaseballTeam.  # noqa: E501


        :return: The team_code of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._team_code

    @team_code.setter
    def team_code(self, team_code):
        """Sets the team_code of this BaseballTeam.


        :param team_code: The team_code of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._team_code = team_code

    @property
    def file_code(self):
        """Gets the file_code of this BaseballTeam.  # noqa: E501


        :return: The file_code of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._file_code

    @file_code.setter
    def file_code(self, file_code):
        """Sets the file_code of this BaseballTeam.


        :param file_code: The file_code of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._file_code = file_code

    @property
    def abbreviation(self):
        """Gets the abbreviation of this BaseballTeam.  # noqa: E501


        :return: The abbreviation of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._abbreviation

    @abbreviation.setter
    def abbreviation(self, abbreviation):
        """Sets the abbreviation of this BaseballTeam.


        :param abbreviation: The abbreviation of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._abbreviation = abbreviation

    @property
    def first_year_of_play(self):
        """Gets the first_year_of_play of this BaseballTeam.  # noqa: E501


        :return: The first_year_of_play of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._first_year_of_play

    @first_year_of_play.setter
    def first_year_of_play(self, first_year_of_play):
        """Sets the first_year_of_play of this BaseballTeam.


        :param first_year_of_play: The first_year_of_play of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._first_year_of_play = first_year_of_play

    @property
    def team_name(self):
        """Gets the team_name of this BaseballTeam.  # noqa: E501


        :return: The team_name of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._team_name

    @team_name.setter
    def team_name(self, team_name):
        """Sets the team_name of this BaseballTeam.


        :param team_name: The team_name of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._team_name = team_name

    @property
    def location_name(self):
        """Gets the location_name of this BaseballTeam.  # noqa: E501


        :return: The location_name of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._location_name

    @location_name.setter
    def location_name(self, location_name):
        """Sets the location_name of this BaseballTeam.


        :param location_name: The location_name of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._location_name = location_name

    @property
    def active(self):
        """Gets the active of this BaseballTeam.  # noqa: E501


        :return: The active of this BaseballTeam.  # noqa: E501
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this BaseballTeam.


        :param active: The active of this BaseballTeam.  # noqa: E501
        :type: bool
        """

        self._active = active

    @property
    def placeholder(self):
        """Gets the placeholder of this BaseballTeam.  # noqa: E501


        :return: The placeholder of this BaseballTeam.  # noqa: E501
        :rtype: bool
        """
        return self._placeholder

    @placeholder.setter
    def placeholder(self, placeholder):
        """Sets the placeholder of this BaseballTeam.


        :param placeholder: The placeholder of this BaseballTeam.  # noqa: E501
        :type: bool
        """

        self._placeholder = placeholder

    @property
    def roster(self):
        """Gets the roster of this BaseballTeam.  # noqa: E501


        :return: The roster of this BaseballTeam.  # noqa: E501
        :rtype: BaseballRoster
        """
        return self._roster

    @roster.setter
    def roster(self, roster):
        """Sets the roster of this BaseballTeam.


        :param roster: The roster of this BaseballTeam.  # noqa: E501
        :type: BaseballRoster
        """

        self._roster = roster

    @property
    def next_game_schedule(self):
        """Gets the next_game_schedule of this BaseballTeam.  # noqa: E501


        :return: The next_game_schedule of this BaseballTeam.  # noqa: E501
        :rtype: BaseballSchedule
        """
        return self._next_game_schedule

    @next_game_schedule.setter
    def next_game_schedule(self, next_game_schedule):
        """Sets the next_game_schedule of this BaseballTeam.


        :param next_game_schedule: The next_game_schedule of this BaseballTeam.  # noqa: E501
        :type: BaseballSchedule
        """

        self._next_game_schedule = next_game_schedule

    @property
    def previous_game_schedule(self):
        """Gets the previous_game_schedule of this BaseballTeam.  # noqa: E501


        :return: The previous_game_schedule of this BaseballTeam.  # noqa: E501
        :rtype: BaseballSchedule
        """
        return self._previous_game_schedule

    @previous_game_schedule.setter
    def previous_game_schedule(self, previous_game_schedule):
        """Sets the previous_game_schedule of this BaseballTeam.


        :param previous_game_schedule: The previous_game_schedule of this BaseballTeam.  # noqa: E501
        :type: BaseballSchedule
        """

        self._previous_game_schedule = previous_game_schedule

    @property
    def next_schedule(self):
        """Gets the next_schedule of this BaseballTeam.  # noqa: E501


        :return: The next_schedule of this BaseballTeam.  # noqa: E501
        :rtype: BaseballSchedule
        """
        return self._next_schedule

    @next_schedule.setter
    def next_schedule(self, next_schedule):
        """Sets the next_schedule of this BaseballTeam.


        :param next_schedule: The next_schedule of this BaseballTeam.  # noqa: E501
        :type: BaseballSchedule
        """

        self._next_schedule = next_schedule

    @property
    def previous_schedule(self):
        """Gets the previous_schedule of this BaseballTeam.  # noqa: E501


        :return: The previous_schedule of this BaseballTeam.  # noqa: E501
        :rtype: BaseballSchedule
        """
        return self._previous_schedule

    @previous_schedule.setter
    def previous_schedule(self, previous_schedule):
        """Sets the previous_schedule of this BaseballTeam.


        :param previous_schedule: The previous_schedule of this BaseballTeam.  # noqa: E501
        :type: BaseballSchedule
        """

        self._previous_schedule = previous_schedule

    @property
    def content(self):
        """Gets the content of this BaseballTeam.  # noqa: E501


        :return: The content of this BaseballTeam.  # noqa: E501
        :rtype: TeamContentCms
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this BaseballTeam.


        :param content: The content of this BaseballTeam.  # noqa: E501
        :type: TeamContentCms
        """

        self._content = content

    @property
    def device_properties(self):
        """Gets the device_properties of this BaseballTeam.  # noqa: E501


        :return: The device_properties of this BaseballTeam.  # noqa: E501
        :rtype: JsonNode
        """
        return self._device_properties

    @device_properties.setter
    def device_properties(self, device_properties):
        """Sets the device_properties of this BaseballTeam.


        :param device_properties: The device_properties of this BaseballTeam.  # noqa: E501
        :type: JsonNode
        """

        self._device_properties = device_properties

    @property
    def tickets(self):
        """Gets the tickets of this BaseballTeam.  # noqa: E501


        :return: The tickets of this BaseballTeam.  # noqa: E501
        :rtype: list[BaseballTicket]
        """
        return self._tickets

    @tickets.setter
    def tickets(self, tickets):
        """Sets the tickets of this BaseballTeam.


        :param tickets: The tickets of this BaseballTeam.  # noqa: E501
        :type: list[BaseballTicket]
        """

        self._tickets = tickets

    @property
    def playoff_info(self):
        """Gets the playoff_info of this BaseballTeam.  # noqa: E501


        :return: The playoff_info of this BaseballTeam.  # noqa: E501
        :rtype: TeamPlayoffs
        """
        return self._playoff_info

    @playoff_info.setter
    def playoff_info(self, playoff_info):
        """Sets the playoff_info of this BaseballTeam.


        :param playoff_info: The playoff_info of this BaseballTeam.  # noqa: E501
        :type: TeamPlayoffs
        """

        self._playoff_info = playoff_info

    @property
    def home_away(self):
        """Gets the home_away of this BaseballTeam.  # noqa: E501


        :return: The home_away of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._home_away

    @home_away.setter
    def home_away(self, home_away):
        """Sets the home_away of this BaseballTeam.


        :param home_away: The home_away of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._home_away = home_away

    @property
    def record(self):
        """Gets the record of this BaseballTeam.  # noqa: E501


        :return: The record of this BaseballTeam.  # noqa: E501
        :rtype: BaseballTeamStandingsRecord
        """
        return self._record

    @record.setter
    def record(self, record):
        """Sets the record of this BaseballTeam.


        :param record: The record of this BaseballTeam.  # noqa: E501
        :type: BaseballTeamStandingsRecord
        """

        self._record = record

    @property
    def team_stats(self):
        """Gets the team_stats of this BaseballTeam.  # noqa: E501


        :return: The team_stats of this BaseballTeam.  # noqa: E501
        :rtype: list[StatContainer]
        """
        return self._team_stats

    @team_stats.setter
    def team_stats(self, team_stats):
        """Sets the team_stats of this BaseballTeam.


        :param team_stats: The team_stats of this BaseballTeam.  # noqa: E501
        :type: list[StatContainer]
        """

        self._team_stats = team_stats

    @property
    def team_leaders(self):
        """Gets the team_leaders of this BaseballTeam.  # noqa: E501


        :return: The team_leaders of this BaseballTeam.  # noqa: E501
        :rtype: list[Leaders]
        """
        return self._team_leaders

    @team_leaders.setter
    def team_leaders(self, team_leaders):
        """Sets the team_leaders of this BaseballTeam.


        :param team_leaders: The team_leaders of this BaseballTeam.  # noqa: E501
        :type: list[Leaders]
        """

        self._team_leaders = team_leaders

    @property
    def other_team_names(self):
        """Gets the other_team_names of this BaseballTeam.  # noqa: E501


        :return: The other_team_names of this BaseballTeam.  # noqa: E501
        :rtype: OtherTeamNames
        """
        return self._other_team_names

    @other_team_names.setter
    def other_team_names(self, other_team_names):
        """Sets the other_team_names of this BaseballTeam.


        :param other_team_names: The other_team_names of this BaseballTeam.  # noqa: E501
        :type: OtherTeamNames
        """

        self._other_team_names = other_team_names

    @property
    def social_media_info(self):
        """Gets the social_media_info of this BaseballTeam.  # noqa: E501


        :return: The social_media_info of this BaseballTeam.  # noqa: E501
        :rtype: SocialMediaInfo
        """
        return self._social_media_info

    @social_media_info.setter
    def social_media_info(self, social_media_info):
        """Sets the social_media_info of this BaseballTeam.


        :param social_media_info: The social_media_info of this BaseballTeam.  # noqa: E501
        :type: SocialMediaInfo
        """

        self._social_media_info = social_media_info

    @property
    def twitter(self):
        """Gets the twitter of this BaseballTeam.  # noqa: E501


        :return: The twitter of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._twitter

    @twitter.setter
    def twitter(self, twitter):
        """Sets the twitter of this BaseballTeam.


        :param twitter: The twitter of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._twitter = twitter

    @property
    def league_id(self):
        """Gets the league_id of this BaseballTeam.  # noqa: E501


        :return: The league_id of this BaseballTeam.  # noqa: E501
        :rtype: int
        """
        return self._league_id

    @league_id.setter
    def league_id(self, league_id):
        """Sets the league_id of this BaseballTeam.


        :param league_id: The league_id of this BaseballTeam.  # noqa: E501
        :type: int
        """

        self._league_id = league_id

    @property
    def team_designation(self):
        """Gets the team_designation of this BaseballTeam.  # noqa: E501


        :return: The team_designation of this BaseballTeam.  # noqa: E501
        :rtype: TeamDesignationEnum
        """
        return self._team_designation

    @team_designation.setter
    def team_designation(self, team_designation):
        """Sets the team_designation of this BaseballTeam.


        :param team_designation: The team_designation of this BaseballTeam.  # noqa: E501
        :type: TeamDesignationEnum
        """

        self._team_designation = team_designation

    @property
    def parent_org_id(self):
        """Gets the parent_org_id of this BaseballTeam.  # noqa: E501


        :return: The parent_org_id of this BaseballTeam.  # noqa: E501
        :rtype: int
        """
        return self._parent_org_id

    @parent_org_id.setter
    def parent_org_id(self, parent_org_id):
        """Sets the parent_org_id of this BaseballTeam.


        :param parent_org_id: The parent_org_id of this BaseballTeam.  # noqa: E501
        :type: int
        """

        self._parent_org_id = parent_org_id

    @property
    def parent_org_name(self):
        """Gets the parent_org_name of this BaseballTeam.  # noqa: E501


        :return: The parent_org_name of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._parent_org_name

    @parent_org_name.setter
    def parent_org_name(self, parent_org_name):
        """Sets the parent_org_name of this BaseballTeam.


        :param parent_org_name: The parent_org_name of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._parent_org_name = parent_org_name

    @property
    def seed_number(self):
        """Gets the seed_number of this BaseballTeam.  # noqa: E501


        :return: The seed_number of this BaseballTeam.  # noqa: E501
        :rtype: int
        """
        return self._seed_number

    @seed_number.setter
    def seed_number(self, seed_number):
        """Sets the seed_number of this BaseballTeam.


        :param seed_number: The seed_number of this BaseballTeam.  # noqa: E501
        :type: int
        """

        self._seed_number = seed_number

    @property
    def franchise_name(self):
        """Gets the franchise_name of this BaseballTeam.  # noqa: E501


        :return: The franchise_name of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._franchise_name

    @franchise_name.setter
    def franchise_name(self, franchise_name):
        """Sets the franchise_name of this BaseballTeam.


        :param franchise_name: The franchise_name of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._franchise_name = franchise_name

    @property
    def club_name(self):
        """Gets the club_name of this BaseballTeam.  # noqa: E501


        :return: The club_name of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._club_name

    @club_name.setter
    def club_name(self, club_name):
        """Sets the club_name of this BaseballTeam.


        :param club_name: The club_name of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._club_name = club_name

    @property
    def location(self):
        """Gets the location of this BaseballTeam.  # noqa: E501


        :return: The location of this BaseballTeam.  # noqa: E501
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this BaseballTeam.


        :param location: The location of this BaseballTeam.  # noqa: E501
        :type: Location
        """

        self._location = location

    @property
    def spring_league(self):
        """Gets the spring_league of this BaseballTeam.  # noqa: E501


        :return: The spring_league of this BaseballTeam.  # noqa: E501
        :rtype: League
        """
        return self._spring_league

    @spring_league.setter
    def spring_league(self, spring_league):
        """Sets the spring_league of this BaseballTeam.


        :param spring_league: The spring_league of this BaseballTeam.  # noqa: E501
        :type: League
        """

        self._spring_league = spring_league

    @property
    def xref_ids(self):
        """Gets the xref_ids of this BaseballTeam.  # noqa: E501


        :return: The xref_ids of this BaseballTeam.  # noqa: E501
        :rtype: list[XrefId]
        """
        return self._xref_ids

    @xref_ids.setter
    def xref_ids(self, xref_ids):
        """Sets the xref_ids of this BaseballTeam.


        :param xref_ids: The xref_ids of this BaseballTeam.  # noqa: E501
        :type: list[XrefId]
        """

        self._xref_ids = xref_ids

    @property
    def all_star_status(self):
        """Gets the all_star_status of this BaseballTeam.  # noqa: E501


        :return: The all_star_status of this BaseballTeam.  # noqa: E501
        :rtype: AllStarEnum
        """
        return self._all_star_status

    @all_star_status.setter
    def all_star_status(self, all_star_status):
        """Sets the all_star_status of this BaseballTeam.


        :param all_star_status: The all_star_status of this BaseballTeam.  # noqa: E501
        :type: AllStarEnum
        """

        self._all_star_status = all_star_status

    @property
    def team_seq(self):
        """Gets the team_seq of this BaseballTeam.  # noqa: E501


        :return: The team_seq of this BaseballTeam.  # noqa: E501
        :rtype: int
        """
        return self._team_seq

    @team_seq.setter
    def team_seq(self, team_seq):
        """Sets the team_seq of this BaseballTeam.


        :param team_seq: The team_seq of this BaseballTeam.  # noqa: E501
        :type: int
        """

        self._team_seq = team_seq

    @property
    def name_language_history_start(self):
        """Gets the name_language_history_start of this BaseballTeam.  # noqa: E501


        :return: The name_language_history_start of this BaseballTeam.  # noqa: E501
        :rtype: date
        """
        return self._name_language_history_start

    @name_language_history_start.setter
    def name_language_history_start(self, name_language_history_start):
        """Sets the name_language_history_start of this BaseballTeam.


        :param name_language_history_start: The name_language_history_start of this BaseballTeam.  # noqa: E501
        :type: date
        """

        self._name_language_history_start = name_language_history_start

    @property
    def name_language_history_end(self):
        """Gets the name_language_history_end of this BaseballTeam.  # noqa: E501


        :return: The name_language_history_end of this BaseballTeam.  # noqa: E501
        :rtype: date
        """
        return self._name_language_history_end

    @name_language_history_end.setter
    def name_language_history_end(self, name_language_history_end):
        """Sets the name_language_history_end of this BaseballTeam.


        :param name_language_history_end: The name_language_history_end of this BaseballTeam.  # noqa: E501
        :type: date
        """

        self._name_language_history_end = name_language_history_end

    @property
    def cache_key(self):
        """Gets the cache_key of this BaseballTeam.  # noqa: E501


        :return: The cache_key of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._cache_key

    @cache_key.setter
    def cache_key(self, cache_key):
        """Sets the cache_key of this BaseballTeam.


        :param cache_key: The cache_key of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._cache_key = cache_key

    @property
    def short_name(self):
        """Gets the short_name of this BaseballTeam.  # noqa: E501


        :return: The short_name of this BaseballTeam.  # noqa: E501
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this BaseballTeam.


        :param short_name: The short_name of this BaseballTeam.  # noqa: E501
        :type: str
        """

        self._short_name = short_name

    @property
    def league(self):
        """Gets the league of this BaseballTeam.  # noqa: E501


        :return: The league of this BaseballTeam.  # noqa: E501
        :rtype: League
        """
        return self._league

    @league.setter
    def league(self, league):
        """Sets the league of this BaseballTeam.


        :param league: The league of this BaseballTeam.  # noqa: E501
        :type: League
        """

        self._league = league

    @property
    def sport(self):
        """Gets the sport of this BaseballTeam.  # noqa: E501


        :return: The sport of this BaseballTeam.  # noqa: E501
        :rtype: Sport
        """
        return self._sport

    @sport.setter
    def sport(self, sport):
        """Sets the sport of this BaseballTeam.


        :param sport: The sport of this BaseballTeam.  # noqa: E501
        :type: Sport
        """

        self._sport = sport

    @property
    def division(self):
        """Gets the division of this BaseballTeam.  # noqa: E501


        :return: The division of this BaseballTeam.  # noqa: E501
        :rtype: Division
        """
        return self._division

    @division.setter
    def division(self, division):
        """Sets the division of this BaseballTeam.


        :param division: The division of this BaseballTeam.  # noqa: E501
        :type: Division
        """

        self._division = division

    @property
    def conference(self):
        """Gets the conference of this BaseballTeam.  # noqa: E501


        :return: The conference of this BaseballTeam.  # noqa: E501
        :rtype: Conference
        """
        return self._conference

    @conference.setter
    def conference(self, conference):
        """Sets the conference of this BaseballTeam.


        :param conference: The conference of this BaseballTeam.  # noqa: E501
        :type: Conference
        """

        self._conference = conference

    @property
    def hydrated_social(self):
        """Gets the hydrated_social of this BaseballTeam.  # noqa: E501


        :return: The hydrated_social of this BaseballTeam.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._hydrated_social

    @hydrated_social.setter
    def hydrated_social(self, hydrated_social):
        """Sets the hydrated_social of this BaseballTeam.


        :param hydrated_social: The hydrated_social of this BaseballTeam.  # noqa: E501
        :type: dict(str, object)
        """

        self._hydrated_social = hydrated_social

    @property
    def hydrated_device_properties(self):
        """Gets the hydrated_device_properties of this BaseballTeam.  # noqa: E501


        :return: The hydrated_device_properties of this BaseballTeam.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._hydrated_device_properties

    @hydrated_device_properties.setter
    def hydrated_device_properties(self, hydrated_device_properties):
        """Sets the hydrated_device_properties of this BaseballTeam.


        :param hydrated_device_properties: The hydrated_device_properties of this BaseballTeam.  # noqa: E501
        :type: dict(str, object)
        """

        self._hydrated_device_properties = hydrated_device_properties

    @property
    def hydrated_game_promotions_at_bat(self):
        """Gets the hydrated_game_promotions_at_bat of this BaseballTeam.  # noqa: E501


        :return: The hydrated_game_promotions_at_bat of this BaseballTeam.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._hydrated_game_promotions_at_bat

    @hydrated_game_promotions_at_bat.setter
    def hydrated_game_promotions_at_bat(self, hydrated_game_promotions_at_bat):
        """Sets the hydrated_game_promotions_at_bat of this BaseballTeam.


        :param hydrated_game_promotions_at_bat: The hydrated_game_promotions_at_bat of this BaseballTeam.  # noqa: E501
        :type: dict(str, object)
        """

        self._hydrated_game_promotions_at_bat = hydrated_game_promotions_at_bat

    @property
    def hydrated_game_promotions(self):
        """Gets the hydrated_game_promotions of this BaseballTeam.  # noqa: E501


        :return: The hydrated_game_promotions of this BaseballTeam.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._hydrated_game_promotions

    @hydrated_game_promotions.setter
    def hydrated_game_promotions(self, hydrated_game_promotions):
        """Sets the hydrated_game_promotions of this BaseballTeam.


        :param hydrated_game_promotions: The hydrated_game_promotions of this BaseballTeam.  # noqa: E501
        :type: dict(str, object)
        """

        self._hydrated_game_promotions = hydrated_game_promotions

    @property
    def hydrated_game_sponsorships(self):
        """Gets the hydrated_game_sponsorships of this BaseballTeam.  # noqa: E501


        :return: The hydrated_game_sponsorships of this BaseballTeam.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._hydrated_game_sponsorships

    @hydrated_game_sponsorships.setter
    def hydrated_game_sponsorships(self, hydrated_game_sponsorships):
        """Sets the hydrated_game_sponsorships of this BaseballTeam.


        :param hydrated_game_sponsorships: The hydrated_game_sponsorships of this BaseballTeam.  # noqa: E501
        :type: dict(str, object)
        """

        self._hydrated_game_sponsorships = hydrated_game_sponsorships

    @property
    def hydrated_game_tickets(self):
        """Gets the hydrated_game_tickets of this BaseballTeam.  # noqa: E501


        :return: The hydrated_game_tickets of this BaseballTeam.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._hydrated_game_tickets

    @hydrated_game_tickets.setter
    def hydrated_game_tickets(self, hydrated_game_tickets):
        """Sets the hydrated_game_tickets of this BaseballTeam.


        :param hydrated_game_tickets: The hydrated_game_tickets of this BaseballTeam.  # noqa: E501
        :type: dict(str, object)
        """

        self._hydrated_game_tickets = hydrated_game_tickets

    @property
    def hydrated_game_tickets_at_bat(self):
        """Gets the hydrated_game_tickets_at_bat of this BaseballTeam.  # noqa: E501


        :return: The hydrated_game_tickets_at_bat of this BaseballTeam.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._hydrated_game_tickets_at_bat

    @hydrated_game_tickets_at_bat.setter
    def hydrated_game_tickets_at_bat(self, hydrated_game_tickets_at_bat):
        """Sets the hydrated_game_tickets_at_bat of this BaseballTeam.


        :param hydrated_game_tickets_at_bat: The hydrated_game_tickets_at_bat of this BaseballTeam.  # noqa: E501
        :type: dict(str, object)
        """

        self._hydrated_game_tickets_at_bat = hydrated_game_tickets_at_bat

    @property
    def franchise(self):
        """Gets the franchise of this BaseballTeam.  # noqa: E501


        :return: The franchise of this BaseballTeam.  # noqa: E501
        :rtype: Franchise
        """
        return self._franchise

    @franchise.setter
    def franchise(self, franchise):
        """Sets the franchise of this BaseballTeam.


        :param franchise: The franchise of this BaseballTeam.  # noqa: E501
        :type: Franchise
        """

        self._franchise = franchise

    @property
    def user_privileges(self):
        """Gets the user_privileges of this BaseballTeam.  # noqa: E501


        :return: The user_privileges of this BaseballTeam.  # noqa: E501
        :rtype: list[Privilege]
        """
        return self._user_privileges

    @user_privileges.setter
    def user_privileges(self, user_privileges):
        """Sets the user_privileges of this BaseballTeam.


        :param user_privileges: The user_privileges of this BaseballTeam.  # noqa: E501
        :type: list[Privilege]
        """

        self._user_privileges = user_privileges

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BaseballTeam, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BaseballTeam):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
