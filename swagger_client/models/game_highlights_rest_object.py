# coding: utf-8

"""
    Stats API Documentation

    Official API for Major League Baseball.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GameHighlightsRestObject(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'copyright': 'str',
        'scoreboard': 'JsonNode',
        'game_center': 'JsonNode',
        'milestone': 'JsonNode',
        'highlights': 'JsonNode',
        'live': 'JsonNode',
        'scoreboard_preview': 'JsonNode'
    }

    attribute_map = {
        'copyright': 'copyright',
        'scoreboard': 'scoreboard',
        'game_center': 'gameCenter',
        'milestone': 'milestone',
        'highlights': 'highlights',
        'live': 'live',
        'scoreboard_preview': 'scoreboardPreview'
    }

    def __init__(self, copyright=None, scoreboard=None, game_center=None, milestone=None, highlights=None, live=None, scoreboard_preview=None):  # noqa: E501
        """GameHighlightsRestObject - a model defined in Swagger"""  # noqa: E501
        self._copyright = None
        self._scoreboard = None
        self._game_center = None
        self._milestone = None
        self._highlights = None
        self._live = None
        self._scoreboard_preview = None
        self.discriminator = None
        if copyright is not None:
            self.copyright = copyright
        if scoreboard is not None:
            self.scoreboard = scoreboard
        if game_center is not None:
            self.game_center = game_center
        if milestone is not None:
            self.milestone = milestone
        if highlights is not None:
            self.highlights = highlights
        if live is not None:
            self.live = live
        if scoreboard_preview is not None:
            self.scoreboard_preview = scoreboard_preview

    @property
    def copyright(self):
        """Gets the copyright of this GameHighlightsRestObject.  # noqa: E501


        :return: The copyright of this GameHighlightsRestObject.  # noqa: E501
        :rtype: str
        """
        return self._copyright

    @copyright.setter
    def copyright(self, copyright):
        """Sets the copyright of this GameHighlightsRestObject.


        :param copyright: The copyright of this GameHighlightsRestObject.  # noqa: E501
        :type: str
        """

        self._copyright = copyright

    @property
    def scoreboard(self):
        """Gets the scoreboard of this GameHighlightsRestObject.  # noqa: E501


        :return: The scoreboard of this GameHighlightsRestObject.  # noqa: E501
        :rtype: JsonNode
        """
        return self._scoreboard

    @scoreboard.setter
    def scoreboard(self, scoreboard):
        """Sets the scoreboard of this GameHighlightsRestObject.


        :param scoreboard: The scoreboard of this GameHighlightsRestObject.  # noqa: E501
        :type: JsonNode
        """

        self._scoreboard = scoreboard

    @property
    def game_center(self):
        """Gets the game_center of this GameHighlightsRestObject.  # noqa: E501


        :return: The game_center of this GameHighlightsRestObject.  # noqa: E501
        :rtype: JsonNode
        """
        return self._game_center

    @game_center.setter
    def game_center(self, game_center):
        """Sets the game_center of this GameHighlightsRestObject.


        :param game_center: The game_center of this GameHighlightsRestObject.  # noqa: E501
        :type: JsonNode
        """

        self._game_center = game_center

    @property
    def milestone(self):
        """Gets the milestone of this GameHighlightsRestObject.  # noqa: E501


        :return: The milestone of this GameHighlightsRestObject.  # noqa: E501
        :rtype: JsonNode
        """
        return self._milestone

    @milestone.setter
    def milestone(self, milestone):
        """Sets the milestone of this GameHighlightsRestObject.


        :param milestone: The milestone of this GameHighlightsRestObject.  # noqa: E501
        :type: JsonNode
        """

        self._milestone = milestone

    @property
    def highlights(self):
        """Gets the highlights of this GameHighlightsRestObject.  # noqa: E501


        :return: The highlights of this GameHighlightsRestObject.  # noqa: E501
        :rtype: JsonNode
        """
        return self._highlights

    @highlights.setter
    def highlights(self, highlights):
        """Sets the highlights of this GameHighlightsRestObject.


        :param highlights: The highlights of this GameHighlightsRestObject.  # noqa: E501
        :type: JsonNode
        """

        self._highlights = highlights

    @property
    def live(self):
        """Gets the live of this GameHighlightsRestObject.  # noqa: E501


        :return: The live of this GameHighlightsRestObject.  # noqa: E501
        :rtype: JsonNode
        """
        return self._live

    @live.setter
    def live(self, live):
        """Sets the live of this GameHighlightsRestObject.


        :param live: The live of this GameHighlightsRestObject.  # noqa: E501
        :type: JsonNode
        """

        self._live = live

    @property
    def scoreboard_preview(self):
        """Gets the scoreboard_preview of this GameHighlightsRestObject.  # noqa: E501


        :return: The scoreboard_preview of this GameHighlightsRestObject.  # noqa: E501
        :rtype: JsonNode
        """
        return self._scoreboard_preview

    @scoreboard_preview.setter
    def scoreboard_preview(self, scoreboard_preview):
        """Sets the scoreboard_preview of this GameHighlightsRestObject.


        :param scoreboard_preview: The scoreboard_preview of this GameHighlightsRestObject.  # noqa: E501
        :type: JsonNode
        """

        self._scoreboard_preview = scoreboard_preview

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GameHighlightsRestObject, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GameHighlightsRestObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
