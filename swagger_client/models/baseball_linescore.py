# coding: utf-8

"""
    Stats API Documentation

    Official API for Major League Baseball.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BaseballLinescore(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'requesting_user_role': 'Role',
        'created_at': 'datetime',
        'away_score': 'int',
        'home_score': 'int',
        'game_status': 'IGameStatus',
        'home_team': 'BaseballTeam',
        'away_team': 'BaseballTeam',
        'game_pk': 'int',
        'note': 'str',
        'scheduled_innings': 'int',
        'current_inning': 'int',
        'current_inning_ordinal': 'str',
        'inning_state': 'str',
        'inning_half': 'str',
        'is_top_inning': 'bool',
        'innings': 'list[BaseballInning]',
        'runs_away': 'int',
        'runs_home': 'int',
        'away_hits': 'int',
        'home_hits': 'int',
        'away_errors': 'int',
        'home_errors': 'int',
        'away_left_on_base': 'int',
        'home_left_on_base': 'int',
        'away_is_winner': 'bool',
        'home_is_winner': 'bool',
        'balls': 'int',
        'strikes': 'int',
        'outs': 'int',
        'bat_team': 'BaseballTeam',
        'bat_teams_last_pitcher': 'BaseballPerson',
        'batter_position': 'BaseballPosition',
        'batter': 'BaseballPerson',
        'on_deck': 'BaseballPerson',
        'in_hole': 'BaseballPerson',
        'batting_order': 'int',
        'on_first': 'BaseballPerson',
        'on_second': 'BaseballPerson',
        'on_third': 'BaseballPerson',
        'post_on_first': 'BaseballPerson',
        'post_on_second': 'BaseballPerson',
        'post_on_third': 'BaseballPerson',
        'field_team': 'BaseballTeam',
        'pitcher': 'BaseballPerson',
        'catcher': 'BaseballPerson',
        'first_base': 'BaseballPerson',
        'second_base': 'BaseballPerson',
        'third_base': 'BaseballPerson',
        'shortstop': 'BaseballPerson',
        'left_field': 'BaseballPerson',
        'center_field': 'BaseballPerson',
        'right_field': 'BaseballPerson',
        'field_teams_due_up_batter': 'BaseballPerson',
        'field_teams_due_up_on_deck': 'BaseballPerson',
        'field_teams_due_up_in_hole': 'BaseballPerson',
        'field_teams_batting_order': 'int',
        'players_not_in_field': 'dict(str, BaseballPosition)',
        'tie': 'bool',
        'top_inning': 'bool',
        'hydrated_stats': 'dict(str, object)',
        'user_privileges': 'list[Privilege]'
    }

    attribute_map = {
        'requesting_user_role': 'requestingUserRole',
        'created_at': 'createdAt',
        'away_score': 'awayScore',
        'home_score': 'homeScore',
        'game_status': 'gameStatus',
        'home_team': 'homeTeam',
        'away_team': 'awayTeam',
        'game_pk': 'gamePk',
        'note': 'note',
        'scheduled_innings': 'scheduledInnings',
        'current_inning': 'currentInning',
        'current_inning_ordinal': 'currentInningOrdinal',
        'inning_state': 'inningState',
        'inning_half': 'inningHalf',
        'is_top_inning': 'isTopInning',
        'innings': 'innings',
        'runs_away': 'runsAway',
        'runs_home': 'runsHome',
        'away_hits': 'awayHits',
        'home_hits': 'homeHits',
        'away_errors': 'awayErrors',
        'home_errors': 'homeErrors',
        'away_left_on_base': 'awayLeftOnBase',
        'home_left_on_base': 'homeLeftOnBase',
        'away_is_winner': 'awayIsWinner',
        'home_is_winner': 'homeIsWinner',
        'balls': 'balls',
        'strikes': 'strikes',
        'outs': 'outs',
        'bat_team': 'batTeam',
        'bat_teams_last_pitcher': 'batTeamsLastPitcher',
        'batter_position': 'batterPosition',
        'batter': 'batter',
        'on_deck': 'onDeck',
        'in_hole': 'inHole',
        'batting_order': 'battingOrder',
        'on_first': 'onFirst',
        'on_second': 'onSecond',
        'on_third': 'onThird',
        'post_on_first': 'postOnFirst',
        'post_on_second': 'postOnSecond',
        'post_on_third': 'postOnThird',
        'field_team': 'fieldTeam',
        'pitcher': 'pitcher',
        'catcher': 'catcher',
        'first_base': 'firstBase',
        'second_base': 'secondBase',
        'third_base': 'thirdBase',
        'shortstop': 'shortstop',
        'left_field': 'leftField',
        'center_field': 'centerField',
        'right_field': 'rightField',
        'field_teams_due_up_batter': 'fieldTeamsDueUpBatter',
        'field_teams_due_up_on_deck': 'fieldTeamsDueUpOnDeck',
        'field_teams_due_up_in_hole': 'fieldTeamsDueUpInHole',
        'field_teams_batting_order': 'fieldTeamsBattingOrder',
        'players_not_in_field': 'playersNotInField',
        'tie': 'tie',
        'top_inning': 'topInning',
        'hydrated_stats': 'hydratedStats',
        'user_privileges': 'userPrivileges'
    }

    def __init__(self, requesting_user_role=None, created_at=None, away_score=None, home_score=None, game_status=None, home_team=None, away_team=None, game_pk=None, note=None, scheduled_innings=None, current_inning=None, current_inning_ordinal=None, inning_state=None, inning_half=None, is_top_inning=None, innings=None, runs_away=None, runs_home=None, away_hits=None, home_hits=None, away_errors=None, home_errors=None, away_left_on_base=None, home_left_on_base=None, away_is_winner=None, home_is_winner=None, balls=None, strikes=None, outs=None, bat_team=None, bat_teams_last_pitcher=None, batter_position=None, batter=None, on_deck=None, in_hole=None, batting_order=None, on_first=None, on_second=None, on_third=None, post_on_first=None, post_on_second=None, post_on_third=None, field_team=None, pitcher=None, catcher=None, first_base=None, second_base=None, third_base=None, shortstop=None, left_field=None, center_field=None, right_field=None, field_teams_due_up_batter=None, field_teams_due_up_on_deck=None, field_teams_due_up_in_hole=None, field_teams_batting_order=None, players_not_in_field=None, tie=None, top_inning=None, hydrated_stats=None, user_privileges=None):  # noqa: E501
        """BaseballLinescore - a model defined in Swagger"""  # noqa: E501
        self._requesting_user_role = None
        self._created_at = None
        self._away_score = None
        self._home_score = None
        self._game_status = None
        self._home_team = None
        self._away_team = None
        self._game_pk = None
        self._note = None
        self._scheduled_innings = None
        self._current_inning = None
        self._current_inning_ordinal = None
        self._inning_state = None
        self._inning_half = None
        self._is_top_inning = None
        self._innings = None
        self._runs_away = None
        self._runs_home = None
        self._away_hits = None
        self._home_hits = None
        self._away_errors = None
        self._home_errors = None
        self._away_left_on_base = None
        self._home_left_on_base = None
        self._away_is_winner = None
        self._home_is_winner = None
        self._balls = None
        self._strikes = None
        self._outs = None
        self._bat_team = None
        self._bat_teams_last_pitcher = None
        self._batter_position = None
        self._batter = None
        self._on_deck = None
        self._in_hole = None
        self._batting_order = None
        self._on_first = None
        self._on_second = None
        self._on_third = None
        self._post_on_first = None
        self._post_on_second = None
        self._post_on_third = None
        self._field_team = None
        self._pitcher = None
        self._catcher = None
        self._first_base = None
        self._second_base = None
        self._third_base = None
        self._shortstop = None
        self._left_field = None
        self._center_field = None
        self._right_field = None
        self._field_teams_due_up_batter = None
        self._field_teams_due_up_on_deck = None
        self._field_teams_due_up_in_hole = None
        self._field_teams_batting_order = None
        self._players_not_in_field = None
        self._tie = None
        self._top_inning = None
        self._hydrated_stats = None
        self._user_privileges = None
        self.discriminator = None
        if requesting_user_role is not None:
            self.requesting_user_role = requesting_user_role
        if created_at is not None:
            self.created_at = created_at
        if away_score is not None:
            self.away_score = away_score
        if home_score is not None:
            self.home_score = home_score
        if game_status is not None:
            self.game_status = game_status
        if home_team is not None:
            self.home_team = home_team
        if away_team is not None:
            self.away_team = away_team
        if game_pk is not None:
            self.game_pk = game_pk
        if note is not None:
            self.note = note
        if scheduled_innings is not None:
            self.scheduled_innings = scheduled_innings
        if current_inning is not None:
            self.current_inning = current_inning
        if current_inning_ordinal is not None:
            self.current_inning_ordinal = current_inning_ordinal
        if inning_state is not None:
            self.inning_state = inning_state
        if inning_half is not None:
            self.inning_half = inning_half
        if is_top_inning is not None:
            self.is_top_inning = is_top_inning
        if innings is not None:
            self.innings = innings
        if runs_away is not None:
            self.runs_away = runs_away
        if runs_home is not None:
            self.runs_home = runs_home
        if away_hits is not None:
            self.away_hits = away_hits
        if home_hits is not None:
            self.home_hits = home_hits
        if away_errors is not None:
            self.away_errors = away_errors
        if home_errors is not None:
            self.home_errors = home_errors
        if away_left_on_base is not None:
            self.away_left_on_base = away_left_on_base
        if home_left_on_base is not None:
            self.home_left_on_base = home_left_on_base
        if away_is_winner is not None:
            self.away_is_winner = away_is_winner
        if home_is_winner is not None:
            self.home_is_winner = home_is_winner
        if balls is not None:
            self.balls = balls
        if strikes is not None:
            self.strikes = strikes
        if outs is not None:
            self.outs = outs
        if bat_team is not None:
            self.bat_team = bat_team
        if bat_teams_last_pitcher is not None:
            self.bat_teams_last_pitcher = bat_teams_last_pitcher
        if batter_position is not None:
            self.batter_position = batter_position
        if batter is not None:
            self.batter = batter
        if on_deck is not None:
            self.on_deck = on_deck
        if in_hole is not None:
            self.in_hole = in_hole
        if batting_order is not None:
            self.batting_order = batting_order
        if on_first is not None:
            self.on_first = on_first
        if on_second is not None:
            self.on_second = on_second
        if on_third is not None:
            self.on_third = on_third
        if post_on_first is not None:
            self.post_on_first = post_on_first
        if post_on_second is not None:
            self.post_on_second = post_on_second
        if post_on_third is not None:
            self.post_on_third = post_on_third
        if field_team is not None:
            self.field_team = field_team
        if pitcher is not None:
            self.pitcher = pitcher
        if catcher is not None:
            self.catcher = catcher
        if first_base is not None:
            self.first_base = first_base
        if second_base is not None:
            self.second_base = second_base
        if third_base is not None:
            self.third_base = third_base
        if shortstop is not None:
            self.shortstop = shortstop
        if left_field is not None:
            self.left_field = left_field
        if center_field is not None:
            self.center_field = center_field
        if right_field is not None:
            self.right_field = right_field
        if field_teams_due_up_batter is not None:
            self.field_teams_due_up_batter = field_teams_due_up_batter
        if field_teams_due_up_on_deck is not None:
            self.field_teams_due_up_on_deck = field_teams_due_up_on_deck
        if field_teams_due_up_in_hole is not None:
            self.field_teams_due_up_in_hole = field_teams_due_up_in_hole
        if field_teams_batting_order is not None:
            self.field_teams_batting_order = field_teams_batting_order
        if players_not_in_field is not None:
            self.players_not_in_field = players_not_in_field
        if tie is not None:
            self.tie = tie
        if top_inning is not None:
            self.top_inning = top_inning
        if hydrated_stats is not None:
            self.hydrated_stats = hydrated_stats
        if user_privileges is not None:
            self.user_privileges = user_privileges

    @property
    def requesting_user_role(self):
        """Gets the requesting_user_role of this BaseballLinescore.  # noqa: E501


        :return: The requesting_user_role of this BaseballLinescore.  # noqa: E501
        :rtype: Role
        """
        return self._requesting_user_role

    @requesting_user_role.setter
    def requesting_user_role(self, requesting_user_role):
        """Sets the requesting_user_role of this BaseballLinescore.


        :param requesting_user_role: The requesting_user_role of this BaseballLinescore.  # noqa: E501
        :type: Role
        """

        self._requesting_user_role = requesting_user_role

    @property
    def created_at(self):
        """Gets the created_at of this BaseballLinescore.  # noqa: E501


        :return: The created_at of this BaseballLinescore.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this BaseballLinescore.


        :param created_at: The created_at of this BaseballLinescore.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def away_score(self):
        """Gets the away_score of this BaseballLinescore.  # noqa: E501


        :return: The away_score of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._away_score

    @away_score.setter
    def away_score(self, away_score):
        """Sets the away_score of this BaseballLinescore.


        :param away_score: The away_score of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._away_score = away_score

    @property
    def home_score(self):
        """Gets the home_score of this BaseballLinescore.  # noqa: E501


        :return: The home_score of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._home_score

    @home_score.setter
    def home_score(self, home_score):
        """Sets the home_score of this BaseballLinescore.


        :param home_score: The home_score of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._home_score = home_score

    @property
    def game_status(self):
        """Gets the game_status of this BaseballLinescore.  # noqa: E501


        :return: The game_status of this BaseballLinescore.  # noqa: E501
        :rtype: IGameStatus
        """
        return self._game_status

    @game_status.setter
    def game_status(self, game_status):
        """Sets the game_status of this BaseballLinescore.


        :param game_status: The game_status of this BaseballLinescore.  # noqa: E501
        :type: IGameStatus
        """

        self._game_status = game_status

    @property
    def home_team(self):
        """Gets the home_team of this BaseballLinescore.  # noqa: E501


        :return: The home_team of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballTeam
        """
        return self._home_team

    @home_team.setter
    def home_team(self, home_team):
        """Sets the home_team of this BaseballLinescore.


        :param home_team: The home_team of this BaseballLinescore.  # noqa: E501
        :type: BaseballTeam
        """

        self._home_team = home_team

    @property
    def away_team(self):
        """Gets the away_team of this BaseballLinescore.  # noqa: E501


        :return: The away_team of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballTeam
        """
        return self._away_team

    @away_team.setter
    def away_team(self, away_team):
        """Sets the away_team of this BaseballLinescore.


        :param away_team: The away_team of this BaseballLinescore.  # noqa: E501
        :type: BaseballTeam
        """

        self._away_team = away_team

    @property
    def game_pk(self):
        """Gets the game_pk of this BaseballLinescore.  # noqa: E501


        :return: The game_pk of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._game_pk

    @game_pk.setter
    def game_pk(self, game_pk):
        """Sets the game_pk of this BaseballLinescore.


        :param game_pk: The game_pk of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._game_pk = game_pk

    @property
    def note(self):
        """Gets the note of this BaseballLinescore.  # noqa: E501


        :return: The note of this BaseballLinescore.  # noqa: E501
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this BaseballLinescore.


        :param note: The note of this BaseballLinescore.  # noqa: E501
        :type: str
        """

        self._note = note

    @property
    def scheduled_innings(self):
        """Gets the scheduled_innings of this BaseballLinescore.  # noqa: E501


        :return: The scheduled_innings of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._scheduled_innings

    @scheduled_innings.setter
    def scheduled_innings(self, scheduled_innings):
        """Sets the scheduled_innings of this BaseballLinescore.


        :param scheduled_innings: The scheduled_innings of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._scheduled_innings = scheduled_innings

    @property
    def current_inning(self):
        """Gets the current_inning of this BaseballLinescore.  # noqa: E501


        :return: The current_inning of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._current_inning

    @current_inning.setter
    def current_inning(self, current_inning):
        """Sets the current_inning of this BaseballLinescore.


        :param current_inning: The current_inning of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._current_inning = current_inning

    @property
    def current_inning_ordinal(self):
        """Gets the current_inning_ordinal of this BaseballLinescore.  # noqa: E501


        :return: The current_inning_ordinal of this BaseballLinescore.  # noqa: E501
        :rtype: str
        """
        return self._current_inning_ordinal

    @current_inning_ordinal.setter
    def current_inning_ordinal(self, current_inning_ordinal):
        """Sets the current_inning_ordinal of this BaseballLinescore.


        :param current_inning_ordinal: The current_inning_ordinal of this BaseballLinescore.  # noqa: E501
        :type: str
        """

        self._current_inning_ordinal = current_inning_ordinal

    @property
    def inning_state(self):
        """Gets the inning_state of this BaseballLinescore.  # noqa: E501


        :return: The inning_state of this BaseballLinescore.  # noqa: E501
        :rtype: str
        """
        return self._inning_state

    @inning_state.setter
    def inning_state(self, inning_state):
        """Sets the inning_state of this BaseballLinescore.


        :param inning_state: The inning_state of this BaseballLinescore.  # noqa: E501
        :type: str
        """

        self._inning_state = inning_state

    @property
    def inning_half(self):
        """Gets the inning_half of this BaseballLinescore.  # noqa: E501


        :return: The inning_half of this BaseballLinescore.  # noqa: E501
        :rtype: str
        """
        return self._inning_half

    @inning_half.setter
    def inning_half(self, inning_half):
        """Sets the inning_half of this BaseballLinescore.


        :param inning_half: The inning_half of this BaseballLinescore.  # noqa: E501
        :type: str
        """

        self._inning_half = inning_half

    @property
    def is_top_inning(self):
        """Gets the is_top_inning of this BaseballLinescore.  # noqa: E501


        :return: The is_top_inning of this BaseballLinescore.  # noqa: E501
        :rtype: bool
        """
        return self._is_top_inning

    @is_top_inning.setter
    def is_top_inning(self, is_top_inning):
        """Sets the is_top_inning of this BaseballLinescore.


        :param is_top_inning: The is_top_inning of this BaseballLinescore.  # noqa: E501
        :type: bool
        """

        self._is_top_inning = is_top_inning

    @property
    def innings(self):
        """Gets the innings of this BaseballLinescore.  # noqa: E501


        :return: The innings of this BaseballLinescore.  # noqa: E501
        :rtype: list[BaseballInning]
        """
        return self._innings

    @innings.setter
    def innings(self, innings):
        """Sets the innings of this BaseballLinescore.


        :param innings: The innings of this BaseballLinescore.  # noqa: E501
        :type: list[BaseballInning]
        """

        self._innings = innings

    @property
    def runs_away(self):
        """Gets the runs_away of this BaseballLinescore.  # noqa: E501


        :return: The runs_away of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._runs_away

    @runs_away.setter
    def runs_away(self, runs_away):
        """Sets the runs_away of this BaseballLinescore.


        :param runs_away: The runs_away of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._runs_away = runs_away

    @property
    def runs_home(self):
        """Gets the runs_home of this BaseballLinescore.  # noqa: E501


        :return: The runs_home of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._runs_home

    @runs_home.setter
    def runs_home(self, runs_home):
        """Sets the runs_home of this BaseballLinescore.


        :param runs_home: The runs_home of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._runs_home = runs_home

    @property
    def away_hits(self):
        """Gets the away_hits of this BaseballLinescore.  # noqa: E501


        :return: The away_hits of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._away_hits

    @away_hits.setter
    def away_hits(self, away_hits):
        """Sets the away_hits of this BaseballLinescore.


        :param away_hits: The away_hits of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._away_hits = away_hits

    @property
    def home_hits(self):
        """Gets the home_hits of this BaseballLinescore.  # noqa: E501


        :return: The home_hits of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._home_hits

    @home_hits.setter
    def home_hits(self, home_hits):
        """Sets the home_hits of this BaseballLinescore.


        :param home_hits: The home_hits of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._home_hits = home_hits

    @property
    def away_errors(self):
        """Gets the away_errors of this BaseballLinescore.  # noqa: E501


        :return: The away_errors of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._away_errors

    @away_errors.setter
    def away_errors(self, away_errors):
        """Sets the away_errors of this BaseballLinescore.


        :param away_errors: The away_errors of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._away_errors = away_errors

    @property
    def home_errors(self):
        """Gets the home_errors of this BaseballLinescore.  # noqa: E501


        :return: The home_errors of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._home_errors

    @home_errors.setter
    def home_errors(self, home_errors):
        """Sets the home_errors of this BaseballLinescore.


        :param home_errors: The home_errors of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._home_errors = home_errors

    @property
    def away_left_on_base(self):
        """Gets the away_left_on_base of this BaseballLinescore.  # noqa: E501


        :return: The away_left_on_base of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._away_left_on_base

    @away_left_on_base.setter
    def away_left_on_base(self, away_left_on_base):
        """Sets the away_left_on_base of this BaseballLinescore.


        :param away_left_on_base: The away_left_on_base of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._away_left_on_base = away_left_on_base

    @property
    def home_left_on_base(self):
        """Gets the home_left_on_base of this BaseballLinescore.  # noqa: E501


        :return: The home_left_on_base of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._home_left_on_base

    @home_left_on_base.setter
    def home_left_on_base(self, home_left_on_base):
        """Sets the home_left_on_base of this BaseballLinescore.


        :param home_left_on_base: The home_left_on_base of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._home_left_on_base = home_left_on_base

    @property
    def away_is_winner(self):
        """Gets the away_is_winner of this BaseballLinescore.  # noqa: E501


        :return: The away_is_winner of this BaseballLinescore.  # noqa: E501
        :rtype: bool
        """
        return self._away_is_winner

    @away_is_winner.setter
    def away_is_winner(self, away_is_winner):
        """Sets the away_is_winner of this BaseballLinescore.


        :param away_is_winner: The away_is_winner of this BaseballLinescore.  # noqa: E501
        :type: bool
        """

        self._away_is_winner = away_is_winner

    @property
    def home_is_winner(self):
        """Gets the home_is_winner of this BaseballLinescore.  # noqa: E501


        :return: The home_is_winner of this BaseballLinescore.  # noqa: E501
        :rtype: bool
        """
        return self._home_is_winner

    @home_is_winner.setter
    def home_is_winner(self, home_is_winner):
        """Sets the home_is_winner of this BaseballLinescore.


        :param home_is_winner: The home_is_winner of this BaseballLinescore.  # noqa: E501
        :type: bool
        """

        self._home_is_winner = home_is_winner

    @property
    def balls(self):
        """Gets the balls of this BaseballLinescore.  # noqa: E501


        :return: The balls of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._balls

    @balls.setter
    def balls(self, balls):
        """Sets the balls of this BaseballLinescore.


        :param balls: The balls of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._balls = balls

    @property
    def strikes(self):
        """Gets the strikes of this BaseballLinescore.  # noqa: E501


        :return: The strikes of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._strikes

    @strikes.setter
    def strikes(self, strikes):
        """Sets the strikes of this BaseballLinescore.


        :param strikes: The strikes of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._strikes = strikes

    @property
    def outs(self):
        """Gets the outs of this BaseballLinescore.  # noqa: E501


        :return: The outs of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._outs

    @outs.setter
    def outs(self, outs):
        """Sets the outs of this BaseballLinescore.


        :param outs: The outs of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._outs = outs

    @property
    def bat_team(self):
        """Gets the bat_team of this BaseballLinescore.  # noqa: E501


        :return: The bat_team of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballTeam
        """
        return self._bat_team

    @bat_team.setter
    def bat_team(self, bat_team):
        """Sets the bat_team of this BaseballLinescore.


        :param bat_team: The bat_team of this BaseballLinescore.  # noqa: E501
        :type: BaseballTeam
        """

        self._bat_team = bat_team

    @property
    def bat_teams_last_pitcher(self):
        """Gets the bat_teams_last_pitcher of this BaseballLinescore.  # noqa: E501


        :return: The bat_teams_last_pitcher of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._bat_teams_last_pitcher

    @bat_teams_last_pitcher.setter
    def bat_teams_last_pitcher(self, bat_teams_last_pitcher):
        """Sets the bat_teams_last_pitcher of this BaseballLinescore.


        :param bat_teams_last_pitcher: The bat_teams_last_pitcher of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._bat_teams_last_pitcher = bat_teams_last_pitcher

    @property
    def batter_position(self):
        """Gets the batter_position of this BaseballLinescore.  # noqa: E501


        :return: The batter_position of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPosition
        """
        return self._batter_position

    @batter_position.setter
    def batter_position(self, batter_position):
        """Sets the batter_position of this BaseballLinescore.


        :param batter_position: The batter_position of this BaseballLinescore.  # noqa: E501
        :type: BaseballPosition
        """

        self._batter_position = batter_position

    @property
    def batter(self):
        """Gets the batter of this BaseballLinescore.  # noqa: E501


        :return: The batter of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._batter

    @batter.setter
    def batter(self, batter):
        """Sets the batter of this BaseballLinescore.


        :param batter: The batter of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._batter = batter

    @property
    def on_deck(self):
        """Gets the on_deck of this BaseballLinescore.  # noqa: E501


        :return: The on_deck of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._on_deck

    @on_deck.setter
    def on_deck(self, on_deck):
        """Sets the on_deck of this BaseballLinescore.


        :param on_deck: The on_deck of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._on_deck = on_deck

    @property
    def in_hole(self):
        """Gets the in_hole of this BaseballLinescore.  # noqa: E501


        :return: The in_hole of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._in_hole

    @in_hole.setter
    def in_hole(self, in_hole):
        """Sets the in_hole of this BaseballLinescore.


        :param in_hole: The in_hole of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._in_hole = in_hole

    @property
    def batting_order(self):
        """Gets the batting_order of this BaseballLinescore.  # noqa: E501


        :return: The batting_order of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._batting_order

    @batting_order.setter
    def batting_order(self, batting_order):
        """Sets the batting_order of this BaseballLinescore.


        :param batting_order: The batting_order of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._batting_order = batting_order

    @property
    def on_first(self):
        """Gets the on_first of this BaseballLinescore.  # noqa: E501


        :return: The on_first of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._on_first

    @on_first.setter
    def on_first(self, on_first):
        """Sets the on_first of this BaseballLinescore.


        :param on_first: The on_first of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._on_first = on_first

    @property
    def on_second(self):
        """Gets the on_second of this BaseballLinescore.  # noqa: E501


        :return: The on_second of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._on_second

    @on_second.setter
    def on_second(self, on_second):
        """Sets the on_second of this BaseballLinescore.


        :param on_second: The on_second of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._on_second = on_second

    @property
    def on_third(self):
        """Gets the on_third of this BaseballLinescore.  # noqa: E501


        :return: The on_third of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._on_third

    @on_third.setter
    def on_third(self, on_third):
        """Sets the on_third of this BaseballLinescore.


        :param on_third: The on_third of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._on_third = on_third

    @property
    def post_on_first(self):
        """Gets the post_on_first of this BaseballLinescore.  # noqa: E501


        :return: The post_on_first of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._post_on_first

    @post_on_first.setter
    def post_on_first(self, post_on_first):
        """Sets the post_on_first of this BaseballLinescore.


        :param post_on_first: The post_on_first of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._post_on_first = post_on_first

    @property
    def post_on_second(self):
        """Gets the post_on_second of this BaseballLinescore.  # noqa: E501


        :return: The post_on_second of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._post_on_second

    @post_on_second.setter
    def post_on_second(self, post_on_second):
        """Sets the post_on_second of this BaseballLinescore.


        :param post_on_second: The post_on_second of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._post_on_second = post_on_second

    @property
    def post_on_third(self):
        """Gets the post_on_third of this BaseballLinescore.  # noqa: E501


        :return: The post_on_third of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._post_on_third

    @post_on_third.setter
    def post_on_third(self, post_on_third):
        """Sets the post_on_third of this BaseballLinescore.


        :param post_on_third: The post_on_third of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._post_on_third = post_on_third

    @property
    def field_team(self):
        """Gets the field_team of this BaseballLinescore.  # noqa: E501


        :return: The field_team of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballTeam
        """
        return self._field_team

    @field_team.setter
    def field_team(self, field_team):
        """Sets the field_team of this BaseballLinescore.


        :param field_team: The field_team of this BaseballLinescore.  # noqa: E501
        :type: BaseballTeam
        """

        self._field_team = field_team

    @property
    def pitcher(self):
        """Gets the pitcher of this BaseballLinescore.  # noqa: E501


        :return: The pitcher of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._pitcher

    @pitcher.setter
    def pitcher(self, pitcher):
        """Sets the pitcher of this BaseballLinescore.


        :param pitcher: The pitcher of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._pitcher = pitcher

    @property
    def catcher(self):
        """Gets the catcher of this BaseballLinescore.  # noqa: E501


        :return: The catcher of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._catcher

    @catcher.setter
    def catcher(self, catcher):
        """Sets the catcher of this BaseballLinescore.


        :param catcher: The catcher of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._catcher = catcher

    @property
    def first_base(self):
        """Gets the first_base of this BaseballLinescore.  # noqa: E501


        :return: The first_base of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._first_base

    @first_base.setter
    def first_base(self, first_base):
        """Sets the first_base of this BaseballLinescore.


        :param first_base: The first_base of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._first_base = first_base

    @property
    def second_base(self):
        """Gets the second_base of this BaseballLinescore.  # noqa: E501


        :return: The second_base of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._second_base

    @second_base.setter
    def second_base(self, second_base):
        """Sets the second_base of this BaseballLinescore.


        :param second_base: The second_base of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._second_base = second_base

    @property
    def third_base(self):
        """Gets the third_base of this BaseballLinescore.  # noqa: E501


        :return: The third_base of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._third_base

    @third_base.setter
    def third_base(self, third_base):
        """Sets the third_base of this BaseballLinescore.


        :param third_base: The third_base of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._third_base = third_base

    @property
    def shortstop(self):
        """Gets the shortstop of this BaseballLinescore.  # noqa: E501


        :return: The shortstop of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._shortstop

    @shortstop.setter
    def shortstop(self, shortstop):
        """Sets the shortstop of this BaseballLinescore.


        :param shortstop: The shortstop of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._shortstop = shortstop

    @property
    def left_field(self):
        """Gets the left_field of this BaseballLinescore.  # noqa: E501


        :return: The left_field of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._left_field

    @left_field.setter
    def left_field(self, left_field):
        """Sets the left_field of this BaseballLinescore.


        :param left_field: The left_field of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._left_field = left_field

    @property
    def center_field(self):
        """Gets the center_field of this BaseballLinescore.  # noqa: E501


        :return: The center_field of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._center_field

    @center_field.setter
    def center_field(self, center_field):
        """Sets the center_field of this BaseballLinescore.


        :param center_field: The center_field of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._center_field = center_field

    @property
    def right_field(self):
        """Gets the right_field of this BaseballLinescore.  # noqa: E501


        :return: The right_field of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._right_field

    @right_field.setter
    def right_field(self, right_field):
        """Sets the right_field of this BaseballLinescore.


        :param right_field: The right_field of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._right_field = right_field

    @property
    def field_teams_due_up_batter(self):
        """Gets the field_teams_due_up_batter of this BaseballLinescore.  # noqa: E501


        :return: The field_teams_due_up_batter of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._field_teams_due_up_batter

    @field_teams_due_up_batter.setter
    def field_teams_due_up_batter(self, field_teams_due_up_batter):
        """Sets the field_teams_due_up_batter of this BaseballLinescore.


        :param field_teams_due_up_batter: The field_teams_due_up_batter of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._field_teams_due_up_batter = field_teams_due_up_batter

    @property
    def field_teams_due_up_on_deck(self):
        """Gets the field_teams_due_up_on_deck of this BaseballLinescore.  # noqa: E501


        :return: The field_teams_due_up_on_deck of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._field_teams_due_up_on_deck

    @field_teams_due_up_on_deck.setter
    def field_teams_due_up_on_deck(self, field_teams_due_up_on_deck):
        """Sets the field_teams_due_up_on_deck of this BaseballLinescore.


        :param field_teams_due_up_on_deck: The field_teams_due_up_on_deck of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._field_teams_due_up_on_deck = field_teams_due_up_on_deck

    @property
    def field_teams_due_up_in_hole(self):
        """Gets the field_teams_due_up_in_hole of this BaseballLinescore.  # noqa: E501


        :return: The field_teams_due_up_in_hole of this BaseballLinescore.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._field_teams_due_up_in_hole

    @field_teams_due_up_in_hole.setter
    def field_teams_due_up_in_hole(self, field_teams_due_up_in_hole):
        """Sets the field_teams_due_up_in_hole of this BaseballLinescore.


        :param field_teams_due_up_in_hole: The field_teams_due_up_in_hole of this BaseballLinescore.  # noqa: E501
        :type: BaseballPerson
        """

        self._field_teams_due_up_in_hole = field_teams_due_up_in_hole

    @property
    def field_teams_batting_order(self):
        """Gets the field_teams_batting_order of this BaseballLinescore.  # noqa: E501


        :return: The field_teams_batting_order of this BaseballLinescore.  # noqa: E501
        :rtype: int
        """
        return self._field_teams_batting_order

    @field_teams_batting_order.setter
    def field_teams_batting_order(self, field_teams_batting_order):
        """Sets the field_teams_batting_order of this BaseballLinescore.


        :param field_teams_batting_order: The field_teams_batting_order of this BaseballLinescore.  # noqa: E501
        :type: int
        """

        self._field_teams_batting_order = field_teams_batting_order

    @property
    def players_not_in_field(self):
        """Gets the players_not_in_field of this BaseballLinescore.  # noqa: E501


        :return: The players_not_in_field of this BaseballLinescore.  # noqa: E501
        :rtype: dict(str, BaseballPosition)
        """
        return self._players_not_in_field

    @players_not_in_field.setter
    def players_not_in_field(self, players_not_in_field):
        """Sets the players_not_in_field of this BaseballLinescore.


        :param players_not_in_field: The players_not_in_field of this BaseballLinescore.  # noqa: E501
        :type: dict(str, BaseballPosition)
        """

        self._players_not_in_field = players_not_in_field

    @property
    def tie(self):
        """Gets the tie of this BaseballLinescore.  # noqa: E501


        :return: The tie of this BaseballLinescore.  # noqa: E501
        :rtype: bool
        """
        return self._tie

    @tie.setter
    def tie(self, tie):
        """Sets the tie of this BaseballLinescore.


        :param tie: The tie of this BaseballLinescore.  # noqa: E501
        :type: bool
        """

        self._tie = tie

    @property
    def top_inning(self):
        """Gets the top_inning of this BaseballLinescore.  # noqa: E501


        :return: The top_inning of this BaseballLinescore.  # noqa: E501
        :rtype: bool
        """
        return self._top_inning

    @top_inning.setter
    def top_inning(self, top_inning):
        """Sets the top_inning of this BaseballLinescore.


        :param top_inning: The top_inning of this BaseballLinescore.  # noqa: E501
        :type: bool
        """

        self._top_inning = top_inning

    @property
    def hydrated_stats(self):
        """Gets the hydrated_stats of this BaseballLinescore.  # noqa: E501


        :return: The hydrated_stats of this BaseballLinescore.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._hydrated_stats

    @hydrated_stats.setter
    def hydrated_stats(self, hydrated_stats):
        """Sets the hydrated_stats of this BaseballLinescore.


        :param hydrated_stats: The hydrated_stats of this BaseballLinescore.  # noqa: E501
        :type: dict(str, object)
        """

        self._hydrated_stats = hydrated_stats

    @property
    def user_privileges(self):
        """Gets the user_privileges of this BaseballLinescore.  # noqa: E501


        :return: The user_privileges of this BaseballLinescore.  # noqa: E501
        :rtype: list[Privilege]
        """
        return self._user_privileges

    @user_privileges.setter
    def user_privileges(self, user_privileges):
        """Sets the user_privileges of this BaseballLinescore.


        :param user_privileges: The user_privileges of this BaseballLinescore.  # noqa: E501
        :type: list[Privilege]
        """

        self._user_privileges = user_privileges

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BaseballLinescore, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BaseballLinescore):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
