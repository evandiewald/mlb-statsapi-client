# coding: utf-8

"""
    Stats API Documentation

    Official API for Major League Baseball.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class TrackingSoftwareVersionRestObject(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'copyright': 'str',
        'tracking_software_component_id': 'int',
        'tracking_software_component_text': 'str',
        'tracking_software_component_desc': 'str',
        'tracking_software_component_code': 'str',
        'tracking_vendor_id': 'int',
        'tracking_version_software_note_id': 'int',
        'tracking_software_component_version_text': 'str',
        'tracking_version_software_note': 'str'
    }

    attribute_map = {
        'copyright': 'copyright',
        'tracking_software_component_id': 'trackingSoftwareComponentId',
        'tracking_software_component_text': 'trackingSoftwareComponentText',
        'tracking_software_component_desc': 'trackingSoftwareComponentDesc',
        'tracking_software_component_code': 'trackingSoftwareComponentCode',
        'tracking_vendor_id': 'trackingVendorId',
        'tracking_version_software_note_id': 'trackingVersionSoftwareNoteId',
        'tracking_software_component_version_text': 'trackingSoftwareComponentVersionText',
        'tracking_version_software_note': 'trackingVersionSoftwareNote'
    }

    def __init__(self, copyright=None, tracking_software_component_id=None, tracking_software_component_text=None, tracking_software_component_desc=None, tracking_software_component_code=None, tracking_vendor_id=None, tracking_version_software_note_id=None, tracking_software_component_version_text=None, tracking_version_software_note=None):  # noqa: E501
        """TrackingSoftwareVersionRestObject - a model defined in Swagger"""  # noqa: E501
        self._copyright = None
        self._tracking_software_component_id = None
        self._tracking_software_component_text = None
        self._tracking_software_component_desc = None
        self._tracking_software_component_code = None
        self._tracking_vendor_id = None
        self._tracking_version_software_note_id = None
        self._tracking_software_component_version_text = None
        self._tracking_version_software_note = None
        self.discriminator = None
        if copyright is not None:
            self.copyright = copyright
        if tracking_software_component_id is not None:
            self.tracking_software_component_id = tracking_software_component_id
        if tracking_software_component_text is not None:
            self.tracking_software_component_text = tracking_software_component_text
        if tracking_software_component_desc is not None:
            self.tracking_software_component_desc = tracking_software_component_desc
        if tracking_software_component_code is not None:
            self.tracking_software_component_code = tracking_software_component_code
        if tracking_vendor_id is not None:
            self.tracking_vendor_id = tracking_vendor_id
        if tracking_version_software_note_id is not None:
            self.tracking_version_software_note_id = tracking_version_software_note_id
        if tracking_software_component_version_text is not None:
            self.tracking_software_component_version_text = tracking_software_component_version_text
        if tracking_version_software_note is not None:
            self.tracking_version_software_note = tracking_version_software_note

    @property
    def copyright(self):
        """Gets the copyright of this TrackingSoftwareVersionRestObject.  # noqa: E501


        :return: The copyright of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :rtype: str
        """
        return self._copyright

    @copyright.setter
    def copyright(self, copyright):
        """Sets the copyright of this TrackingSoftwareVersionRestObject.


        :param copyright: The copyright of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :type: str
        """

        self._copyright = copyright

    @property
    def tracking_software_component_id(self):
        """Gets the tracking_software_component_id of this TrackingSoftwareVersionRestObject.  # noqa: E501


        :return: The tracking_software_component_id of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :rtype: int
        """
        return self._tracking_software_component_id

    @tracking_software_component_id.setter
    def tracking_software_component_id(self, tracking_software_component_id):
        """Sets the tracking_software_component_id of this TrackingSoftwareVersionRestObject.


        :param tracking_software_component_id: The tracking_software_component_id of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :type: int
        """

        self._tracking_software_component_id = tracking_software_component_id

    @property
    def tracking_software_component_text(self):
        """Gets the tracking_software_component_text of this TrackingSoftwareVersionRestObject.  # noqa: E501


        :return: The tracking_software_component_text of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :rtype: str
        """
        return self._tracking_software_component_text

    @tracking_software_component_text.setter
    def tracking_software_component_text(self, tracking_software_component_text):
        """Sets the tracking_software_component_text of this TrackingSoftwareVersionRestObject.


        :param tracking_software_component_text: The tracking_software_component_text of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :type: str
        """

        self._tracking_software_component_text = tracking_software_component_text

    @property
    def tracking_software_component_desc(self):
        """Gets the tracking_software_component_desc of this TrackingSoftwareVersionRestObject.  # noqa: E501


        :return: The tracking_software_component_desc of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :rtype: str
        """
        return self._tracking_software_component_desc

    @tracking_software_component_desc.setter
    def tracking_software_component_desc(self, tracking_software_component_desc):
        """Sets the tracking_software_component_desc of this TrackingSoftwareVersionRestObject.


        :param tracking_software_component_desc: The tracking_software_component_desc of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :type: str
        """

        self._tracking_software_component_desc = tracking_software_component_desc

    @property
    def tracking_software_component_code(self):
        """Gets the tracking_software_component_code of this TrackingSoftwareVersionRestObject.  # noqa: E501


        :return: The tracking_software_component_code of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :rtype: str
        """
        return self._tracking_software_component_code

    @tracking_software_component_code.setter
    def tracking_software_component_code(self, tracking_software_component_code):
        """Sets the tracking_software_component_code of this TrackingSoftwareVersionRestObject.


        :param tracking_software_component_code: The tracking_software_component_code of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :type: str
        """

        self._tracking_software_component_code = tracking_software_component_code

    @property
    def tracking_vendor_id(self):
        """Gets the tracking_vendor_id of this TrackingSoftwareVersionRestObject.  # noqa: E501


        :return: The tracking_vendor_id of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :rtype: int
        """
        return self._tracking_vendor_id

    @tracking_vendor_id.setter
    def tracking_vendor_id(self, tracking_vendor_id):
        """Sets the tracking_vendor_id of this TrackingSoftwareVersionRestObject.


        :param tracking_vendor_id: The tracking_vendor_id of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :type: int
        """

        self._tracking_vendor_id = tracking_vendor_id

    @property
    def tracking_version_software_note_id(self):
        """Gets the tracking_version_software_note_id of this TrackingSoftwareVersionRestObject.  # noqa: E501


        :return: The tracking_version_software_note_id of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :rtype: int
        """
        return self._tracking_version_software_note_id

    @tracking_version_software_note_id.setter
    def tracking_version_software_note_id(self, tracking_version_software_note_id):
        """Sets the tracking_version_software_note_id of this TrackingSoftwareVersionRestObject.


        :param tracking_version_software_note_id: The tracking_version_software_note_id of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :type: int
        """

        self._tracking_version_software_note_id = tracking_version_software_note_id

    @property
    def tracking_software_component_version_text(self):
        """Gets the tracking_software_component_version_text of this TrackingSoftwareVersionRestObject.  # noqa: E501


        :return: The tracking_software_component_version_text of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :rtype: str
        """
        return self._tracking_software_component_version_text

    @tracking_software_component_version_text.setter
    def tracking_software_component_version_text(self, tracking_software_component_version_text):
        """Sets the tracking_software_component_version_text of this TrackingSoftwareVersionRestObject.


        :param tracking_software_component_version_text: The tracking_software_component_version_text of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :type: str
        """

        self._tracking_software_component_version_text = tracking_software_component_version_text

    @property
    def tracking_version_software_note(self):
        """Gets the tracking_version_software_note of this TrackingSoftwareVersionRestObject.  # noqa: E501


        :return: The tracking_version_software_note of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :rtype: str
        """
        return self._tracking_version_software_note

    @tracking_version_software_note.setter
    def tracking_version_software_note(self, tracking_version_software_note):
        """Sets the tracking_version_software_note of this TrackingSoftwareVersionRestObject.


        :param tracking_version_software_note: The tracking_version_software_note of this TrackingSoftwareVersionRestObject.  # noqa: E501
        :type: str
        """

        self._tracking_version_software_note = tracking_version_software_note

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TrackingSoftwareVersionRestObject, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TrackingSoftwareVersionRestObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
