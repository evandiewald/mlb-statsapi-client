# coding: utf-8

"""
    Stats API Documentation

    Official API for Major League Baseball.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SeamOrientationRestObject(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'copyright': 'str',
        'xx': 'float',
        'xy': 'float',
        'xz': 'float',
        'yx': 'float',
        'yy': 'float',
        'yz': 'float',
        'zx': 'float',
        'zy': 'float',
        'zz': 'float',
        'frame_rate': 'int',
        'time': 'float'
    }

    attribute_map = {
        'copyright': 'copyright',
        'xx': 'xx',
        'xy': 'xy',
        'xz': 'xz',
        'yx': 'yx',
        'yy': 'yy',
        'yz': 'yz',
        'zx': 'zx',
        'zy': 'zy',
        'zz': 'zz',
        'frame_rate': 'frameRate',
        'time': 'time'
    }

    def __init__(self, copyright=None, xx=None, xy=None, xz=None, yx=None, yy=None, yz=None, zx=None, zy=None, zz=None, frame_rate=None, time=None):  # noqa: E501
        """SeamOrientationRestObject - a model defined in Swagger"""  # noqa: E501
        self._copyright = None
        self._xx = None
        self._xy = None
        self._xz = None
        self._yx = None
        self._yy = None
        self._yz = None
        self._zx = None
        self._zy = None
        self._zz = None
        self._frame_rate = None
        self._time = None
        self.discriminator = None
        if copyright is not None:
            self.copyright = copyright
        if xx is not None:
            self.xx = xx
        if xy is not None:
            self.xy = xy
        if xz is not None:
            self.xz = xz
        if yx is not None:
            self.yx = yx
        if yy is not None:
            self.yy = yy
        if yz is not None:
            self.yz = yz
        if zx is not None:
            self.zx = zx
        if zy is not None:
            self.zy = zy
        if zz is not None:
            self.zz = zz
        if frame_rate is not None:
            self.frame_rate = frame_rate
        if time is not None:
            self.time = time

    @property
    def copyright(self):
        """Gets the copyright of this SeamOrientationRestObject.  # noqa: E501


        :return: The copyright of this SeamOrientationRestObject.  # noqa: E501
        :rtype: str
        """
        return self._copyright

    @copyright.setter
    def copyright(self, copyright):
        """Sets the copyright of this SeamOrientationRestObject.


        :param copyright: The copyright of this SeamOrientationRestObject.  # noqa: E501
        :type: str
        """

        self._copyright = copyright

    @property
    def xx(self):
        """Gets the xx of this SeamOrientationRestObject.  # noqa: E501


        :return: The xx of this SeamOrientationRestObject.  # noqa: E501
        :rtype: float
        """
        return self._xx

    @xx.setter
    def xx(self, xx):
        """Sets the xx of this SeamOrientationRestObject.


        :param xx: The xx of this SeamOrientationRestObject.  # noqa: E501
        :type: float
        """

        self._xx = xx

    @property
    def xy(self):
        """Gets the xy of this SeamOrientationRestObject.  # noqa: E501


        :return: The xy of this SeamOrientationRestObject.  # noqa: E501
        :rtype: float
        """
        return self._xy

    @xy.setter
    def xy(self, xy):
        """Sets the xy of this SeamOrientationRestObject.


        :param xy: The xy of this SeamOrientationRestObject.  # noqa: E501
        :type: float
        """

        self._xy = xy

    @property
    def xz(self):
        """Gets the xz of this SeamOrientationRestObject.  # noqa: E501


        :return: The xz of this SeamOrientationRestObject.  # noqa: E501
        :rtype: float
        """
        return self._xz

    @xz.setter
    def xz(self, xz):
        """Sets the xz of this SeamOrientationRestObject.


        :param xz: The xz of this SeamOrientationRestObject.  # noqa: E501
        :type: float
        """

        self._xz = xz

    @property
    def yx(self):
        """Gets the yx of this SeamOrientationRestObject.  # noqa: E501


        :return: The yx of this SeamOrientationRestObject.  # noqa: E501
        :rtype: float
        """
        return self._yx

    @yx.setter
    def yx(self, yx):
        """Sets the yx of this SeamOrientationRestObject.


        :param yx: The yx of this SeamOrientationRestObject.  # noqa: E501
        :type: float
        """

        self._yx = yx

    @property
    def yy(self):
        """Gets the yy of this SeamOrientationRestObject.  # noqa: E501


        :return: The yy of this SeamOrientationRestObject.  # noqa: E501
        :rtype: float
        """
        return self._yy

    @yy.setter
    def yy(self, yy):
        """Sets the yy of this SeamOrientationRestObject.


        :param yy: The yy of this SeamOrientationRestObject.  # noqa: E501
        :type: float
        """

        self._yy = yy

    @property
    def yz(self):
        """Gets the yz of this SeamOrientationRestObject.  # noqa: E501


        :return: The yz of this SeamOrientationRestObject.  # noqa: E501
        :rtype: float
        """
        return self._yz

    @yz.setter
    def yz(self, yz):
        """Sets the yz of this SeamOrientationRestObject.


        :param yz: The yz of this SeamOrientationRestObject.  # noqa: E501
        :type: float
        """

        self._yz = yz

    @property
    def zx(self):
        """Gets the zx of this SeamOrientationRestObject.  # noqa: E501


        :return: The zx of this SeamOrientationRestObject.  # noqa: E501
        :rtype: float
        """
        return self._zx

    @zx.setter
    def zx(self, zx):
        """Sets the zx of this SeamOrientationRestObject.


        :param zx: The zx of this SeamOrientationRestObject.  # noqa: E501
        :type: float
        """

        self._zx = zx

    @property
    def zy(self):
        """Gets the zy of this SeamOrientationRestObject.  # noqa: E501


        :return: The zy of this SeamOrientationRestObject.  # noqa: E501
        :rtype: float
        """
        return self._zy

    @zy.setter
    def zy(self, zy):
        """Sets the zy of this SeamOrientationRestObject.


        :param zy: The zy of this SeamOrientationRestObject.  # noqa: E501
        :type: float
        """

        self._zy = zy

    @property
    def zz(self):
        """Gets the zz of this SeamOrientationRestObject.  # noqa: E501


        :return: The zz of this SeamOrientationRestObject.  # noqa: E501
        :rtype: float
        """
        return self._zz

    @zz.setter
    def zz(self, zz):
        """Sets the zz of this SeamOrientationRestObject.


        :param zz: The zz of this SeamOrientationRestObject.  # noqa: E501
        :type: float
        """

        self._zz = zz

    @property
    def frame_rate(self):
        """Gets the frame_rate of this SeamOrientationRestObject.  # noqa: E501


        :return: The frame_rate of this SeamOrientationRestObject.  # noqa: E501
        :rtype: int
        """
        return self._frame_rate

    @frame_rate.setter
    def frame_rate(self, frame_rate):
        """Sets the frame_rate of this SeamOrientationRestObject.


        :param frame_rate: The frame_rate of this SeamOrientationRestObject.  # noqa: E501
        :type: int
        """

        self._frame_rate = frame_rate

    @property
    def time(self):
        """Gets the time of this SeamOrientationRestObject.  # noqa: E501


        :return: The time of this SeamOrientationRestObject.  # noqa: E501
        :rtype: float
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this SeamOrientationRestObject.


        :param time: The time of this SeamOrientationRestObject.  # noqa: E501
        :type: float
        """

        self._time = time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SeamOrientationRestObject, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SeamOrientationRestObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
