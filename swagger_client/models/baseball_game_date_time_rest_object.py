# coding: utf-8

"""
    Stats API Documentation

    Official API for Major League Baseball.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BaseballGameDateTimeRestObject(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'copyright': 'str',
        'date_time': 'datetime',
        'end_date_time': 'datetime',
        'original_date': 'date',
        'official_date': 'date',
        'resume_date': 'date',
        'resume_date_time': 'datetime',
        'resumed_from_date': 'date',
        'resumed_from_date_time': 'datetime',
        'day_night': 'str',
        'time': 'str',
        'ampm': 'str'
    }

    attribute_map = {
        'copyright': 'copyright',
        'date_time': 'dateTime',
        'end_date_time': 'endDateTime',
        'original_date': 'originalDate',
        'official_date': 'officialDate',
        'resume_date': 'resumeDate',
        'resume_date_time': 'resumeDateTime',
        'resumed_from_date': 'resumedFromDate',
        'resumed_from_date_time': 'resumedFromDateTime',
        'day_night': 'dayNight',
        'time': 'time',
        'ampm': 'ampm'
    }

    def __init__(self, copyright=None, date_time=None, end_date_time=None, original_date=None, official_date=None, resume_date=None, resume_date_time=None, resumed_from_date=None, resumed_from_date_time=None, day_night=None, time=None, ampm=None):  # noqa: E501
        """BaseballGameDateTimeRestObject - a model defined in Swagger"""  # noqa: E501
        self._copyright = None
        self._date_time = None
        self._end_date_time = None
        self._original_date = None
        self._official_date = None
        self._resume_date = None
        self._resume_date_time = None
        self._resumed_from_date = None
        self._resumed_from_date_time = None
        self._day_night = None
        self._time = None
        self._ampm = None
        self.discriminator = None
        if copyright is not None:
            self.copyright = copyright
        if date_time is not None:
            self.date_time = date_time
        if end_date_time is not None:
            self.end_date_time = end_date_time
        if original_date is not None:
            self.original_date = original_date
        if official_date is not None:
            self.official_date = official_date
        if resume_date is not None:
            self.resume_date = resume_date
        if resume_date_time is not None:
            self.resume_date_time = resume_date_time
        if resumed_from_date is not None:
            self.resumed_from_date = resumed_from_date
        if resumed_from_date_time is not None:
            self.resumed_from_date_time = resumed_from_date_time
        if day_night is not None:
            self.day_night = day_night
        if time is not None:
            self.time = time
        if ampm is not None:
            self.ampm = ampm

    @property
    def copyright(self):
        """Gets the copyright of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The copyright of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: str
        """
        return self._copyright

    @copyright.setter
    def copyright(self, copyright):
        """Sets the copyright of this BaseballGameDateTimeRestObject.


        :param copyright: The copyright of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: str
        """

        self._copyright = copyright

    @property
    def date_time(self):
        """Gets the date_time of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The date_time of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: datetime
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this BaseballGameDateTimeRestObject.


        :param date_time: The date_time of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: datetime
        """

        self._date_time = date_time

    @property
    def end_date_time(self):
        """Gets the end_date_time of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The end_date_time of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: datetime
        """
        return self._end_date_time

    @end_date_time.setter
    def end_date_time(self, end_date_time):
        """Sets the end_date_time of this BaseballGameDateTimeRestObject.


        :param end_date_time: The end_date_time of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: datetime
        """

        self._end_date_time = end_date_time

    @property
    def original_date(self):
        """Gets the original_date of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The original_date of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: date
        """
        return self._original_date

    @original_date.setter
    def original_date(self, original_date):
        """Sets the original_date of this BaseballGameDateTimeRestObject.


        :param original_date: The original_date of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: date
        """

        self._original_date = original_date

    @property
    def official_date(self):
        """Gets the official_date of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The official_date of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: date
        """
        return self._official_date

    @official_date.setter
    def official_date(self, official_date):
        """Sets the official_date of this BaseballGameDateTimeRestObject.


        :param official_date: The official_date of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: date
        """

        self._official_date = official_date

    @property
    def resume_date(self):
        """Gets the resume_date of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The resume_date of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: date
        """
        return self._resume_date

    @resume_date.setter
    def resume_date(self, resume_date):
        """Sets the resume_date of this BaseballGameDateTimeRestObject.


        :param resume_date: The resume_date of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: date
        """

        self._resume_date = resume_date

    @property
    def resume_date_time(self):
        """Gets the resume_date_time of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The resume_date_time of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: datetime
        """
        return self._resume_date_time

    @resume_date_time.setter
    def resume_date_time(self, resume_date_time):
        """Sets the resume_date_time of this BaseballGameDateTimeRestObject.


        :param resume_date_time: The resume_date_time of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: datetime
        """

        self._resume_date_time = resume_date_time

    @property
    def resumed_from_date(self):
        """Gets the resumed_from_date of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The resumed_from_date of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: date
        """
        return self._resumed_from_date

    @resumed_from_date.setter
    def resumed_from_date(self, resumed_from_date):
        """Sets the resumed_from_date of this BaseballGameDateTimeRestObject.


        :param resumed_from_date: The resumed_from_date of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: date
        """

        self._resumed_from_date = resumed_from_date

    @property
    def resumed_from_date_time(self):
        """Gets the resumed_from_date_time of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The resumed_from_date_time of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: datetime
        """
        return self._resumed_from_date_time

    @resumed_from_date_time.setter
    def resumed_from_date_time(self, resumed_from_date_time):
        """Sets the resumed_from_date_time of this BaseballGameDateTimeRestObject.


        :param resumed_from_date_time: The resumed_from_date_time of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: datetime
        """

        self._resumed_from_date_time = resumed_from_date_time

    @property
    def day_night(self):
        """Gets the day_night of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The day_night of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: str
        """
        return self._day_night

    @day_night.setter
    def day_night(self, day_night):
        """Sets the day_night of this BaseballGameDateTimeRestObject.


        :param day_night: The day_night of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: str
        """

        self._day_night = day_night

    @property
    def time(self):
        """Gets the time of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The time of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: str
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this BaseballGameDateTimeRestObject.


        :param time: The time of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: str
        """

        self._time = time

    @property
    def ampm(self):
        """Gets the ampm of this BaseballGameDateTimeRestObject.  # noqa: E501


        :return: The ampm of this BaseballGameDateTimeRestObject.  # noqa: E501
        :rtype: str
        """
        return self._ampm

    @ampm.setter
    def ampm(self, ampm):
        """Sets the ampm of this BaseballGameDateTimeRestObject.


        :param ampm: The ampm of this BaseballGameDateTimeRestObject.  # noqa: E501
        :type: str
        """

        self._ampm = ampm

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BaseballGameDateTimeRestObject, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BaseballGameDateTimeRestObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
