# coding: utf-8

"""
    Stats API Documentation

    Official API for Major League Baseball.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SeasonRestObject(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'copyright': 'str',
        'season_id': 'str',
        'has_wildcard': 'bool',
        'pre_season_start_date': 'date',
        'pre_season_end_date': 'date',
        'season_start_date': 'date',
        'spring_start_date': 'date',
        'spring_end_date': 'date',
        'regular_season_start_date': 'date',
        'last_date1st_half': 'date',
        'all_star_date': 'date',
        'first_date2nd_half': 'date',
        'regular_season_end_date': 'date',
        'post_season_start_date': 'date',
        'post_season_end_date': 'date',
        'season_end_date': 'date',
        'offseason_start_date': 'date',
        'off_season_end_date': 'date',
        'number_of_games': 'int',
        'ties_in_use': 'bool',
        'olympics_participation': 'bool',
        'conferences_in_use': 'bool',
        'divisions_in_use': 'bool',
        'game_type_dates': 'list[GameTypeDatesRestObject]',
        'season_level_gameday_type': 'str',
        'game_level_gameday_type': 'str',
        'qualifier_plate_appearances': 'float',
        'qualifier_outs_pitched': 'float'
    }

    attribute_map = {
        'copyright': 'copyright',
        'season_id': 'seasonId',
        'has_wildcard': 'hasWildcard',
        'pre_season_start_date': 'preSeasonStartDate',
        'pre_season_end_date': 'preSeasonEndDate',
        'season_start_date': 'seasonStartDate',
        'spring_start_date': 'springStartDate',
        'spring_end_date': 'springEndDate',
        'regular_season_start_date': 'regularSeasonStartDate',
        'last_date1st_half': 'lastDate1stHalf',
        'all_star_date': 'allStarDate',
        'first_date2nd_half': 'firstDate2ndHalf',
        'regular_season_end_date': 'regularSeasonEndDate',
        'post_season_start_date': 'postSeasonStartDate',
        'post_season_end_date': 'postSeasonEndDate',
        'season_end_date': 'seasonEndDate',
        'offseason_start_date': 'offseasonStartDate',
        'off_season_end_date': 'offSeasonEndDate',
        'number_of_games': 'numberOfGames',
        'ties_in_use': 'tiesInUse',
        'olympics_participation': 'olympicsParticipation',
        'conferences_in_use': 'conferencesInUse',
        'divisions_in_use': 'divisionsInUse',
        'game_type_dates': 'gameTypeDates',
        'season_level_gameday_type': 'seasonLevelGamedayType',
        'game_level_gameday_type': 'gameLevelGamedayType',
        'qualifier_plate_appearances': 'qualifierPlateAppearances',
        'qualifier_outs_pitched': 'qualifierOutsPitched'
    }

    def __init__(self, copyright=None, season_id=None, has_wildcard=None, pre_season_start_date=None, pre_season_end_date=None, season_start_date=None, spring_start_date=None, spring_end_date=None, regular_season_start_date=None, last_date1st_half=None, all_star_date=None, first_date2nd_half=None, regular_season_end_date=None, post_season_start_date=None, post_season_end_date=None, season_end_date=None, offseason_start_date=None, off_season_end_date=None, number_of_games=None, ties_in_use=None, olympics_participation=None, conferences_in_use=None, divisions_in_use=None, game_type_dates=None, season_level_gameday_type=None, game_level_gameday_type=None, qualifier_plate_appearances=None, qualifier_outs_pitched=None):  # noqa: E501
        """SeasonRestObject - a model defined in Swagger"""  # noqa: E501
        self._copyright = None
        self._season_id = None
        self._has_wildcard = None
        self._pre_season_start_date = None
        self._pre_season_end_date = None
        self._season_start_date = None
        self._spring_start_date = None
        self._spring_end_date = None
        self._regular_season_start_date = None
        self._last_date1st_half = None
        self._all_star_date = None
        self._first_date2nd_half = None
        self._regular_season_end_date = None
        self._post_season_start_date = None
        self._post_season_end_date = None
        self._season_end_date = None
        self._offseason_start_date = None
        self._off_season_end_date = None
        self._number_of_games = None
        self._ties_in_use = None
        self._olympics_participation = None
        self._conferences_in_use = None
        self._divisions_in_use = None
        self._game_type_dates = None
        self._season_level_gameday_type = None
        self._game_level_gameday_type = None
        self._qualifier_plate_appearances = None
        self._qualifier_outs_pitched = None
        self.discriminator = None
        if copyright is not None:
            self.copyright = copyright
        if season_id is not None:
            self.season_id = season_id
        if has_wildcard is not None:
            self.has_wildcard = has_wildcard
        if pre_season_start_date is not None:
            self.pre_season_start_date = pre_season_start_date
        if pre_season_end_date is not None:
            self.pre_season_end_date = pre_season_end_date
        if season_start_date is not None:
            self.season_start_date = season_start_date
        if spring_start_date is not None:
            self.spring_start_date = spring_start_date
        if spring_end_date is not None:
            self.spring_end_date = spring_end_date
        if regular_season_start_date is not None:
            self.regular_season_start_date = regular_season_start_date
        if last_date1st_half is not None:
            self.last_date1st_half = last_date1st_half
        if all_star_date is not None:
            self.all_star_date = all_star_date
        if first_date2nd_half is not None:
            self.first_date2nd_half = first_date2nd_half
        if regular_season_end_date is not None:
            self.regular_season_end_date = regular_season_end_date
        if post_season_start_date is not None:
            self.post_season_start_date = post_season_start_date
        if post_season_end_date is not None:
            self.post_season_end_date = post_season_end_date
        if season_end_date is not None:
            self.season_end_date = season_end_date
        if offseason_start_date is not None:
            self.offseason_start_date = offseason_start_date
        if off_season_end_date is not None:
            self.off_season_end_date = off_season_end_date
        if number_of_games is not None:
            self.number_of_games = number_of_games
        if ties_in_use is not None:
            self.ties_in_use = ties_in_use
        if olympics_participation is not None:
            self.olympics_participation = olympics_participation
        if conferences_in_use is not None:
            self.conferences_in_use = conferences_in_use
        if divisions_in_use is not None:
            self.divisions_in_use = divisions_in_use
        if game_type_dates is not None:
            self.game_type_dates = game_type_dates
        if season_level_gameday_type is not None:
            self.season_level_gameday_type = season_level_gameday_type
        if game_level_gameday_type is not None:
            self.game_level_gameday_type = game_level_gameday_type
        if qualifier_plate_appearances is not None:
            self.qualifier_plate_appearances = qualifier_plate_appearances
        if qualifier_outs_pitched is not None:
            self.qualifier_outs_pitched = qualifier_outs_pitched

    @property
    def copyright(self):
        """Gets the copyright of this SeasonRestObject.  # noqa: E501


        :return: The copyright of this SeasonRestObject.  # noqa: E501
        :rtype: str
        """
        return self._copyright

    @copyright.setter
    def copyright(self, copyright):
        """Sets the copyright of this SeasonRestObject.


        :param copyright: The copyright of this SeasonRestObject.  # noqa: E501
        :type: str
        """

        self._copyright = copyright

    @property
    def season_id(self):
        """Gets the season_id of this SeasonRestObject.  # noqa: E501


        :return: The season_id of this SeasonRestObject.  # noqa: E501
        :rtype: str
        """
        return self._season_id

    @season_id.setter
    def season_id(self, season_id):
        """Sets the season_id of this SeasonRestObject.


        :param season_id: The season_id of this SeasonRestObject.  # noqa: E501
        :type: str
        """

        self._season_id = season_id

    @property
    def has_wildcard(self):
        """Gets the has_wildcard of this SeasonRestObject.  # noqa: E501


        :return: The has_wildcard of this SeasonRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._has_wildcard

    @has_wildcard.setter
    def has_wildcard(self, has_wildcard):
        """Sets the has_wildcard of this SeasonRestObject.


        :param has_wildcard: The has_wildcard of this SeasonRestObject.  # noqa: E501
        :type: bool
        """

        self._has_wildcard = has_wildcard

    @property
    def pre_season_start_date(self):
        """Gets the pre_season_start_date of this SeasonRestObject.  # noqa: E501


        :return: The pre_season_start_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._pre_season_start_date

    @pre_season_start_date.setter
    def pre_season_start_date(self, pre_season_start_date):
        """Sets the pre_season_start_date of this SeasonRestObject.


        :param pre_season_start_date: The pre_season_start_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._pre_season_start_date = pre_season_start_date

    @property
    def pre_season_end_date(self):
        """Gets the pre_season_end_date of this SeasonRestObject.  # noqa: E501


        :return: The pre_season_end_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._pre_season_end_date

    @pre_season_end_date.setter
    def pre_season_end_date(self, pre_season_end_date):
        """Sets the pre_season_end_date of this SeasonRestObject.


        :param pre_season_end_date: The pre_season_end_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._pre_season_end_date = pre_season_end_date

    @property
    def season_start_date(self):
        """Gets the season_start_date of this SeasonRestObject.  # noqa: E501


        :return: The season_start_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._season_start_date

    @season_start_date.setter
    def season_start_date(self, season_start_date):
        """Sets the season_start_date of this SeasonRestObject.


        :param season_start_date: The season_start_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._season_start_date = season_start_date

    @property
    def spring_start_date(self):
        """Gets the spring_start_date of this SeasonRestObject.  # noqa: E501


        :return: The spring_start_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._spring_start_date

    @spring_start_date.setter
    def spring_start_date(self, spring_start_date):
        """Sets the spring_start_date of this SeasonRestObject.


        :param spring_start_date: The spring_start_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._spring_start_date = spring_start_date

    @property
    def spring_end_date(self):
        """Gets the spring_end_date of this SeasonRestObject.  # noqa: E501


        :return: The spring_end_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._spring_end_date

    @spring_end_date.setter
    def spring_end_date(self, spring_end_date):
        """Sets the spring_end_date of this SeasonRestObject.


        :param spring_end_date: The spring_end_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._spring_end_date = spring_end_date

    @property
    def regular_season_start_date(self):
        """Gets the regular_season_start_date of this SeasonRestObject.  # noqa: E501


        :return: The regular_season_start_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._regular_season_start_date

    @regular_season_start_date.setter
    def regular_season_start_date(self, regular_season_start_date):
        """Sets the regular_season_start_date of this SeasonRestObject.


        :param regular_season_start_date: The regular_season_start_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._regular_season_start_date = regular_season_start_date

    @property
    def last_date1st_half(self):
        """Gets the last_date1st_half of this SeasonRestObject.  # noqa: E501


        :return: The last_date1st_half of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._last_date1st_half

    @last_date1st_half.setter
    def last_date1st_half(self, last_date1st_half):
        """Sets the last_date1st_half of this SeasonRestObject.


        :param last_date1st_half: The last_date1st_half of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._last_date1st_half = last_date1st_half

    @property
    def all_star_date(self):
        """Gets the all_star_date of this SeasonRestObject.  # noqa: E501


        :return: The all_star_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._all_star_date

    @all_star_date.setter
    def all_star_date(self, all_star_date):
        """Sets the all_star_date of this SeasonRestObject.


        :param all_star_date: The all_star_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._all_star_date = all_star_date

    @property
    def first_date2nd_half(self):
        """Gets the first_date2nd_half of this SeasonRestObject.  # noqa: E501


        :return: The first_date2nd_half of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._first_date2nd_half

    @first_date2nd_half.setter
    def first_date2nd_half(self, first_date2nd_half):
        """Sets the first_date2nd_half of this SeasonRestObject.


        :param first_date2nd_half: The first_date2nd_half of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._first_date2nd_half = first_date2nd_half

    @property
    def regular_season_end_date(self):
        """Gets the regular_season_end_date of this SeasonRestObject.  # noqa: E501


        :return: The regular_season_end_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._regular_season_end_date

    @regular_season_end_date.setter
    def regular_season_end_date(self, regular_season_end_date):
        """Sets the regular_season_end_date of this SeasonRestObject.


        :param regular_season_end_date: The regular_season_end_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._regular_season_end_date = regular_season_end_date

    @property
    def post_season_start_date(self):
        """Gets the post_season_start_date of this SeasonRestObject.  # noqa: E501


        :return: The post_season_start_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._post_season_start_date

    @post_season_start_date.setter
    def post_season_start_date(self, post_season_start_date):
        """Sets the post_season_start_date of this SeasonRestObject.


        :param post_season_start_date: The post_season_start_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._post_season_start_date = post_season_start_date

    @property
    def post_season_end_date(self):
        """Gets the post_season_end_date of this SeasonRestObject.  # noqa: E501


        :return: The post_season_end_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._post_season_end_date

    @post_season_end_date.setter
    def post_season_end_date(self, post_season_end_date):
        """Sets the post_season_end_date of this SeasonRestObject.


        :param post_season_end_date: The post_season_end_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._post_season_end_date = post_season_end_date

    @property
    def season_end_date(self):
        """Gets the season_end_date of this SeasonRestObject.  # noqa: E501


        :return: The season_end_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._season_end_date

    @season_end_date.setter
    def season_end_date(self, season_end_date):
        """Sets the season_end_date of this SeasonRestObject.


        :param season_end_date: The season_end_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._season_end_date = season_end_date

    @property
    def offseason_start_date(self):
        """Gets the offseason_start_date of this SeasonRestObject.  # noqa: E501


        :return: The offseason_start_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._offseason_start_date

    @offseason_start_date.setter
    def offseason_start_date(self, offseason_start_date):
        """Sets the offseason_start_date of this SeasonRestObject.


        :param offseason_start_date: The offseason_start_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._offseason_start_date = offseason_start_date

    @property
    def off_season_end_date(self):
        """Gets the off_season_end_date of this SeasonRestObject.  # noqa: E501


        :return: The off_season_end_date of this SeasonRestObject.  # noqa: E501
        :rtype: date
        """
        return self._off_season_end_date

    @off_season_end_date.setter
    def off_season_end_date(self, off_season_end_date):
        """Sets the off_season_end_date of this SeasonRestObject.


        :param off_season_end_date: The off_season_end_date of this SeasonRestObject.  # noqa: E501
        :type: date
        """

        self._off_season_end_date = off_season_end_date

    @property
    def number_of_games(self):
        """Gets the number_of_games of this SeasonRestObject.  # noqa: E501


        :return: The number_of_games of this SeasonRestObject.  # noqa: E501
        :rtype: int
        """
        return self._number_of_games

    @number_of_games.setter
    def number_of_games(self, number_of_games):
        """Sets the number_of_games of this SeasonRestObject.


        :param number_of_games: The number_of_games of this SeasonRestObject.  # noqa: E501
        :type: int
        """

        self._number_of_games = number_of_games

    @property
    def ties_in_use(self):
        """Gets the ties_in_use of this SeasonRestObject.  # noqa: E501


        :return: The ties_in_use of this SeasonRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._ties_in_use

    @ties_in_use.setter
    def ties_in_use(self, ties_in_use):
        """Sets the ties_in_use of this SeasonRestObject.


        :param ties_in_use: The ties_in_use of this SeasonRestObject.  # noqa: E501
        :type: bool
        """

        self._ties_in_use = ties_in_use

    @property
    def olympics_participation(self):
        """Gets the olympics_participation of this SeasonRestObject.  # noqa: E501


        :return: The olympics_participation of this SeasonRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._olympics_participation

    @olympics_participation.setter
    def olympics_participation(self, olympics_participation):
        """Sets the olympics_participation of this SeasonRestObject.


        :param olympics_participation: The olympics_participation of this SeasonRestObject.  # noqa: E501
        :type: bool
        """

        self._olympics_participation = olympics_participation

    @property
    def conferences_in_use(self):
        """Gets the conferences_in_use of this SeasonRestObject.  # noqa: E501


        :return: The conferences_in_use of this SeasonRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._conferences_in_use

    @conferences_in_use.setter
    def conferences_in_use(self, conferences_in_use):
        """Sets the conferences_in_use of this SeasonRestObject.


        :param conferences_in_use: The conferences_in_use of this SeasonRestObject.  # noqa: E501
        :type: bool
        """

        self._conferences_in_use = conferences_in_use

    @property
    def divisions_in_use(self):
        """Gets the divisions_in_use of this SeasonRestObject.  # noqa: E501


        :return: The divisions_in_use of this SeasonRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._divisions_in_use

    @divisions_in_use.setter
    def divisions_in_use(self, divisions_in_use):
        """Sets the divisions_in_use of this SeasonRestObject.


        :param divisions_in_use: The divisions_in_use of this SeasonRestObject.  # noqa: E501
        :type: bool
        """

        self._divisions_in_use = divisions_in_use

    @property
    def game_type_dates(self):
        """Gets the game_type_dates of this SeasonRestObject.  # noqa: E501


        :return: The game_type_dates of this SeasonRestObject.  # noqa: E501
        :rtype: list[GameTypeDatesRestObject]
        """
        return self._game_type_dates

    @game_type_dates.setter
    def game_type_dates(self, game_type_dates):
        """Sets the game_type_dates of this SeasonRestObject.


        :param game_type_dates: The game_type_dates of this SeasonRestObject.  # noqa: E501
        :type: list[GameTypeDatesRestObject]
        """

        self._game_type_dates = game_type_dates

    @property
    def season_level_gameday_type(self):
        """Gets the season_level_gameday_type of this SeasonRestObject.  # noqa: E501


        :return: The season_level_gameday_type of this SeasonRestObject.  # noqa: E501
        :rtype: str
        """
        return self._season_level_gameday_type

    @season_level_gameday_type.setter
    def season_level_gameday_type(self, season_level_gameday_type):
        """Sets the season_level_gameday_type of this SeasonRestObject.


        :param season_level_gameday_type: The season_level_gameday_type of this SeasonRestObject.  # noqa: E501
        :type: str
        """

        self._season_level_gameday_type = season_level_gameday_type

    @property
    def game_level_gameday_type(self):
        """Gets the game_level_gameday_type of this SeasonRestObject.  # noqa: E501


        :return: The game_level_gameday_type of this SeasonRestObject.  # noqa: E501
        :rtype: str
        """
        return self._game_level_gameday_type

    @game_level_gameday_type.setter
    def game_level_gameday_type(self, game_level_gameday_type):
        """Sets the game_level_gameday_type of this SeasonRestObject.


        :param game_level_gameday_type: The game_level_gameday_type of this SeasonRestObject.  # noqa: E501
        :type: str
        """

        self._game_level_gameday_type = game_level_gameday_type

    @property
    def qualifier_plate_appearances(self):
        """Gets the qualifier_plate_appearances of this SeasonRestObject.  # noqa: E501


        :return: The qualifier_plate_appearances of this SeasonRestObject.  # noqa: E501
        :rtype: float
        """
        return self._qualifier_plate_appearances

    @qualifier_plate_appearances.setter
    def qualifier_plate_appearances(self, qualifier_plate_appearances):
        """Sets the qualifier_plate_appearances of this SeasonRestObject.


        :param qualifier_plate_appearances: The qualifier_plate_appearances of this SeasonRestObject.  # noqa: E501
        :type: float
        """

        self._qualifier_plate_appearances = qualifier_plate_appearances

    @property
    def qualifier_outs_pitched(self):
        """Gets the qualifier_outs_pitched of this SeasonRestObject.  # noqa: E501


        :return: The qualifier_outs_pitched of this SeasonRestObject.  # noqa: E501
        :rtype: float
        """
        return self._qualifier_outs_pitched

    @qualifier_outs_pitched.setter
    def qualifier_outs_pitched(self, qualifier_outs_pitched):
        """Sets the qualifier_outs_pitched of this SeasonRestObject.


        :param qualifier_outs_pitched: The qualifier_outs_pitched of this SeasonRestObject.  # noqa: E501
        :type: float
        """

        self._qualifier_outs_pitched = qualifier_outs_pitched

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SeasonRestObject, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SeasonRestObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
