# coding: utf-8

"""
    Stats API Documentation

    Official API for Major League Baseball.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BaseballScheduleItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'calendar_event_id': 'str',
        'game_pk': 'int',
        'game_type': 'GameTypeEnum',
        'game_date': 'datetime',
        'official_date': 'date',
        'calendar_date': 'date',
        'unmodified_calendar_date': 'date',
        'resume_game_date': 'date',
        'resume_date': 'datetime',
        'resumed_from_date': 'date',
        'resumed_from': 'datetime',
        'reschedule_game_date': 'date',
        'reschedule_date': 'datetime',
        'rescheduled_from_date': 'date',
        'rescheduled_from': 'datetime',
        'season': 'str',
        'status_ind': 'str',
        'game_number': 'int',
        'game_status': 'IGameStatus',
        'away_team': 'BaseballTeam',
        'home_team': 'BaseballTeam',
        'venue': 'Venue',
        'resume_venue': 'Venue',
        'resumed_from_venue': 'Venue',
        'cms': 'GameCms',
        'away_score': 'int',
        'home_score': 'int',
        'away_wins': 'int',
        'away_losses': 'int',
        'away_overtime_losses': 'int',
        'away_ties': 'int',
        'away_is_winner': 'bool',
        'home_wins': 'int',
        'home_losses': 'int',
        'postseason_series': 'PostseasonSeries',
        'home_overtime_losses': 'int',
        'home_ties': 'int',
        'home_is_winner': 'bool',
        'is_tie': 'bool',
        'linescore': 'BaseballLinescore',
        'decisions': 'BaseballDecision',
        'scoring_plays': 'list[BaseballPlay]',
        'broadcasts': 'list[GameDateBroadcast]',
        'radio_broadcasts': 'list[GameDateBroadcast]',
        'end_date_time': 'datetime',
        'is_default_game': 'bool',
        'promotions': 'list[Promotion]',
        'at_bat_promotions': 'list[Promotion]',
        'sponsorships': 'list[Promotion]',
        'officials': 'list[Official]',
        'pregame_officials': 'list[Official]',
        'weather': 'Weather',
        'game_info': 'GameTO',
        'public_facing': 'PublicFacingEnum',
        'story': 'GameStory',
        'tracking_version': 'TrackingVersion',
        'tracking_system_owner': 'TrackingSystemOwner',
        'coaching_video': 'list[MediaSourceType]',
        'at_bat_ticket_links': 'list[BaseballTicket]',
        'series_status': 'SeriesStatus',
        'sort_number': 'int',
        'is_featured_game': 'bool',
        'xref_ids': 'list[XrefId]',
        'game_id': 'str',
        'description': 'str',
        'series_description': 'str',
        'double_header': 'str',
        'gameday_type': 'str',
        'tiebreaker': 'str',
        'scheduled_innings': 'int',
        'inning_break_length': 'int',
        'games_in_series': 'int',
        'series_game_number': 'int',
        'editorial_game_type': 'str',
        'editorial_season': 'str',
        'local_time': 'str',
        'local_am_pm': 'str',
        'local_date': 'date',
        'away_games_back': 'str',
        'away_wild_card_games_back': 'str',
        'away_split_squad': 'bool',
        'away_series_number': 'int',
        'record_source': 'str',
        'if_necessary': 'str',
        'if_necessary_description': 'str',
        'home_games_back': 'str',
        'home_wild_card_games_back': 'str',
        'home_split_squad': 'bool',
        'home_series_number': 'int',
        'is_night_game': 'bool',
        'away_probable': 'BaseballPerson',
        'home_probable': 'BaseballPerson',
        'challenge': 'BaseballChallenge',
        'abs_challenge': 'BaseballABSChallenge',
        'flags': 'BaseballGameFlag',
        'alerts': 'list[BaseballGameAlert]',
        'live_lookin': 'LiveLookin',
        'sort_time': 'str',
        'sort_team': 'str',
        'sort_game_id': 'str',
        'sort_game_no': 'str',
        'previous_play': 'BaseballPlay',
        'home_runs': 'list[BaseballPlay]',
        'tickets': 'list[BaseballTicket]',
        'at_bat_tickets': 'list[BaseballTicket]',
        'sport_id': 'int',
        'day': 'str',
        'home_league_id': 'int',
        'away_league_id': 'int',
        'baseball_lineup': 'BaseballLineup',
        'double_header_game_one_time': 'datetime',
        'reverse_home_away_status': 'bool',
        'is_do_not_sort_as_dh': 'bool',
        'status_flags': 'StatusFlags',
        'game_guid': 'str',
        'vendor_weather_forecast': 'VendorWeatherForecast',
        'cache_key': 'str',
        'linescore_overrides': 'BaseballLinescore',
        'postseason_series_id': 'str',
        'winning_team': 'BaseballTeam',
        'tie': 'bool',
        'hydratable': 'bool',
        'night_game': 'bool',
        'losing_team': 'BaseballTeam',
        'sort_date': 'datetime',
        'double_header_team_pair_key': 'str'
    }

    attribute_map = {
        'calendar_event_id': 'calendarEventId',
        'game_pk': 'gamePk',
        'game_type': 'gameType',
        'game_date': 'gameDate',
        'official_date': 'officialDate',
        'calendar_date': 'calendarDate',
        'unmodified_calendar_date': 'unmodifiedCalendarDate',
        'resume_game_date': 'resumeGameDate',
        'resume_date': 'resumeDate',
        'resumed_from_date': 'resumedFromDate',
        'resumed_from': 'resumedFrom',
        'reschedule_game_date': 'rescheduleGameDate',
        'reschedule_date': 'rescheduleDate',
        'rescheduled_from_date': 'rescheduledFromDate',
        'rescheduled_from': 'rescheduledFrom',
        'season': 'season',
        'status_ind': 'statusInd',
        'game_number': 'gameNumber',
        'game_status': 'gameStatus',
        'away_team': 'awayTeam',
        'home_team': 'homeTeam',
        'venue': 'venue',
        'resume_venue': 'resumeVenue',
        'resumed_from_venue': 'resumedFromVenue',
        'cms': 'cms',
        'away_score': 'awayScore',
        'home_score': 'homeScore',
        'away_wins': 'awayWins',
        'away_losses': 'awayLosses',
        'away_overtime_losses': 'awayOvertimeLosses',
        'away_ties': 'awayTies',
        'away_is_winner': 'awayIsWinner',
        'home_wins': 'homeWins',
        'home_losses': 'homeLosses',
        'postseason_series': 'postseasonSeries',
        'home_overtime_losses': 'homeOvertimeLosses',
        'home_ties': 'homeTies',
        'home_is_winner': 'homeIsWinner',
        'is_tie': 'isTie',
        'linescore': 'linescore',
        'decisions': 'decisions',
        'scoring_plays': 'scoringPlays',
        'broadcasts': 'broadcasts',
        'radio_broadcasts': 'radioBroadcasts',
        'end_date_time': 'endDateTime',
        'is_default_game': 'isDefaultGame',
        'promotions': 'promotions',
        'at_bat_promotions': 'atBatPromotions',
        'sponsorships': 'sponsorships',
        'officials': 'officials',
        'pregame_officials': 'pregameOfficials',
        'weather': 'weather',
        'game_info': 'gameInfo',
        'public_facing': 'publicFacing',
        'story': 'story',
        'tracking_version': 'trackingVersion',
        'tracking_system_owner': 'trackingSystemOwner',
        'coaching_video': 'coachingVideo',
        'at_bat_ticket_links': 'atBatTicketLinks',
        'series_status': 'seriesStatus',
        'sort_number': 'sortNumber',
        'is_featured_game': 'isFeaturedGame',
        'xref_ids': 'xrefIds',
        'game_id': 'gameId',
        'description': 'description',
        'series_description': 'seriesDescription',
        'double_header': 'doubleHeader',
        'gameday_type': 'gamedayType',
        'tiebreaker': 'tiebreaker',
        'scheduled_innings': 'scheduledInnings',
        'inning_break_length': 'inningBreakLength',
        'games_in_series': 'gamesInSeries',
        'series_game_number': 'seriesGameNumber',
        'editorial_game_type': 'editorialGameType',
        'editorial_season': 'editorialSeason',
        'local_time': 'localTime',
        'local_am_pm': 'localAmPm',
        'local_date': 'localDate',
        'away_games_back': 'awayGamesBack',
        'away_wild_card_games_back': 'awayWildCardGamesBack',
        'away_split_squad': 'awaySplitSquad',
        'away_series_number': 'awaySeriesNumber',
        'record_source': 'recordSource',
        'if_necessary': 'ifNecessary',
        'if_necessary_description': 'ifNecessaryDescription',
        'home_games_back': 'homeGamesBack',
        'home_wild_card_games_back': 'homeWildCardGamesBack',
        'home_split_squad': 'homeSplitSquad',
        'home_series_number': 'homeSeriesNumber',
        'is_night_game': 'isNightGame',
        'away_probable': 'awayProbable',
        'home_probable': 'homeProbable',
        'challenge': 'challenge',
        'abs_challenge': 'absChallenge',
        'flags': 'flags',
        'alerts': 'alerts',
        'live_lookin': 'liveLookin',
        'sort_time': 'sortTime',
        'sort_team': 'sortTeam',
        'sort_game_id': 'sortGameId',
        'sort_game_no': 'sortGameNo',
        'previous_play': 'previousPlay',
        'home_runs': 'homeRuns',
        'tickets': 'tickets',
        'at_bat_tickets': 'atBatTickets',
        'sport_id': 'sportId',
        'day': 'day',
        'home_league_id': 'homeLeagueId',
        'away_league_id': 'awayLeagueId',
        'baseball_lineup': 'baseballLineup',
        'double_header_game_one_time': 'doubleHeaderGameOneTime',
        'reverse_home_away_status': 'reverseHomeAwayStatus',
        'is_do_not_sort_as_dh': 'isDoNotSortAsDH',
        'status_flags': 'statusFlags',
        'game_guid': 'gameGuid',
        'vendor_weather_forecast': 'vendorWeatherForecast',
        'cache_key': 'cacheKey',
        'linescore_overrides': 'linescoreOverrides',
        'postseason_series_id': 'postseasonSeriesId',
        'winning_team': 'winningTeam',
        'tie': 'tie',
        'hydratable': 'hydratable',
        'night_game': 'nightGame',
        'losing_team': 'losingTeam',
        'sort_date': 'sortDate',
        'double_header_team_pair_key': 'doubleHeaderTeamPairKey'
    }

    def __init__(self, calendar_event_id=None, game_pk=None, game_type=None, game_date=None, official_date=None, calendar_date=None, unmodified_calendar_date=None, resume_game_date=None, resume_date=None, resumed_from_date=None, resumed_from=None, reschedule_game_date=None, reschedule_date=None, rescheduled_from_date=None, rescheduled_from=None, season=None, status_ind=None, game_number=None, game_status=None, away_team=None, home_team=None, venue=None, resume_venue=None, resumed_from_venue=None, cms=None, away_score=None, home_score=None, away_wins=None, away_losses=None, away_overtime_losses=None, away_ties=None, away_is_winner=None, home_wins=None, home_losses=None, postseason_series=None, home_overtime_losses=None, home_ties=None, home_is_winner=None, is_tie=None, linescore=None, decisions=None, scoring_plays=None, broadcasts=None, radio_broadcasts=None, end_date_time=None, is_default_game=None, promotions=None, at_bat_promotions=None, sponsorships=None, officials=None, pregame_officials=None, weather=None, game_info=None, public_facing=None, story=None, tracking_version=None, tracking_system_owner=None, coaching_video=None, at_bat_ticket_links=None, series_status=None, sort_number=None, is_featured_game=None, xref_ids=None, game_id=None, description=None, series_description=None, double_header=None, gameday_type=None, tiebreaker=None, scheduled_innings=None, inning_break_length=None, games_in_series=None, series_game_number=None, editorial_game_type=None, editorial_season=None, local_time=None, local_am_pm=None, local_date=None, away_games_back=None, away_wild_card_games_back=None, away_split_squad=None, away_series_number=None, record_source=None, if_necessary=None, if_necessary_description=None, home_games_back=None, home_wild_card_games_back=None, home_split_squad=None, home_series_number=None, is_night_game=None, away_probable=None, home_probable=None, challenge=None, abs_challenge=None, flags=None, alerts=None, live_lookin=None, sort_time=None, sort_team=None, sort_game_id=None, sort_game_no=None, previous_play=None, home_runs=None, tickets=None, at_bat_tickets=None, sport_id=None, day=None, home_league_id=None, away_league_id=None, baseball_lineup=None, double_header_game_one_time=None, reverse_home_away_status=None, is_do_not_sort_as_dh=None, status_flags=None, game_guid=None, vendor_weather_forecast=None, cache_key=None, linescore_overrides=None, postseason_series_id=None, winning_team=None, tie=None, hydratable=None, night_game=None, losing_team=None, sort_date=None, double_header_team_pair_key=None):  # noqa: E501
        """BaseballScheduleItem - a model defined in Swagger"""  # noqa: E501
        self._calendar_event_id = None
        self._game_pk = None
        self._game_type = None
        self._game_date = None
        self._official_date = None
        self._calendar_date = None
        self._unmodified_calendar_date = None
        self._resume_game_date = None
        self._resume_date = None
        self._resumed_from_date = None
        self._resumed_from = None
        self._reschedule_game_date = None
        self._reschedule_date = None
        self._rescheduled_from_date = None
        self._rescheduled_from = None
        self._season = None
        self._status_ind = None
        self._game_number = None
        self._game_status = None
        self._away_team = None
        self._home_team = None
        self._venue = None
        self._resume_venue = None
        self._resumed_from_venue = None
        self._cms = None
        self._away_score = None
        self._home_score = None
        self._away_wins = None
        self._away_losses = None
        self._away_overtime_losses = None
        self._away_ties = None
        self._away_is_winner = None
        self._home_wins = None
        self._home_losses = None
        self._postseason_series = None
        self._home_overtime_losses = None
        self._home_ties = None
        self._home_is_winner = None
        self._is_tie = None
        self._linescore = None
        self._decisions = None
        self._scoring_plays = None
        self._broadcasts = None
        self._radio_broadcasts = None
        self._end_date_time = None
        self._is_default_game = None
        self._promotions = None
        self._at_bat_promotions = None
        self._sponsorships = None
        self._officials = None
        self._pregame_officials = None
        self._weather = None
        self._game_info = None
        self._public_facing = None
        self._story = None
        self._tracking_version = None
        self._tracking_system_owner = None
        self._coaching_video = None
        self._at_bat_ticket_links = None
        self._series_status = None
        self._sort_number = None
        self._is_featured_game = None
        self._xref_ids = None
        self._game_id = None
        self._description = None
        self._series_description = None
        self._double_header = None
        self._gameday_type = None
        self._tiebreaker = None
        self._scheduled_innings = None
        self._inning_break_length = None
        self._games_in_series = None
        self._series_game_number = None
        self._editorial_game_type = None
        self._editorial_season = None
        self._local_time = None
        self._local_am_pm = None
        self._local_date = None
        self._away_games_back = None
        self._away_wild_card_games_back = None
        self._away_split_squad = None
        self._away_series_number = None
        self._record_source = None
        self._if_necessary = None
        self._if_necessary_description = None
        self._home_games_back = None
        self._home_wild_card_games_back = None
        self._home_split_squad = None
        self._home_series_number = None
        self._is_night_game = None
        self._away_probable = None
        self._home_probable = None
        self._challenge = None
        self._abs_challenge = None
        self._flags = None
        self._alerts = None
        self._live_lookin = None
        self._sort_time = None
        self._sort_team = None
        self._sort_game_id = None
        self._sort_game_no = None
        self._previous_play = None
        self._home_runs = None
        self._tickets = None
        self._at_bat_tickets = None
        self._sport_id = None
        self._day = None
        self._home_league_id = None
        self._away_league_id = None
        self._baseball_lineup = None
        self._double_header_game_one_time = None
        self._reverse_home_away_status = None
        self._is_do_not_sort_as_dh = None
        self._status_flags = None
        self._game_guid = None
        self._vendor_weather_forecast = None
        self._cache_key = None
        self._linescore_overrides = None
        self._postseason_series_id = None
        self._winning_team = None
        self._tie = None
        self._hydratable = None
        self._night_game = None
        self._losing_team = None
        self._sort_date = None
        self._double_header_team_pair_key = None
        self.discriminator = None
        if calendar_event_id is not None:
            self.calendar_event_id = calendar_event_id
        if game_pk is not None:
            self.game_pk = game_pk
        if game_type is not None:
            self.game_type = game_type
        if game_date is not None:
            self.game_date = game_date
        if official_date is not None:
            self.official_date = official_date
        if calendar_date is not None:
            self.calendar_date = calendar_date
        if unmodified_calendar_date is not None:
            self.unmodified_calendar_date = unmodified_calendar_date
        if resume_game_date is not None:
            self.resume_game_date = resume_game_date
        if resume_date is not None:
            self.resume_date = resume_date
        if resumed_from_date is not None:
            self.resumed_from_date = resumed_from_date
        if resumed_from is not None:
            self.resumed_from = resumed_from
        if reschedule_game_date is not None:
            self.reschedule_game_date = reschedule_game_date
        if reschedule_date is not None:
            self.reschedule_date = reschedule_date
        if rescheduled_from_date is not None:
            self.rescheduled_from_date = rescheduled_from_date
        if rescheduled_from is not None:
            self.rescheduled_from = rescheduled_from
        if season is not None:
            self.season = season
        if status_ind is not None:
            self.status_ind = status_ind
        if game_number is not None:
            self.game_number = game_number
        if game_status is not None:
            self.game_status = game_status
        if away_team is not None:
            self.away_team = away_team
        if home_team is not None:
            self.home_team = home_team
        if venue is not None:
            self.venue = venue
        if resume_venue is not None:
            self.resume_venue = resume_venue
        if resumed_from_venue is not None:
            self.resumed_from_venue = resumed_from_venue
        if cms is not None:
            self.cms = cms
        if away_score is not None:
            self.away_score = away_score
        if home_score is not None:
            self.home_score = home_score
        if away_wins is not None:
            self.away_wins = away_wins
        if away_losses is not None:
            self.away_losses = away_losses
        if away_overtime_losses is not None:
            self.away_overtime_losses = away_overtime_losses
        if away_ties is not None:
            self.away_ties = away_ties
        if away_is_winner is not None:
            self.away_is_winner = away_is_winner
        if home_wins is not None:
            self.home_wins = home_wins
        if home_losses is not None:
            self.home_losses = home_losses
        if postseason_series is not None:
            self.postseason_series = postseason_series
        if home_overtime_losses is not None:
            self.home_overtime_losses = home_overtime_losses
        if home_ties is not None:
            self.home_ties = home_ties
        if home_is_winner is not None:
            self.home_is_winner = home_is_winner
        if is_tie is not None:
            self.is_tie = is_tie
        if linescore is not None:
            self.linescore = linescore
        if decisions is not None:
            self.decisions = decisions
        if scoring_plays is not None:
            self.scoring_plays = scoring_plays
        if broadcasts is not None:
            self.broadcasts = broadcasts
        if radio_broadcasts is not None:
            self.radio_broadcasts = radio_broadcasts
        if end_date_time is not None:
            self.end_date_time = end_date_time
        if is_default_game is not None:
            self.is_default_game = is_default_game
        if promotions is not None:
            self.promotions = promotions
        if at_bat_promotions is not None:
            self.at_bat_promotions = at_bat_promotions
        if sponsorships is not None:
            self.sponsorships = sponsorships
        if officials is not None:
            self.officials = officials
        if pregame_officials is not None:
            self.pregame_officials = pregame_officials
        if weather is not None:
            self.weather = weather
        if game_info is not None:
            self.game_info = game_info
        if public_facing is not None:
            self.public_facing = public_facing
        if story is not None:
            self.story = story
        if tracking_version is not None:
            self.tracking_version = tracking_version
        if tracking_system_owner is not None:
            self.tracking_system_owner = tracking_system_owner
        if coaching_video is not None:
            self.coaching_video = coaching_video
        if at_bat_ticket_links is not None:
            self.at_bat_ticket_links = at_bat_ticket_links
        if series_status is not None:
            self.series_status = series_status
        if sort_number is not None:
            self.sort_number = sort_number
        if is_featured_game is not None:
            self.is_featured_game = is_featured_game
        if xref_ids is not None:
            self.xref_ids = xref_ids
        if game_id is not None:
            self.game_id = game_id
        if description is not None:
            self.description = description
        if series_description is not None:
            self.series_description = series_description
        if double_header is not None:
            self.double_header = double_header
        if gameday_type is not None:
            self.gameday_type = gameday_type
        if tiebreaker is not None:
            self.tiebreaker = tiebreaker
        if scheduled_innings is not None:
            self.scheduled_innings = scheduled_innings
        if inning_break_length is not None:
            self.inning_break_length = inning_break_length
        if games_in_series is not None:
            self.games_in_series = games_in_series
        if series_game_number is not None:
            self.series_game_number = series_game_number
        if editorial_game_type is not None:
            self.editorial_game_type = editorial_game_type
        if editorial_season is not None:
            self.editorial_season = editorial_season
        if local_time is not None:
            self.local_time = local_time
        if local_am_pm is not None:
            self.local_am_pm = local_am_pm
        if local_date is not None:
            self.local_date = local_date
        if away_games_back is not None:
            self.away_games_back = away_games_back
        if away_wild_card_games_back is not None:
            self.away_wild_card_games_back = away_wild_card_games_back
        if away_split_squad is not None:
            self.away_split_squad = away_split_squad
        if away_series_number is not None:
            self.away_series_number = away_series_number
        if record_source is not None:
            self.record_source = record_source
        if if_necessary is not None:
            self.if_necessary = if_necessary
        if if_necessary_description is not None:
            self.if_necessary_description = if_necessary_description
        if home_games_back is not None:
            self.home_games_back = home_games_back
        if home_wild_card_games_back is not None:
            self.home_wild_card_games_back = home_wild_card_games_back
        if home_split_squad is not None:
            self.home_split_squad = home_split_squad
        if home_series_number is not None:
            self.home_series_number = home_series_number
        if is_night_game is not None:
            self.is_night_game = is_night_game
        if away_probable is not None:
            self.away_probable = away_probable
        if home_probable is not None:
            self.home_probable = home_probable
        if challenge is not None:
            self.challenge = challenge
        if abs_challenge is not None:
            self.abs_challenge = abs_challenge
        if flags is not None:
            self.flags = flags
        if alerts is not None:
            self.alerts = alerts
        if live_lookin is not None:
            self.live_lookin = live_lookin
        if sort_time is not None:
            self.sort_time = sort_time
        if sort_team is not None:
            self.sort_team = sort_team
        if sort_game_id is not None:
            self.sort_game_id = sort_game_id
        if sort_game_no is not None:
            self.sort_game_no = sort_game_no
        if previous_play is not None:
            self.previous_play = previous_play
        if home_runs is not None:
            self.home_runs = home_runs
        if tickets is not None:
            self.tickets = tickets
        if at_bat_tickets is not None:
            self.at_bat_tickets = at_bat_tickets
        if sport_id is not None:
            self.sport_id = sport_id
        if day is not None:
            self.day = day
        if home_league_id is not None:
            self.home_league_id = home_league_id
        if away_league_id is not None:
            self.away_league_id = away_league_id
        if baseball_lineup is not None:
            self.baseball_lineup = baseball_lineup
        if double_header_game_one_time is not None:
            self.double_header_game_one_time = double_header_game_one_time
        if reverse_home_away_status is not None:
            self.reverse_home_away_status = reverse_home_away_status
        if is_do_not_sort_as_dh is not None:
            self.is_do_not_sort_as_dh = is_do_not_sort_as_dh
        if status_flags is not None:
            self.status_flags = status_flags
        if game_guid is not None:
            self.game_guid = game_guid
        if vendor_weather_forecast is not None:
            self.vendor_weather_forecast = vendor_weather_forecast
        if cache_key is not None:
            self.cache_key = cache_key
        if linescore_overrides is not None:
            self.linescore_overrides = linescore_overrides
        if postseason_series_id is not None:
            self.postseason_series_id = postseason_series_id
        if winning_team is not None:
            self.winning_team = winning_team
        if tie is not None:
            self.tie = tie
        if hydratable is not None:
            self.hydratable = hydratable
        if night_game is not None:
            self.night_game = night_game
        if losing_team is not None:
            self.losing_team = losing_team
        if sort_date is not None:
            self.sort_date = sort_date
        if double_header_team_pair_key is not None:
            self.double_header_team_pair_key = double_header_team_pair_key

    @property
    def calendar_event_id(self):
        """Gets the calendar_event_id of this BaseballScheduleItem.  # noqa: E501


        :return: The calendar_event_id of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._calendar_event_id

    @calendar_event_id.setter
    def calendar_event_id(self, calendar_event_id):
        """Sets the calendar_event_id of this BaseballScheduleItem.


        :param calendar_event_id: The calendar_event_id of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._calendar_event_id = calendar_event_id

    @property
    def game_pk(self):
        """Gets the game_pk of this BaseballScheduleItem.  # noqa: E501


        :return: The game_pk of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._game_pk

    @game_pk.setter
    def game_pk(self, game_pk):
        """Sets the game_pk of this BaseballScheduleItem.


        :param game_pk: The game_pk of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._game_pk = game_pk

    @property
    def game_type(self):
        """Gets the game_type of this BaseballScheduleItem.  # noqa: E501


        :return: The game_type of this BaseballScheduleItem.  # noqa: E501
        :rtype: GameTypeEnum
        """
        return self._game_type

    @game_type.setter
    def game_type(self, game_type):
        """Sets the game_type of this BaseballScheduleItem.


        :param game_type: The game_type of this BaseballScheduleItem.  # noqa: E501
        :type: GameTypeEnum
        """

        self._game_type = game_type

    @property
    def game_date(self):
        """Gets the game_date of this BaseballScheduleItem.  # noqa: E501


        :return: The game_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: datetime
        """
        return self._game_date

    @game_date.setter
    def game_date(self, game_date):
        """Sets the game_date of this BaseballScheduleItem.


        :param game_date: The game_date of this BaseballScheduleItem.  # noqa: E501
        :type: datetime
        """

        self._game_date = game_date

    @property
    def official_date(self):
        """Gets the official_date of this BaseballScheduleItem.  # noqa: E501


        :return: The official_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: date
        """
        return self._official_date

    @official_date.setter
    def official_date(self, official_date):
        """Sets the official_date of this BaseballScheduleItem.


        :param official_date: The official_date of this BaseballScheduleItem.  # noqa: E501
        :type: date
        """

        self._official_date = official_date

    @property
    def calendar_date(self):
        """Gets the calendar_date of this BaseballScheduleItem.  # noqa: E501


        :return: The calendar_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: date
        """
        return self._calendar_date

    @calendar_date.setter
    def calendar_date(self, calendar_date):
        """Sets the calendar_date of this BaseballScheduleItem.


        :param calendar_date: The calendar_date of this BaseballScheduleItem.  # noqa: E501
        :type: date
        """

        self._calendar_date = calendar_date

    @property
    def unmodified_calendar_date(self):
        """Gets the unmodified_calendar_date of this BaseballScheduleItem.  # noqa: E501


        :return: The unmodified_calendar_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: date
        """
        return self._unmodified_calendar_date

    @unmodified_calendar_date.setter
    def unmodified_calendar_date(self, unmodified_calendar_date):
        """Sets the unmodified_calendar_date of this BaseballScheduleItem.


        :param unmodified_calendar_date: The unmodified_calendar_date of this BaseballScheduleItem.  # noqa: E501
        :type: date
        """

        self._unmodified_calendar_date = unmodified_calendar_date

    @property
    def resume_game_date(self):
        """Gets the resume_game_date of this BaseballScheduleItem.  # noqa: E501


        :return: The resume_game_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: date
        """
        return self._resume_game_date

    @resume_game_date.setter
    def resume_game_date(self, resume_game_date):
        """Sets the resume_game_date of this BaseballScheduleItem.


        :param resume_game_date: The resume_game_date of this BaseballScheduleItem.  # noqa: E501
        :type: date
        """

        self._resume_game_date = resume_game_date

    @property
    def resume_date(self):
        """Gets the resume_date of this BaseballScheduleItem.  # noqa: E501


        :return: The resume_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: datetime
        """
        return self._resume_date

    @resume_date.setter
    def resume_date(self, resume_date):
        """Sets the resume_date of this BaseballScheduleItem.


        :param resume_date: The resume_date of this BaseballScheduleItem.  # noqa: E501
        :type: datetime
        """

        self._resume_date = resume_date

    @property
    def resumed_from_date(self):
        """Gets the resumed_from_date of this BaseballScheduleItem.  # noqa: E501


        :return: The resumed_from_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: date
        """
        return self._resumed_from_date

    @resumed_from_date.setter
    def resumed_from_date(self, resumed_from_date):
        """Sets the resumed_from_date of this BaseballScheduleItem.


        :param resumed_from_date: The resumed_from_date of this BaseballScheduleItem.  # noqa: E501
        :type: date
        """

        self._resumed_from_date = resumed_from_date

    @property
    def resumed_from(self):
        """Gets the resumed_from of this BaseballScheduleItem.  # noqa: E501


        :return: The resumed_from of this BaseballScheduleItem.  # noqa: E501
        :rtype: datetime
        """
        return self._resumed_from

    @resumed_from.setter
    def resumed_from(self, resumed_from):
        """Sets the resumed_from of this BaseballScheduleItem.


        :param resumed_from: The resumed_from of this BaseballScheduleItem.  # noqa: E501
        :type: datetime
        """

        self._resumed_from = resumed_from

    @property
    def reschedule_game_date(self):
        """Gets the reschedule_game_date of this BaseballScheduleItem.  # noqa: E501


        :return: The reschedule_game_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: date
        """
        return self._reschedule_game_date

    @reschedule_game_date.setter
    def reschedule_game_date(self, reschedule_game_date):
        """Sets the reschedule_game_date of this BaseballScheduleItem.


        :param reschedule_game_date: The reschedule_game_date of this BaseballScheduleItem.  # noqa: E501
        :type: date
        """

        self._reschedule_game_date = reschedule_game_date

    @property
    def reschedule_date(self):
        """Gets the reschedule_date of this BaseballScheduleItem.  # noqa: E501


        :return: The reschedule_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: datetime
        """
        return self._reschedule_date

    @reschedule_date.setter
    def reschedule_date(self, reschedule_date):
        """Sets the reschedule_date of this BaseballScheduleItem.


        :param reschedule_date: The reschedule_date of this BaseballScheduleItem.  # noqa: E501
        :type: datetime
        """

        self._reschedule_date = reschedule_date

    @property
    def rescheduled_from_date(self):
        """Gets the rescheduled_from_date of this BaseballScheduleItem.  # noqa: E501


        :return: The rescheduled_from_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: date
        """
        return self._rescheduled_from_date

    @rescheduled_from_date.setter
    def rescheduled_from_date(self, rescheduled_from_date):
        """Sets the rescheduled_from_date of this BaseballScheduleItem.


        :param rescheduled_from_date: The rescheduled_from_date of this BaseballScheduleItem.  # noqa: E501
        :type: date
        """

        self._rescheduled_from_date = rescheduled_from_date

    @property
    def rescheduled_from(self):
        """Gets the rescheduled_from of this BaseballScheduleItem.  # noqa: E501


        :return: The rescheduled_from of this BaseballScheduleItem.  # noqa: E501
        :rtype: datetime
        """
        return self._rescheduled_from

    @rescheduled_from.setter
    def rescheduled_from(self, rescheduled_from):
        """Sets the rescheduled_from of this BaseballScheduleItem.


        :param rescheduled_from: The rescheduled_from of this BaseballScheduleItem.  # noqa: E501
        :type: datetime
        """

        self._rescheduled_from = rescheduled_from

    @property
    def season(self):
        """Gets the season of this BaseballScheduleItem.  # noqa: E501


        :return: The season of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this BaseballScheduleItem.


        :param season: The season of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._season = season

    @property
    def status_ind(self):
        """Gets the status_ind of this BaseballScheduleItem.  # noqa: E501


        :return: The status_ind of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._status_ind

    @status_ind.setter
    def status_ind(self, status_ind):
        """Sets the status_ind of this BaseballScheduleItem.


        :param status_ind: The status_ind of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._status_ind = status_ind

    @property
    def game_number(self):
        """Gets the game_number of this BaseballScheduleItem.  # noqa: E501


        :return: The game_number of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._game_number

    @game_number.setter
    def game_number(self, game_number):
        """Sets the game_number of this BaseballScheduleItem.


        :param game_number: The game_number of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._game_number = game_number

    @property
    def game_status(self):
        """Gets the game_status of this BaseballScheduleItem.  # noqa: E501


        :return: The game_status of this BaseballScheduleItem.  # noqa: E501
        :rtype: IGameStatus
        """
        return self._game_status

    @game_status.setter
    def game_status(self, game_status):
        """Sets the game_status of this BaseballScheduleItem.


        :param game_status: The game_status of this BaseballScheduleItem.  # noqa: E501
        :type: IGameStatus
        """

        self._game_status = game_status

    @property
    def away_team(self):
        """Gets the away_team of this BaseballScheduleItem.  # noqa: E501


        :return: The away_team of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballTeam
        """
        return self._away_team

    @away_team.setter
    def away_team(self, away_team):
        """Sets the away_team of this BaseballScheduleItem.


        :param away_team: The away_team of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballTeam
        """

        self._away_team = away_team

    @property
    def home_team(self):
        """Gets the home_team of this BaseballScheduleItem.  # noqa: E501


        :return: The home_team of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballTeam
        """
        return self._home_team

    @home_team.setter
    def home_team(self, home_team):
        """Sets the home_team of this BaseballScheduleItem.


        :param home_team: The home_team of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballTeam
        """

        self._home_team = home_team

    @property
    def venue(self):
        """Gets the venue of this BaseballScheduleItem.  # noqa: E501


        :return: The venue of this BaseballScheduleItem.  # noqa: E501
        :rtype: Venue
        """
        return self._venue

    @venue.setter
    def venue(self, venue):
        """Sets the venue of this BaseballScheduleItem.


        :param venue: The venue of this BaseballScheduleItem.  # noqa: E501
        :type: Venue
        """

        self._venue = venue

    @property
    def resume_venue(self):
        """Gets the resume_venue of this BaseballScheduleItem.  # noqa: E501


        :return: The resume_venue of this BaseballScheduleItem.  # noqa: E501
        :rtype: Venue
        """
        return self._resume_venue

    @resume_venue.setter
    def resume_venue(self, resume_venue):
        """Sets the resume_venue of this BaseballScheduleItem.


        :param resume_venue: The resume_venue of this BaseballScheduleItem.  # noqa: E501
        :type: Venue
        """

        self._resume_venue = resume_venue

    @property
    def resumed_from_venue(self):
        """Gets the resumed_from_venue of this BaseballScheduleItem.  # noqa: E501


        :return: The resumed_from_venue of this BaseballScheduleItem.  # noqa: E501
        :rtype: Venue
        """
        return self._resumed_from_venue

    @resumed_from_venue.setter
    def resumed_from_venue(self, resumed_from_venue):
        """Sets the resumed_from_venue of this BaseballScheduleItem.


        :param resumed_from_venue: The resumed_from_venue of this BaseballScheduleItem.  # noqa: E501
        :type: Venue
        """

        self._resumed_from_venue = resumed_from_venue

    @property
    def cms(self):
        """Gets the cms of this BaseballScheduleItem.  # noqa: E501


        :return: The cms of this BaseballScheduleItem.  # noqa: E501
        :rtype: GameCms
        """
        return self._cms

    @cms.setter
    def cms(self, cms):
        """Sets the cms of this BaseballScheduleItem.


        :param cms: The cms of this BaseballScheduleItem.  # noqa: E501
        :type: GameCms
        """

        self._cms = cms

    @property
    def away_score(self):
        """Gets the away_score of this BaseballScheduleItem.  # noqa: E501


        :return: The away_score of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._away_score

    @away_score.setter
    def away_score(self, away_score):
        """Sets the away_score of this BaseballScheduleItem.


        :param away_score: The away_score of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._away_score = away_score

    @property
    def home_score(self):
        """Gets the home_score of this BaseballScheduleItem.  # noqa: E501


        :return: The home_score of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._home_score

    @home_score.setter
    def home_score(self, home_score):
        """Sets the home_score of this BaseballScheduleItem.


        :param home_score: The home_score of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._home_score = home_score

    @property
    def away_wins(self):
        """Gets the away_wins of this BaseballScheduleItem.  # noqa: E501


        :return: The away_wins of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._away_wins

    @away_wins.setter
    def away_wins(self, away_wins):
        """Sets the away_wins of this BaseballScheduleItem.


        :param away_wins: The away_wins of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._away_wins = away_wins

    @property
    def away_losses(self):
        """Gets the away_losses of this BaseballScheduleItem.  # noqa: E501


        :return: The away_losses of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._away_losses

    @away_losses.setter
    def away_losses(self, away_losses):
        """Sets the away_losses of this BaseballScheduleItem.


        :param away_losses: The away_losses of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._away_losses = away_losses

    @property
    def away_overtime_losses(self):
        """Gets the away_overtime_losses of this BaseballScheduleItem.  # noqa: E501


        :return: The away_overtime_losses of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._away_overtime_losses

    @away_overtime_losses.setter
    def away_overtime_losses(self, away_overtime_losses):
        """Sets the away_overtime_losses of this BaseballScheduleItem.


        :param away_overtime_losses: The away_overtime_losses of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._away_overtime_losses = away_overtime_losses

    @property
    def away_ties(self):
        """Gets the away_ties of this BaseballScheduleItem.  # noqa: E501


        :return: The away_ties of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._away_ties

    @away_ties.setter
    def away_ties(self, away_ties):
        """Sets the away_ties of this BaseballScheduleItem.


        :param away_ties: The away_ties of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._away_ties = away_ties

    @property
    def away_is_winner(self):
        """Gets the away_is_winner of this BaseballScheduleItem.  # noqa: E501


        :return: The away_is_winner of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._away_is_winner

    @away_is_winner.setter
    def away_is_winner(self, away_is_winner):
        """Sets the away_is_winner of this BaseballScheduleItem.


        :param away_is_winner: The away_is_winner of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._away_is_winner = away_is_winner

    @property
    def home_wins(self):
        """Gets the home_wins of this BaseballScheduleItem.  # noqa: E501


        :return: The home_wins of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._home_wins

    @home_wins.setter
    def home_wins(self, home_wins):
        """Sets the home_wins of this BaseballScheduleItem.


        :param home_wins: The home_wins of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._home_wins = home_wins

    @property
    def home_losses(self):
        """Gets the home_losses of this BaseballScheduleItem.  # noqa: E501


        :return: The home_losses of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._home_losses

    @home_losses.setter
    def home_losses(self, home_losses):
        """Sets the home_losses of this BaseballScheduleItem.


        :param home_losses: The home_losses of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._home_losses = home_losses

    @property
    def postseason_series(self):
        """Gets the postseason_series of this BaseballScheduleItem.  # noqa: E501


        :return: The postseason_series of this BaseballScheduleItem.  # noqa: E501
        :rtype: PostseasonSeries
        """
        return self._postseason_series

    @postseason_series.setter
    def postseason_series(self, postseason_series):
        """Sets the postseason_series of this BaseballScheduleItem.


        :param postseason_series: The postseason_series of this BaseballScheduleItem.  # noqa: E501
        :type: PostseasonSeries
        """

        self._postseason_series = postseason_series

    @property
    def home_overtime_losses(self):
        """Gets the home_overtime_losses of this BaseballScheduleItem.  # noqa: E501


        :return: The home_overtime_losses of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._home_overtime_losses

    @home_overtime_losses.setter
    def home_overtime_losses(self, home_overtime_losses):
        """Sets the home_overtime_losses of this BaseballScheduleItem.


        :param home_overtime_losses: The home_overtime_losses of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._home_overtime_losses = home_overtime_losses

    @property
    def home_ties(self):
        """Gets the home_ties of this BaseballScheduleItem.  # noqa: E501


        :return: The home_ties of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._home_ties

    @home_ties.setter
    def home_ties(self, home_ties):
        """Sets the home_ties of this BaseballScheduleItem.


        :param home_ties: The home_ties of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._home_ties = home_ties

    @property
    def home_is_winner(self):
        """Gets the home_is_winner of this BaseballScheduleItem.  # noqa: E501


        :return: The home_is_winner of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._home_is_winner

    @home_is_winner.setter
    def home_is_winner(self, home_is_winner):
        """Sets the home_is_winner of this BaseballScheduleItem.


        :param home_is_winner: The home_is_winner of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._home_is_winner = home_is_winner

    @property
    def is_tie(self):
        """Gets the is_tie of this BaseballScheduleItem.  # noqa: E501


        :return: The is_tie of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._is_tie

    @is_tie.setter
    def is_tie(self, is_tie):
        """Sets the is_tie of this BaseballScheduleItem.


        :param is_tie: The is_tie of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._is_tie = is_tie

    @property
    def linescore(self):
        """Gets the linescore of this BaseballScheduleItem.  # noqa: E501


        :return: The linescore of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballLinescore
        """
        return self._linescore

    @linescore.setter
    def linescore(self, linescore):
        """Sets the linescore of this BaseballScheduleItem.


        :param linescore: The linescore of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballLinescore
        """

        self._linescore = linescore

    @property
    def decisions(self):
        """Gets the decisions of this BaseballScheduleItem.  # noqa: E501


        :return: The decisions of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballDecision
        """
        return self._decisions

    @decisions.setter
    def decisions(self, decisions):
        """Sets the decisions of this BaseballScheduleItem.


        :param decisions: The decisions of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballDecision
        """

        self._decisions = decisions

    @property
    def scoring_plays(self):
        """Gets the scoring_plays of this BaseballScheduleItem.  # noqa: E501


        :return: The scoring_plays of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[BaseballPlay]
        """
        return self._scoring_plays

    @scoring_plays.setter
    def scoring_plays(self, scoring_plays):
        """Sets the scoring_plays of this BaseballScheduleItem.


        :param scoring_plays: The scoring_plays of this BaseballScheduleItem.  # noqa: E501
        :type: list[BaseballPlay]
        """

        self._scoring_plays = scoring_plays

    @property
    def broadcasts(self):
        """Gets the broadcasts of this BaseballScheduleItem.  # noqa: E501


        :return: The broadcasts of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[GameDateBroadcast]
        """
        return self._broadcasts

    @broadcasts.setter
    def broadcasts(self, broadcasts):
        """Sets the broadcasts of this BaseballScheduleItem.


        :param broadcasts: The broadcasts of this BaseballScheduleItem.  # noqa: E501
        :type: list[GameDateBroadcast]
        """

        self._broadcasts = broadcasts

    @property
    def radio_broadcasts(self):
        """Gets the radio_broadcasts of this BaseballScheduleItem.  # noqa: E501


        :return: The radio_broadcasts of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[GameDateBroadcast]
        """
        return self._radio_broadcasts

    @radio_broadcasts.setter
    def radio_broadcasts(self, radio_broadcasts):
        """Sets the radio_broadcasts of this BaseballScheduleItem.


        :param radio_broadcasts: The radio_broadcasts of this BaseballScheduleItem.  # noqa: E501
        :type: list[GameDateBroadcast]
        """

        self._radio_broadcasts = radio_broadcasts

    @property
    def end_date_time(self):
        """Gets the end_date_time of this BaseballScheduleItem.  # noqa: E501


        :return: The end_date_time of this BaseballScheduleItem.  # noqa: E501
        :rtype: datetime
        """
        return self._end_date_time

    @end_date_time.setter
    def end_date_time(self, end_date_time):
        """Sets the end_date_time of this BaseballScheduleItem.


        :param end_date_time: The end_date_time of this BaseballScheduleItem.  # noqa: E501
        :type: datetime
        """

        self._end_date_time = end_date_time

    @property
    def is_default_game(self):
        """Gets the is_default_game of this BaseballScheduleItem.  # noqa: E501


        :return: The is_default_game of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._is_default_game

    @is_default_game.setter
    def is_default_game(self, is_default_game):
        """Sets the is_default_game of this BaseballScheduleItem.


        :param is_default_game: The is_default_game of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._is_default_game = is_default_game

    @property
    def promotions(self):
        """Gets the promotions of this BaseballScheduleItem.  # noqa: E501


        :return: The promotions of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[Promotion]
        """
        return self._promotions

    @promotions.setter
    def promotions(self, promotions):
        """Sets the promotions of this BaseballScheduleItem.


        :param promotions: The promotions of this BaseballScheduleItem.  # noqa: E501
        :type: list[Promotion]
        """

        self._promotions = promotions

    @property
    def at_bat_promotions(self):
        """Gets the at_bat_promotions of this BaseballScheduleItem.  # noqa: E501


        :return: The at_bat_promotions of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[Promotion]
        """
        return self._at_bat_promotions

    @at_bat_promotions.setter
    def at_bat_promotions(self, at_bat_promotions):
        """Sets the at_bat_promotions of this BaseballScheduleItem.


        :param at_bat_promotions: The at_bat_promotions of this BaseballScheduleItem.  # noqa: E501
        :type: list[Promotion]
        """

        self._at_bat_promotions = at_bat_promotions

    @property
    def sponsorships(self):
        """Gets the sponsorships of this BaseballScheduleItem.  # noqa: E501


        :return: The sponsorships of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[Promotion]
        """
        return self._sponsorships

    @sponsorships.setter
    def sponsorships(self, sponsorships):
        """Sets the sponsorships of this BaseballScheduleItem.


        :param sponsorships: The sponsorships of this BaseballScheduleItem.  # noqa: E501
        :type: list[Promotion]
        """

        self._sponsorships = sponsorships

    @property
    def officials(self):
        """Gets the officials of this BaseballScheduleItem.  # noqa: E501


        :return: The officials of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[Official]
        """
        return self._officials

    @officials.setter
    def officials(self, officials):
        """Sets the officials of this BaseballScheduleItem.


        :param officials: The officials of this BaseballScheduleItem.  # noqa: E501
        :type: list[Official]
        """

        self._officials = officials

    @property
    def pregame_officials(self):
        """Gets the pregame_officials of this BaseballScheduleItem.  # noqa: E501


        :return: The pregame_officials of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[Official]
        """
        return self._pregame_officials

    @pregame_officials.setter
    def pregame_officials(self, pregame_officials):
        """Sets the pregame_officials of this BaseballScheduleItem.


        :param pregame_officials: The pregame_officials of this BaseballScheduleItem.  # noqa: E501
        :type: list[Official]
        """

        self._pregame_officials = pregame_officials

    @property
    def weather(self):
        """Gets the weather of this BaseballScheduleItem.  # noqa: E501


        :return: The weather of this BaseballScheduleItem.  # noqa: E501
        :rtype: Weather
        """
        return self._weather

    @weather.setter
    def weather(self, weather):
        """Sets the weather of this BaseballScheduleItem.


        :param weather: The weather of this BaseballScheduleItem.  # noqa: E501
        :type: Weather
        """

        self._weather = weather

    @property
    def game_info(self):
        """Gets the game_info of this BaseballScheduleItem.  # noqa: E501


        :return: The game_info of this BaseballScheduleItem.  # noqa: E501
        :rtype: GameTO
        """
        return self._game_info

    @game_info.setter
    def game_info(self, game_info):
        """Sets the game_info of this BaseballScheduleItem.


        :param game_info: The game_info of this BaseballScheduleItem.  # noqa: E501
        :type: GameTO
        """

        self._game_info = game_info

    @property
    def public_facing(self):
        """Gets the public_facing of this BaseballScheduleItem.  # noqa: E501


        :return: The public_facing of this BaseballScheduleItem.  # noqa: E501
        :rtype: PublicFacingEnum
        """
        return self._public_facing

    @public_facing.setter
    def public_facing(self, public_facing):
        """Sets the public_facing of this BaseballScheduleItem.


        :param public_facing: The public_facing of this BaseballScheduleItem.  # noqa: E501
        :type: PublicFacingEnum
        """

        self._public_facing = public_facing

    @property
    def story(self):
        """Gets the story of this BaseballScheduleItem.  # noqa: E501


        :return: The story of this BaseballScheduleItem.  # noqa: E501
        :rtype: GameStory
        """
        return self._story

    @story.setter
    def story(self, story):
        """Sets the story of this BaseballScheduleItem.


        :param story: The story of this BaseballScheduleItem.  # noqa: E501
        :type: GameStory
        """

        self._story = story

    @property
    def tracking_version(self):
        """Gets the tracking_version of this BaseballScheduleItem.  # noqa: E501


        :return: The tracking_version of this BaseballScheduleItem.  # noqa: E501
        :rtype: TrackingVersion
        """
        return self._tracking_version

    @tracking_version.setter
    def tracking_version(self, tracking_version):
        """Sets the tracking_version of this BaseballScheduleItem.


        :param tracking_version: The tracking_version of this BaseballScheduleItem.  # noqa: E501
        :type: TrackingVersion
        """

        self._tracking_version = tracking_version

    @property
    def tracking_system_owner(self):
        """Gets the tracking_system_owner of this BaseballScheduleItem.  # noqa: E501


        :return: The tracking_system_owner of this BaseballScheduleItem.  # noqa: E501
        :rtype: TrackingSystemOwner
        """
        return self._tracking_system_owner

    @tracking_system_owner.setter
    def tracking_system_owner(self, tracking_system_owner):
        """Sets the tracking_system_owner of this BaseballScheduleItem.


        :param tracking_system_owner: The tracking_system_owner of this BaseballScheduleItem.  # noqa: E501
        :type: TrackingSystemOwner
        """

        self._tracking_system_owner = tracking_system_owner

    @property
    def coaching_video(self):
        """Gets the coaching_video of this BaseballScheduleItem.  # noqa: E501


        :return: The coaching_video of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[MediaSourceType]
        """
        return self._coaching_video

    @coaching_video.setter
    def coaching_video(self, coaching_video):
        """Sets the coaching_video of this BaseballScheduleItem.


        :param coaching_video: The coaching_video of this BaseballScheduleItem.  # noqa: E501
        :type: list[MediaSourceType]
        """

        self._coaching_video = coaching_video

    @property
    def at_bat_ticket_links(self):
        """Gets the at_bat_ticket_links of this BaseballScheduleItem.  # noqa: E501


        :return: The at_bat_ticket_links of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[BaseballTicket]
        """
        return self._at_bat_ticket_links

    @at_bat_ticket_links.setter
    def at_bat_ticket_links(self, at_bat_ticket_links):
        """Sets the at_bat_ticket_links of this BaseballScheduleItem.


        :param at_bat_ticket_links: The at_bat_ticket_links of this BaseballScheduleItem.  # noqa: E501
        :type: list[BaseballTicket]
        """

        self._at_bat_ticket_links = at_bat_ticket_links

    @property
    def series_status(self):
        """Gets the series_status of this BaseballScheduleItem.  # noqa: E501


        :return: The series_status of this BaseballScheduleItem.  # noqa: E501
        :rtype: SeriesStatus
        """
        return self._series_status

    @series_status.setter
    def series_status(self, series_status):
        """Sets the series_status of this BaseballScheduleItem.


        :param series_status: The series_status of this BaseballScheduleItem.  # noqa: E501
        :type: SeriesStatus
        """

        self._series_status = series_status

    @property
    def sort_number(self):
        """Gets the sort_number of this BaseballScheduleItem.  # noqa: E501


        :return: The sort_number of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._sort_number

    @sort_number.setter
    def sort_number(self, sort_number):
        """Sets the sort_number of this BaseballScheduleItem.


        :param sort_number: The sort_number of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._sort_number = sort_number

    @property
    def is_featured_game(self):
        """Gets the is_featured_game of this BaseballScheduleItem.  # noqa: E501


        :return: The is_featured_game of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._is_featured_game

    @is_featured_game.setter
    def is_featured_game(self, is_featured_game):
        """Sets the is_featured_game of this BaseballScheduleItem.


        :param is_featured_game: The is_featured_game of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._is_featured_game = is_featured_game

    @property
    def xref_ids(self):
        """Gets the xref_ids of this BaseballScheduleItem.  # noqa: E501


        :return: The xref_ids of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[XrefId]
        """
        return self._xref_ids

    @xref_ids.setter
    def xref_ids(self, xref_ids):
        """Sets the xref_ids of this BaseballScheduleItem.


        :param xref_ids: The xref_ids of this BaseballScheduleItem.  # noqa: E501
        :type: list[XrefId]
        """

        self._xref_ids = xref_ids

    @property
    def game_id(self):
        """Gets the game_id of this BaseballScheduleItem.  # noqa: E501


        :return: The game_id of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this BaseballScheduleItem.


        :param game_id: The game_id of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._game_id = game_id

    @property
    def description(self):
        """Gets the description of this BaseballScheduleItem.  # noqa: E501


        :return: The description of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BaseballScheduleItem.


        :param description: The description of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def series_description(self):
        """Gets the series_description of this BaseballScheduleItem.  # noqa: E501


        :return: The series_description of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._series_description

    @series_description.setter
    def series_description(self, series_description):
        """Sets the series_description of this BaseballScheduleItem.


        :param series_description: The series_description of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._series_description = series_description

    @property
    def double_header(self):
        """Gets the double_header of this BaseballScheduleItem.  # noqa: E501


        :return: The double_header of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._double_header

    @double_header.setter
    def double_header(self, double_header):
        """Sets the double_header of this BaseballScheduleItem.


        :param double_header: The double_header of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._double_header = double_header

    @property
    def gameday_type(self):
        """Gets the gameday_type of this BaseballScheduleItem.  # noqa: E501


        :return: The gameday_type of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._gameday_type

    @gameday_type.setter
    def gameday_type(self, gameday_type):
        """Sets the gameday_type of this BaseballScheduleItem.


        :param gameday_type: The gameday_type of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._gameday_type = gameday_type

    @property
    def tiebreaker(self):
        """Gets the tiebreaker of this BaseballScheduleItem.  # noqa: E501


        :return: The tiebreaker of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._tiebreaker

    @tiebreaker.setter
    def tiebreaker(self, tiebreaker):
        """Sets the tiebreaker of this BaseballScheduleItem.


        :param tiebreaker: The tiebreaker of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._tiebreaker = tiebreaker

    @property
    def scheduled_innings(self):
        """Gets the scheduled_innings of this BaseballScheduleItem.  # noqa: E501


        :return: The scheduled_innings of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._scheduled_innings

    @scheduled_innings.setter
    def scheduled_innings(self, scheduled_innings):
        """Sets the scheduled_innings of this BaseballScheduleItem.


        :param scheduled_innings: The scheduled_innings of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._scheduled_innings = scheduled_innings

    @property
    def inning_break_length(self):
        """Gets the inning_break_length of this BaseballScheduleItem.  # noqa: E501


        :return: The inning_break_length of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._inning_break_length

    @inning_break_length.setter
    def inning_break_length(self, inning_break_length):
        """Sets the inning_break_length of this BaseballScheduleItem.


        :param inning_break_length: The inning_break_length of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._inning_break_length = inning_break_length

    @property
    def games_in_series(self):
        """Gets the games_in_series of this BaseballScheduleItem.  # noqa: E501


        :return: The games_in_series of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._games_in_series

    @games_in_series.setter
    def games_in_series(self, games_in_series):
        """Sets the games_in_series of this BaseballScheduleItem.


        :param games_in_series: The games_in_series of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._games_in_series = games_in_series

    @property
    def series_game_number(self):
        """Gets the series_game_number of this BaseballScheduleItem.  # noqa: E501


        :return: The series_game_number of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._series_game_number

    @series_game_number.setter
    def series_game_number(self, series_game_number):
        """Sets the series_game_number of this BaseballScheduleItem.


        :param series_game_number: The series_game_number of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._series_game_number = series_game_number

    @property
    def editorial_game_type(self):
        """Gets the editorial_game_type of this BaseballScheduleItem.  # noqa: E501


        :return: The editorial_game_type of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._editorial_game_type

    @editorial_game_type.setter
    def editorial_game_type(self, editorial_game_type):
        """Sets the editorial_game_type of this BaseballScheduleItem.


        :param editorial_game_type: The editorial_game_type of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._editorial_game_type = editorial_game_type

    @property
    def editorial_season(self):
        """Gets the editorial_season of this BaseballScheduleItem.  # noqa: E501


        :return: The editorial_season of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._editorial_season

    @editorial_season.setter
    def editorial_season(self, editorial_season):
        """Sets the editorial_season of this BaseballScheduleItem.


        :param editorial_season: The editorial_season of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._editorial_season = editorial_season

    @property
    def local_time(self):
        """Gets the local_time of this BaseballScheduleItem.  # noqa: E501


        :return: The local_time of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._local_time

    @local_time.setter
    def local_time(self, local_time):
        """Sets the local_time of this BaseballScheduleItem.


        :param local_time: The local_time of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._local_time = local_time

    @property
    def local_am_pm(self):
        """Gets the local_am_pm of this BaseballScheduleItem.  # noqa: E501


        :return: The local_am_pm of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._local_am_pm

    @local_am_pm.setter
    def local_am_pm(self, local_am_pm):
        """Sets the local_am_pm of this BaseballScheduleItem.


        :param local_am_pm: The local_am_pm of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._local_am_pm = local_am_pm

    @property
    def local_date(self):
        """Gets the local_date of this BaseballScheduleItem.  # noqa: E501


        :return: The local_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: date
        """
        return self._local_date

    @local_date.setter
    def local_date(self, local_date):
        """Sets the local_date of this BaseballScheduleItem.


        :param local_date: The local_date of this BaseballScheduleItem.  # noqa: E501
        :type: date
        """

        self._local_date = local_date

    @property
    def away_games_back(self):
        """Gets the away_games_back of this BaseballScheduleItem.  # noqa: E501


        :return: The away_games_back of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._away_games_back

    @away_games_back.setter
    def away_games_back(self, away_games_back):
        """Sets the away_games_back of this BaseballScheduleItem.


        :param away_games_back: The away_games_back of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._away_games_back = away_games_back

    @property
    def away_wild_card_games_back(self):
        """Gets the away_wild_card_games_back of this BaseballScheduleItem.  # noqa: E501


        :return: The away_wild_card_games_back of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._away_wild_card_games_back

    @away_wild_card_games_back.setter
    def away_wild_card_games_back(self, away_wild_card_games_back):
        """Sets the away_wild_card_games_back of this BaseballScheduleItem.


        :param away_wild_card_games_back: The away_wild_card_games_back of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._away_wild_card_games_back = away_wild_card_games_back

    @property
    def away_split_squad(self):
        """Gets the away_split_squad of this BaseballScheduleItem.  # noqa: E501


        :return: The away_split_squad of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._away_split_squad

    @away_split_squad.setter
    def away_split_squad(self, away_split_squad):
        """Sets the away_split_squad of this BaseballScheduleItem.


        :param away_split_squad: The away_split_squad of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._away_split_squad = away_split_squad

    @property
    def away_series_number(self):
        """Gets the away_series_number of this BaseballScheduleItem.  # noqa: E501


        :return: The away_series_number of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._away_series_number

    @away_series_number.setter
    def away_series_number(self, away_series_number):
        """Sets the away_series_number of this BaseballScheduleItem.


        :param away_series_number: The away_series_number of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._away_series_number = away_series_number

    @property
    def record_source(self):
        """Gets the record_source of this BaseballScheduleItem.  # noqa: E501


        :return: The record_source of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._record_source

    @record_source.setter
    def record_source(self, record_source):
        """Sets the record_source of this BaseballScheduleItem.


        :param record_source: The record_source of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._record_source = record_source

    @property
    def if_necessary(self):
        """Gets the if_necessary of this BaseballScheduleItem.  # noqa: E501


        :return: The if_necessary of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._if_necessary

    @if_necessary.setter
    def if_necessary(self, if_necessary):
        """Sets the if_necessary of this BaseballScheduleItem.


        :param if_necessary: The if_necessary of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._if_necessary = if_necessary

    @property
    def if_necessary_description(self):
        """Gets the if_necessary_description of this BaseballScheduleItem.  # noqa: E501


        :return: The if_necessary_description of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._if_necessary_description

    @if_necessary_description.setter
    def if_necessary_description(self, if_necessary_description):
        """Sets the if_necessary_description of this BaseballScheduleItem.


        :param if_necessary_description: The if_necessary_description of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._if_necessary_description = if_necessary_description

    @property
    def home_games_back(self):
        """Gets the home_games_back of this BaseballScheduleItem.  # noqa: E501


        :return: The home_games_back of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._home_games_back

    @home_games_back.setter
    def home_games_back(self, home_games_back):
        """Sets the home_games_back of this BaseballScheduleItem.


        :param home_games_back: The home_games_back of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._home_games_back = home_games_back

    @property
    def home_wild_card_games_back(self):
        """Gets the home_wild_card_games_back of this BaseballScheduleItem.  # noqa: E501


        :return: The home_wild_card_games_back of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._home_wild_card_games_back

    @home_wild_card_games_back.setter
    def home_wild_card_games_back(self, home_wild_card_games_back):
        """Sets the home_wild_card_games_back of this BaseballScheduleItem.


        :param home_wild_card_games_back: The home_wild_card_games_back of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._home_wild_card_games_back = home_wild_card_games_back

    @property
    def home_split_squad(self):
        """Gets the home_split_squad of this BaseballScheduleItem.  # noqa: E501


        :return: The home_split_squad of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._home_split_squad

    @home_split_squad.setter
    def home_split_squad(self, home_split_squad):
        """Sets the home_split_squad of this BaseballScheduleItem.


        :param home_split_squad: The home_split_squad of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._home_split_squad = home_split_squad

    @property
    def home_series_number(self):
        """Gets the home_series_number of this BaseballScheduleItem.  # noqa: E501


        :return: The home_series_number of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._home_series_number

    @home_series_number.setter
    def home_series_number(self, home_series_number):
        """Sets the home_series_number of this BaseballScheduleItem.


        :param home_series_number: The home_series_number of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._home_series_number = home_series_number

    @property
    def is_night_game(self):
        """Gets the is_night_game of this BaseballScheduleItem.  # noqa: E501


        :return: The is_night_game of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._is_night_game

    @is_night_game.setter
    def is_night_game(self, is_night_game):
        """Sets the is_night_game of this BaseballScheduleItem.


        :param is_night_game: The is_night_game of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._is_night_game = is_night_game

    @property
    def away_probable(self):
        """Gets the away_probable of this BaseballScheduleItem.  # noqa: E501


        :return: The away_probable of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._away_probable

    @away_probable.setter
    def away_probable(self, away_probable):
        """Sets the away_probable of this BaseballScheduleItem.


        :param away_probable: The away_probable of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballPerson
        """

        self._away_probable = away_probable

    @property
    def home_probable(self):
        """Gets the home_probable of this BaseballScheduleItem.  # noqa: E501


        :return: The home_probable of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballPerson
        """
        return self._home_probable

    @home_probable.setter
    def home_probable(self, home_probable):
        """Sets the home_probable of this BaseballScheduleItem.


        :param home_probable: The home_probable of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballPerson
        """

        self._home_probable = home_probable

    @property
    def challenge(self):
        """Gets the challenge of this BaseballScheduleItem.  # noqa: E501


        :return: The challenge of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballChallenge
        """
        return self._challenge

    @challenge.setter
    def challenge(self, challenge):
        """Sets the challenge of this BaseballScheduleItem.


        :param challenge: The challenge of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballChallenge
        """

        self._challenge = challenge

    @property
    def abs_challenge(self):
        """Gets the abs_challenge of this BaseballScheduleItem.  # noqa: E501


        :return: The abs_challenge of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballABSChallenge
        """
        return self._abs_challenge

    @abs_challenge.setter
    def abs_challenge(self, abs_challenge):
        """Sets the abs_challenge of this BaseballScheduleItem.


        :param abs_challenge: The abs_challenge of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballABSChallenge
        """

        self._abs_challenge = abs_challenge

    @property
    def flags(self):
        """Gets the flags of this BaseballScheduleItem.  # noqa: E501


        :return: The flags of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballGameFlag
        """
        return self._flags

    @flags.setter
    def flags(self, flags):
        """Sets the flags of this BaseballScheduleItem.


        :param flags: The flags of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballGameFlag
        """

        self._flags = flags

    @property
    def alerts(self):
        """Gets the alerts of this BaseballScheduleItem.  # noqa: E501


        :return: The alerts of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[BaseballGameAlert]
        """
        return self._alerts

    @alerts.setter
    def alerts(self, alerts):
        """Sets the alerts of this BaseballScheduleItem.


        :param alerts: The alerts of this BaseballScheduleItem.  # noqa: E501
        :type: list[BaseballGameAlert]
        """

        self._alerts = alerts

    @property
    def live_lookin(self):
        """Gets the live_lookin of this BaseballScheduleItem.  # noqa: E501


        :return: The live_lookin of this BaseballScheduleItem.  # noqa: E501
        :rtype: LiveLookin
        """
        return self._live_lookin

    @live_lookin.setter
    def live_lookin(self, live_lookin):
        """Sets the live_lookin of this BaseballScheduleItem.


        :param live_lookin: The live_lookin of this BaseballScheduleItem.  # noqa: E501
        :type: LiveLookin
        """

        self._live_lookin = live_lookin

    @property
    def sort_time(self):
        """Gets the sort_time of this BaseballScheduleItem.  # noqa: E501


        :return: The sort_time of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._sort_time

    @sort_time.setter
    def sort_time(self, sort_time):
        """Sets the sort_time of this BaseballScheduleItem.


        :param sort_time: The sort_time of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._sort_time = sort_time

    @property
    def sort_team(self):
        """Gets the sort_team of this BaseballScheduleItem.  # noqa: E501


        :return: The sort_team of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._sort_team

    @sort_team.setter
    def sort_team(self, sort_team):
        """Sets the sort_team of this BaseballScheduleItem.


        :param sort_team: The sort_team of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._sort_team = sort_team

    @property
    def sort_game_id(self):
        """Gets the sort_game_id of this BaseballScheduleItem.  # noqa: E501


        :return: The sort_game_id of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._sort_game_id

    @sort_game_id.setter
    def sort_game_id(self, sort_game_id):
        """Sets the sort_game_id of this BaseballScheduleItem.


        :param sort_game_id: The sort_game_id of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._sort_game_id = sort_game_id

    @property
    def sort_game_no(self):
        """Gets the sort_game_no of this BaseballScheduleItem.  # noqa: E501


        :return: The sort_game_no of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._sort_game_no

    @sort_game_no.setter
    def sort_game_no(self, sort_game_no):
        """Sets the sort_game_no of this BaseballScheduleItem.


        :param sort_game_no: The sort_game_no of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._sort_game_no = sort_game_no

    @property
    def previous_play(self):
        """Gets the previous_play of this BaseballScheduleItem.  # noqa: E501


        :return: The previous_play of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballPlay
        """
        return self._previous_play

    @previous_play.setter
    def previous_play(self, previous_play):
        """Sets the previous_play of this BaseballScheduleItem.


        :param previous_play: The previous_play of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballPlay
        """

        self._previous_play = previous_play

    @property
    def home_runs(self):
        """Gets the home_runs of this BaseballScheduleItem.  # noqa: E501


        :return: The home_runs of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[BaseballPlay]
        """
        return self._home_runs

    @home_runs.setter
    def home_runs(self, home_runs):
        """Sets the home_runs of this BaseballScheduleItem.


        :param home_runs: The home_runs of this BaseballScheduleItem.  # noqa: E501
        :type: list[BaseballPlay]
        """

        self._home_runs = home_runs

    @property
    def tickets(self):
        """Gets the tickets of this BaseballScheduleItem.  # noqa: E501


        :return: The tickets of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[BaseballTicket]
        """
        return self._tickets

    @tickets.setter
    def tickets(self, tickets):
        """Sets the tickets of this BaseballScheduleItem.


        :param tickets: The tickets of this BaseballScheduleItem.  # noqa: E501
        :type: list[BaseballTicket]
        """

        self._tickets = tickets

    @property
    def at_bat_tickets(self):
        """Gets the at_bat_tickets of this BaseballScheduleItem.  # noqa: E501


        :return: The at_bat_tickets of this BaseballScheduleItem.  # noqa: E501
        :rtype: list[BaseballTicket]
        """
        return self._at_bat_tickets

    @at_bat_tickets.setter
    def at_bat_tickets(self, at_bat_tickets):
        """Sets the at_bat_tickets of this BaseballScheduleItem.


        :param at_bat_tickets: The at_bat_tickets of this BaseballScheduleItem.  # noqa: E501
        :type: list[BaseballTicket]
        """

        self._at_bat_tickets = at_bat_tickets

    @property
    def sport_id(self):
        """Gets the sport_id of this BaseballScheduleItem.  # noqa: E501


        :return: The sport_id of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._sport_id

    @sport_id.setter
    def sport_id(self, sport_id):
        """Sets the sport_id of this BaseballScheduleItem.


        :param sport_id: The sport_id of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._sport_id = sport_id

    @property
    def day(self):
        """Gets the day of this BaseballScheduleItem.  # noqa: E501


        :return: The day of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this BaseballScheduleItem.


        :param day: The day of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._day = day

    @property
    def home_league_id(self):
        """Gets the home_league_id of this BaseballScheduleItem.  # noqa: E501


        :return: The home_league_id of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._home_league_id

    @home_league_id.setter
    def home_league_id(self, home_league_id):
        """Sets the home_league_id of this BaseballScheduleItem.


        :param home_league_id: The home_league_id of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._home_league_id = home_league_id

    @property
    def away_league_id(self):
        """Gets the away_league_id of this BaseballScheduleItem.  # noqa: E501


        :return: The away_league_id of this BaseballScheduleItem.  # noqa: E501
        :rtype: int
        """
        return self._away_league_id

    @away_league_id.setter
    def away_league_id(self, away_league_id):
        """Sets the away_league_id of this BaseballScheduleItem.


        :param away_league_id: The away_league_id of this BaseballScheduleItem.  # noqa: E501
        :type: int
        """

        self._away_league_id = away_league_id

    @property
    def baseball_lineup(self):
        """Gets the baseball_lineup of this BaseballScheduleItem.  # noqa: E501


        :return: The baseball_lineup of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballLineup
        """
        return self._baseball_lineup

    @baseball_lineup.setter
    def baseball_lineup(self, baseball_lineup):
        """Sets the baseball_lineup of this BaseballScheduleItem.


        :param baseball_lineup: The baseball_lineup of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballLineup
        """

        self._baseball_lineup = baseball_lineup

    @property
    def double_header_game_one_time(self):
        """Gets the double_header_game_one_time of this BaseballScheduleItem.  # noqa: E501


        :return: The double_header_game_one_time of this BaseballScheduleItem.  # noqa: E501
        :rtype: datetime
        """
        return self._double_header_game_one_time

    @double_header_game_one_time.setter
    def double_header_game_one_time(self, double_header_game_one_time):
        """Sets the double_header_game_one_time of this BaseballScheduleItem.


        :param double_header_game_one_time: The double_header_game_one_time of this BaseballScheduleItem.  # noqa: E501
        :type: datetime
        """

        self._double_header_game_one_time = double_header_game_one_time

    @property
    def reverse_home_away_status(self):
        """Gets the reverse_home_away_status of this BaseballScheduleItem.  # noqa: E501


        :return: The reverse_home_away_status of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._reverse_home_away_status

    @reverse_home_away_status.setter
    def reverse_home_away_status(self, reverse_home_away_status):
        """Sets the reverse_home_away_status of this BaseballScheduleItem.


        :param reverse_home_away_status: The reverse_home_away_status of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._reverse_home_away_status = reverse_home_away_status

    @property
    def is_do_not_sort_as_dh(self):
        """Gets the is_do_not_sort_as_dh of this BaseballScheduleItem.  # noqa: E501


        :return: The is_do_not_sort_as_dh of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._is_do_not_sort_as_dh

    @is_do_not_sort_as_dh.setter
    def is_do_not_sort_as_dh(self, is_do_not_sort_as_dh):
        """Sets the is_do_not_sort_as_dh of this BaseballScheduleItem.


        :param is_do_not_sort_as_dh: The is_do_not_sort_as_dh of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._is_do_not_sort_as_dh = is_do_not_sort_as_dh

    @property
    def status_flags(self):
        """Gets the status_flags of this BaseballScheduleItem.  # noqa: E501


        :return: The status_flags of this BaseballScheduleItem.  # noqa: E501
        :rtype: StatusFlags
        """
        return self._status_flags

    @status_flags.setter
    def status_flags(self, status_flags):
        """Sets the status_flags of this BaseballScheduleItem.


        :param status_flags: The status_flags of this BaseballScheduleItem.  # noqa: E501
        :type: StatusFlags
        """

        self._status_flags = status_flags

    @property
    def game_guid(self):
        """Gets the game_guid of this BaseballScheduleItem.  # noqa: E501


        :return: The game_guid of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._game_guid

    @game_guid.setter
    def game_guid(self, game_guid):
        """Sets the game_guid of this BaseballScheduleItem.


        :param game_guid: The game_guid of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._game_guid = game_guid

    @property
    def vendor_weather_forecast(self):
        """Gets the vendor_weather_forecast of this BaseballScheduleItem.  # noqa: E501


        :return: The vendor_weather_forecast of this BaseballScheduleItem.  # noqa: E501
        :rtype: VendorWeatherForecast
        """
        return self._vendor_weather_forecast

    @vendor_weather_forecast.setter
    def vendor_weather_forecast(self, vendor_weather_forecast):
        """Sets the vendor_weather_forecast of this BaseballScheduleItem.


        :param vendor_weather_forecast: The vendor_weather_forecast of this BaseballScheduleItem.  # noqa: E501
        :type: VendorWeatherForecast
        """

        self._vendor_weather_forecast = vendor_weather_forecast

    @property
    def cache_key(self):
        """Gets the cache_key of this BaseballScheduleItem.  # noqa: E501


        :return: The cache_key of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._cache_key

    @cache_key.setter
    def cache_key(self, cache_key):
        """Sets the cache_key of this BaseballScheduleItem.


        :param cache_key: The cache_key of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._cache_key = cache_key

    @property
    def linescore_overrides(self):
        """Gets the linescore_overrides of this BaseballScheduleItem.  # noqa: E501


        :return: The linescore_overrides of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballLinescore
        """
        return self._linescore_overrides

    @linescore_overrides.setter
    def linescore_overrides(self, linescore_overrides):
        """Sets the linescore_overrides of this BaseballScheduleItem.


        :param linescore_overrides: The linescore_overrides of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballLinescore
        """

        self._linescore_overrides = linescore_overrides

    @property
    def postseason_series_id(self):
        """Gets the postseason_series_id of this BaseballScheduleItem.  # noqa: E501


        :return: The postseason_series_id of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._postseason_series_id

    @postseason_series_id.setter
    def postseason_series_id(self, postseason_series_id):
        """Sets the postseason_series_id of this BaseballScheduleItem.


        :param postseason_series_id: The postseason_series_id of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._postseason_series_id = postseason_series_id

    @property
    def winning_team(self):
        """Gets the winning_team of this BaseballScheduleItem.  # noqa: E501


        :return: The winning_team of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballTeam
        """
        return self._winning_team

    @winning_team.setter
    def winning_team(self, winning_team):
        """Sets the winning_team of this BaseballScheduleItem.


        :param winning_team: The winning_team of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballTeam
        """

        self._winning_team = winning_team

    @property
    def tie(self):
        """Gets the tie of this BaseballScheduleItem.  # noqa: E501


        :return: The tie of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._tie

    @tie.setter
    def tie(self, tie):
        """Sets the tie of this BaseballScheduleItem.


        :param tie: The tie of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._tie = tie

    @property
    def hydratable(self):
        """Gets the hydratable of this BaseballScheduleItem.  # noqa: E501


        :return: The hydratable of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._hydratable

    @hydratable.setter
    def hydratable(self, hydratable):
        """Sets the hydratable of this BaseballScheduleItem.


        :param hydratable: The hydratable of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._hydratable = hydratable

    @property
    def night_game(self):
        """Gets the night_game of this BaseballScheduleItem.  # noqa: E501


        :return: The night_game of this BaseballScheduleItem.  # noqa: E501
        :rtype: bool
        """
        return self._night_game

    @night_game.setter
    def night_game(self, night_game):
        """Sets the night_game of this BaseballScheduleItem.


        :param night_game: The night_game of this BaseballScheduleItem.  # noqa: E501
        :type: bool
        """

        self._night_game = night_game

    @property
    def losing_team(self):
        """Gets the losing_team of this BaseballScheduleItem.  # noqa: E501


        :return: The losing_team of this BaseballScheduleItem.  # noqa: E501
        :rtype: BaseballTeam
        """
        return self._losing_team

    @losing_team.setter
    def losing_team(self, losing_team):
        """Sets the losing_team of this BaseballScheduleItem.


        :param losing_team: The losing_team of this BaseballScheduleItem.  # noqa: E501
        :type: BaseballTeam
        """

        self._losing_team = losing_team

    @property
    def sort_date(self):
        """Gets the sort_date of this BaseballScheduleItem.  # noqa: E501


        :return: The sort_date of this BaseballScheduleItem.  # noqa: E501
        :rtype: datetime
        """
        return self._sort_date

    @sort_date.setter
    def sort_date(self, sort_date):
        """Sets the sort_date of this BaseballScheduleItem.


        :param sort_date: The sort_date of this BaseballScheduleItem.  # noqa: E501
        :type: datetime
        """

        self._sort_date = sort_date

    @property
    def double_header_team_pair_key(self):
        """Gets the double_header_team_pair_key of this BaseballScheduleItem.  # noqa: E501


        :return: The double_header_team_pair_key of this BaseballScheduleItem.  # noqa: E501
        :rtype: str
        """
        return self._double_header_team_pair_key

    @double_header_team_pair_key.setter
    def double_header_team_pair_key(self, double_header_team_pair_key):
        """Sets the double_header_team_pair_key of this BaseballScheduleItem.


        :param double_header_team_pair_key: The double_header_team_pair_key of this BaseballScheduleItem.  # noqa: E501
        :type: str
        """

        self._double_header_team_pair_key = double_header_team_pair_key

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BaseballScheduleItem, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BaseballScheduleItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
