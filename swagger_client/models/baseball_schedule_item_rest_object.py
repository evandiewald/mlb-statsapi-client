# coding: utf-8

"""
    Stats API Documentation

    Official API for Major League Baseball.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BaseballScheduleItemRestObject(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'copyright': 'str',
        'game_pk': 'int',
        'game_guid': 'str',
        'link': 'str',
        'game_type': 'str',
        'season': 'str',
        'game_date': 'datetime',
        'official_date': 'date',
        'resume_date': 'datetime',
        'resume_game_date': 'date',
        'resumed_from': 'datetime',
        'resumed_from_date': 'date',
        'reschedule_date': 'datetime',
        'reschedule_game_date': 'date',
        'rescheduled_from': 'datetime',
        'rescheduled_from_date': 'date',
        'end_date_time': 'datetime',
        'status': 'GameStatusRestObject',
        'teams': 'dict(str, BaseballScheduleItemTeamRestObject)',
        'linescore': 'BaseballLinescoreRestObject',
        'decisions': 'BaseballDecisionRestObject',
        'scoring_plays': 'list[BaseballPlayRestObject]',
        'venue': 'VenueRestObject',
        'tickets': 'list[BaseballTicketRestObject]',
        'at_bat_tickets': 'list[BaseballTicketRestObject]',
        'promotions': 'list[PromotionRestObject]',
        'at_bat_promotions': 'list[PromotionRestObject]',
        'sponsorships': 'list[PromotionRestObject]',
        'broadcasts': 'list[GameDateBroadcastRestObject]',
        'radio_broadcasts': 'list[GameDateBroadcastRestObject]',
        'content': 'GameContentRestObject',
        'series_status': 'SeriesStatusRestObject',
        'is_default_game': 'bool',
        'sort_number': 'int',
        'is_tie': 'bool',
        'is_featured_game': 'bool',
        'officials': 'list[OfficialRestObject]',
        'pregame_officials': 'list[OfficialRestObject]',
        'weather': 'WeatherRestObject',
        'xref_ids': 'list[XrefIdRestObject]',
        'game_info': 'GameInfoRestObject',
        'game_number': 'int',
        'public_facing': 'bool',
        'story': 'GameStoryRestObject',
        'weather_forecast': 'VendorWeatherForecastRestObject',
        'rule_settings': 'list[RuleSettingsRestObject]',
        'tracking_version': 'TrackingVersionRestObject',
        'coaching_video': 'list[str]',
        'double_header': 'str',
        'gameday_type': 'str',
        'tiebreaker': 'str',
        'calendar_event_id': 'str',
        'season_display': 'str',
        'day_night': 'str',
        'description': 'str',
        'scheduled_innings': 'int',
        'reverse_home_away_status': 'bool',
        'inning_break_length': 'int',
        'games_in_series': 'int',
        'series_game_number': 'int',
        'series_description': 'str',
        'review': 'BaseballReviewRestObject',
        'abs_challenge': 'BaseballABSChallengeRestObject',
        'flags': 'BaseballGameFlagRestObject',
        'status_flags': 'StatusFlagsRestObject',
        'alerts': 'list[BaseballGameAlertRestObject]',
        'live_lookin': 'BaseballGameLiveLookinRestObject',
        'previous_play': 'BaseballPlayRestObject',
        'home_runs': 'list[BaseballPlayRestObject]',
        'record_source': 'str',
        'if_necessary': 'str',
        'if_necessary_description': 'str',
        'day': 'str',
        'game_id': 'str',
        'lineups': 'BaseballLineupRestObject'
    }

    attribute_map = {
        'copyright': 'copyright',
        'game_pk': 'gamePk',
        'game_guid': 'gameGuid',
        'link': 'link',
        'game_type': 'gameType',
        'season': 'season',
        'game_date': 'gameDate',
        'official_date': 'officialDate',
        'resume_date': 'resumeDate',
        'resume_game_date': 'resumeGameDate',
        'resumed_from': 'resumedFrom',
        'resumed_from_date': 'resumedFromDate',
        'reschedule_date': 'rescheduleDate',
        'reschedule_game_date': 'rescheduleGameDate',
        'rescheduled_from': 'rescheduledFrom',
        'rescheduled_from_date': 'rescheduledFromDate',
        'end_date_time': 'endDateTime',
        'status': 'status',
        'teams': 'teams',
        'linescore': 'linescore',
        'decisions': 'decisions',
        'scoring_plays': 'scoringPlays',
        'venue': 'venue',
        'tickets': 'tickets',
        'at_bat_tickets': 'atBatTickets',
        'promotions': 'promotions',
        'at_bat_promotions': 'atBatPromotions',
        'sponsorships': 'sponsorships',
        'broadcasts': 'broadcasts',
        'radio_broadcasts': 'radioBroadcasts',
        'content': 'content',
        'series_status': 'seriesStatus',
        'is_default_game': 'isDefaultGame',
        'sort_number': 'sortNumber',
        'is_tie': 'isTie',
        'is_featured_game': 'isFeaturedGame',
        'officials': 'officials',
        'pregame_officials': 'pregameOfficials',
        'weather': 'weather',
        'xref_ids': 'xrefIds',
        'game_info': 'gameInfo',
        'game_number': 'gameNumber',
        'public_facing': 'publicFacing',
        'story': 'story',
        'weather_forecast': 'weatherForecast',
        'rule_settings': 'ruleSettings',
        'tracking_version': 'trackingVersion',
        'coaching_video': 'coachingVideo',
        'double_header': 'doubleHeader',
        'gameday_type': 'gamedayType',
        'tiebreaker': 'tiebreaker',
        'calendar_event_id': 'calendarEventID',
        'season_display': 'seasonDisplay',
        'day_night': 'dayNight',
        'description': 'description',
        'scheduled_innings': 'scheduledInnings',
        'reverse_home_away_status': 'reverseHomeAwayStatus',
        'inning_break_length': 'inningBreakLength',
        'games_in_series': 'gamesInSeries',
        'series_game_number': 'seriesGameNumber',
        'series_description': 'seriesDescription',
        'review': 'review',
        'abs_challenge': 'absChallenge',
        'flags': 'flags',
        'status_flags': 'statusFlags',
        'alerts': 'alerts',
        'live_lookin': 'liveLookin',
        'previous_play': 'previousPlay',
        'home_runs': 'homeRuns',
        'record_source': 'recordSource',
        'if_necessary': 'ifNecessary',
        'if_necessary_description': 'ifNecessaryDescription',
        'day': 'day',
        'game_id': 'gameId',
        'lineups': 'lineups'
    }

    def __init__(self, copyright=None, game_pk=None, game_guid=None, link=None, game_type=None, season=None, game_date=None, official_date=None, resume_date=None, resume_game_date=None, resumed_from=None, resumed_from_date=None, reschedule_date=None, reschedule_game_date=None, rescheduled_from=None, rescheduled_from_date=None, end_date_time=None, status=None, teams=None, linescore=None, decisions=None, scoring_plays=None, venue=None, tickets=None, at_bat_tickets=None, promotions=None, at_bat_promotions=None, sponsorships=None, broadcasts=None, radio_broadcasts=None, content=None, series_status=None, is_default_game=None, sort_number=None, is_tie=None, is_featured_game=None, officials=None, pregame_officials=None, weather=None, xref_ids=None, game_info=None, game_number=None, public_facing=None, story=None, weather_forecast=None, rule_settings=None, tracking_version=None, coaching_video=None, double_header=None, gameday_type=None, tiebreaker=None, calendar_event_id=None, season_display=None, day_night=None, description=None, scheduled_innings=None, reverse_home_away_status=None, inning_break_length=None, games_in_series=None, series_game_number=None, series_description=None, review=None, abs_challenge=None, flags=None, status_flags=None, alerts=None, live_lookin=None, previous_play=None, home_runs=None, record_source=None, if_necessary=None, if_necessary_description=None, day=None, game_id=None, lineups=None):  # noqa: E501
        """BaseballScheduleItemRestObject - a model defined in Swagger"""  # noqa: E501
        self._copyright = None
        self._game_pk = None
        self._game_guid = None
        self._link = None
        self._game_type = None
        self._season = None
        self._game_date = None
        self._official_date = None
        self._resume_date = None
        self._resume_game_date = None
        self._resumed_from = None
        self._resumed_from_date = None
        self._reschedule_date = None
        self._reschedule_game_date = None
        self._rescheduled_from = None
        self._rescheduled_from_date = None
        self._end_date_time = None
        self._status = None
        self._teams = None
        self._linescore = None
        self._decisions = None
        self._scoring_plays = None
        self._venue = None
        self._tickets = None
        self._at_bat_tickets = None
        self._promotions = None
        self._at_bat_promotions = None
        self._sponsorships = None
        self._broadcasts = None
        self._radio_broadcasts = None
        self._content = None
        self._series_status = None
        self._is_default_game = None
        self._sort_number = None
        self._is_tie = None
        self._is_featured_game = None
        self._officials = None
        self._pregame_officials = None
        self._weather = None
        self._xref_ids = None
        self._game_info = None
        self._game_number = None
        self._public_facing = None
        self._story = None
        self._weather_forecast = None
        self._rule_settings = None
        self._tracking_version = None
        self._coaching_video = None
        self._double_header = None
        self._gameday_type = None
        self._tiebreaker = None
        self._calendar_event_id = None
        self._season_display = None
        self._day_night = None
        self._description = None
        self._scheduled_innings = None
        self._reverse_home_away_status = None
        self._inning_break_length = None
        self._games_in_series = None
        self._series_game_number = None
        self._series_description = None
        self._review = None
        self._abs_challenge = None
        self._flags = None
        self._status_flags = None
        self._alerts = None
        self._live_lookin = None
        self._previous_play = None
        self._home_runs = None
        self._record_source = None
        self._if_necessary = None
        self._if_necessary_description = None
        self._day = None
        self._game_id = None
        self._lineups = None
        self.discriminator = None
        if copyright is not None:
            self.copyright = copyright
        if game_pk is not None:
            self.game_pk = game_pk
        if game_guid is not None:
            self.game_guid = game_guid
        if link is not None:
            self.link = link
        if game_type is not None:
            self.game_type = game_type
        if season is not None:
            self.season = season
        if game_date is not None:
            self.game_date = game_date
        if official_date is not None:
            self.official_date = official_date
        if resume_date is not None:
            self.resume_date = resume_date
        if resume_game_date is not None:
            self.resume_game_date = resume_game_date
        if resumed_from is not None:
            self.resumed_from = resumed_from
        if resumed_from_date is not None:
            self.resumed_from_date = resumed_from_date
        if reschedule_date is not None:
            self.reschedule_date = reschedule_date
        if reschedule_game_date is not None:
            self.reschedule_game_date = reschedule_game_date
        if rescheduled_from is not None:
            self.rescheduled_from = rescheduled_from
        if rescheduled_from_date is not None:
            self.rescheduled_from_date = rescheduled_from_date
        if end_date_time is not None:
            self.end_date_time = end_date_time
        if status is not None:
            self.status = status
        if teams is not None:
            self.teams = teams
        if linescore is not None:
            self.linescore = linescore
        if decisions is not None:
            self.decisions = decisions
        if scoring_plays is not None:
            self.scoring_plays = scoring_plays
        if venue is not None:
            self.venue = venue
        if tickets is not None:
            self.tickets = tickets
        if at_bat_tickets is not None:
            self.at_bat_tickets = at_bat_tickets
        if promotions is not None:
            self.promotions = promotions
        if at_bat_promotions is not None:
            self.at_bat_promotions = at_bat_promotions
        if sponsorships is not None:
            self.sponsorships = sponsorships
        if broadcasts is not None:
            self.broadcasts = broadcasts
        if radio_broadcasts is not None:
            self.radio_broadcasts = radio_broadcasts
        if content is not None:
            self.content = content
        if series_status is not None:
            self.series_status = series_status
        if is_default_game is not None:
            self.is_default_game = is_default_game
        if sort_number is not None:
            self.sort_number = sort_number
        if is_tie is not None:
            self.is_tie = is_tie
        if is_featured_game is not None:
            self.is_featured_game = is_featured_game
        if officials is not None:
            self.officials = officials
        if pregame_officials is not None:
            self.pregame_officials = pregame_officials
        if weather is not None:
            self.weather = weather
        if xref_ids is not None:
            self.xref_ids = xref_ids
        if game_info is not None:
            self.game_info = game_info
        if game_number is not None:
            self.game_number = game_number
        if public_facing is not None:
            self.public_facing = public_facing
        if story is not None:
            self.story = story
        if weather_forecast is not None:
            self.weather_forecast = weather_forecast
        if rule_settings is not None:
            self.rule_settings = rule_settings
        if tracking_version is not None:
            self.tracking_version = tracking_version
        if coaching_video is not None:
            self.coaching_video = coaching_video
        if double_header is not None:
            self.double_header = double_header
        if gameday_type is not None:
            self.gameday_type = gameday_type
        if tiebreaker is not None:
            self.tiebreaker = tiebreaker
        if calendar_event_id is not None:
            self.calendar_event_id = calendar_event_id
        if season_display is not None:
            self.season_display = season_display
        if day_night is not None:
            self.day_night = day_night
        if description is not None:
            self.description = description
        if scheduled_innings is not None:
            self.scheduled_innings = scheduled_innings
        if reverse_home_away_status is not None:
            self.reverse_home_away_status = reverse_home_away_status
        if inning_break_length is not None:
            self.inning_break_length = inning_break_length
        if games_in_series is not None:
            self.games_in_series = games_in_series
        if series_game_number is not None:
            self.series_game_number = series_game_number
        if series_description is not None:
            self.series_description = series_description
        if review is not None:
            self.review = review
        if abs_challenge is not None:
            self.abs_challenge = abs_challenge
        if flags is not None:
            self.flags = flags
        if status_flags is not None:
            self.status_flags = status_flags
        if alerts is not None:
            self.alerts = alerts
        if live_lookin is not None:
            self.live_lookin = live_lookin
        if previous_play is not None:
            self.previous_play = previous_play
        if home_runs is not None:
            self.home_runs = home_runs
        if record_source is not None:
            self.record_source = record_source
        if if_necessary is not None:
            self.if_necessary = if_necessary
        if if_necessary_description is not None:
            self.if_necessary_description = if_necessary_description
        if day is not None:
            self.day = day
        if game_id is not None:
            self.game_id = game_id
        if lineups is not None:
            self.lineups = lineups

    @property
    def copyright(self):
        """Gets the copyright of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The copyright of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._copyright

    @copyright.setter
    def copyright(self, copyright):
        """Sets the copyright of this BaseballScheduleItemRestObject.


        :param copyright: The copyright of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._copyright = copyright

    @property
    def game_pk(self):
        """Gets the game_pk of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The game_pk of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: int
        """
        return self._game_pk

    @game_pk.setter
    def game_pk(self, game_pk):
        """Sets the game_pk of this BaseballScheduleItemRestObject.


        :param game_pk: The game_pk of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: int
        """

        self._game_pk = game_pk

    @property
    def game_guid(self):
        """Gets the game_guid of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The game_guid of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._game_guid

    @game_guid.setter
    def game_guid(self, game_guid):
        """Sets the game_guid of this BaseballScheduleItemRestObject.


        :param game_guid: The game_guid of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._game_guid = game_guid

    @property
    def link(self):
        """Gets the link of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The link of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this BaseballScheduleItemRestObject.


        :param link: The link of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._link = link

    @property
    def game_type(self):
        """Gets the game_type of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The game_type of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._game_type

    @game_type.setter
    def game_type(self, game_type):
        """Sets the game_type of this BaseballScheduleItemRestObject.


        :param game_type: The game_type of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._game_type = game_type

    @property
    def season(self):
        """Gets the season of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The season of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this BaseballScheduleItemRestObject.


        :param season: The season of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._season = season

    @property
    def game_date(self):
        """Gets the game_date of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The game_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: datetime
        """
        return self._game_date

    @game_date.setter
    def game_date(self, game_date):
        """Sets the game_date of this BaseballScheduleItemRestObject.


        :param game_date: The game_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: datetime
        """

        self._game_date = game_date

    @property
    def official_date(self):
        """Gets the official_date of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The official_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: date
        """
        return self._official_date

    @official_date.setter
    def official_date(self, official_date):
        """Sets the official_date of this BaseballScheduleItemRestObject.


        :param official_date: The official_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: date
        """

        self._official_date = official_date

    @property
    def resume_date(self):
        """Gets the resume_date of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The resume_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: datetime
        """
        return self._resume_date

    @resume_date.setter
    def resume_date(self, resume_date):
        """Sets the resume_date of this BaseballScheduleItemRestObject.


        :param resume_date: The resume_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: datetime
        """

        self._resume_date = resume_date

    @property
    def resume_game_date(self):
        """Gets the resume_game_date of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The resume_game_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: date
        """
        return self._resume_game_date

    @resume_game_date.setter
    def resume_game_date(self, resume_game_date):
        """Sets the resume_game_date of this BaseballScheduleItemRestObject.


        :param resume_game_date: The resume_game_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: date
        """

        self._resume_game_date = resume_game_date

    @property
    def resumed_from(self):
        """Gets the resumed_from of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The resumed_from of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: datetime
        """
        return self._resumed_from

    @resumed_from.setter
    def resumed_from(self, resumed_from):
        """Sets the resumed_from of this BaseballScheduleItemRestObject.


        :param resumed_from: The resumed_from of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: datetime
        """

        self._resumed_from = resumed_from

    @property
    def resumed_from_date(self):
        """Gets the resumed_from_date of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The resumed_from_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: date
        """
        return self._resumed_from_date

    @resumed_from_date.setter
    def resumed_from_date(self, resumed_from_date):
        """Sets the resumed_from_date of this BaseballScheduleItemRestObject.


        :param resumed_from_date: The resumed_from_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: date
        """

        self._resumed_from_date = resumed_from_date

    @property
    def reschedule_date(self):
        """Gets the reschedule_date of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The reschedule_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: datetime
        """
        return self._reschedule_date

    @reschedule_date.setter
    def reschedule_date(self, reschedule_date):
        """Sets the reschedule_date of this BaseballScheduleItemRestObject.


        :param reschedule_date: The reschedule_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: datetime
        """

        self._reschedule_date = reschedule_date

    @property
    def reschedule_game_date(self):
        """Gets the reschedule_game_date of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The reschedule_game_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: date
        """
        return self._reschedule_game_date

    @reschedule_game_date.setter
    def reschedule_game_date(self, reschedule_game_date):
        """Sets the reschedule_game_date of this BaseballScheduleItemRestObject.


        :param reschedule_game_date: The reschedule_game_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: date
        """

        self._reschedule_game_date = reschedule_game_date

    @property
    def rescheduled_from(self):
        """Gets the rescheduled_from of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The rescheduled_from of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: datetime
        """
        return self._rescheduled_from

    @rescheduled_from.setter
    def rescheduled_from(self, rescheduled_from):
        """Sets the rescheduled_from of this BaseballScheduleItemRestObject.


        :param rescheduled_from: The rescheduled_from of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: datetime
        """

        self._rescheduled_from = rescheduled_from

    @property
    def rescheduled_from_date(self):
        """Gets the rescheduled_from_date of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The rescheduled_from_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: date
        """
        return self._rescheduled_from_date

    @rescheduled_from_date.setter
    def rescheduled_from_date(self, rescheduled_from_date):
        """Sets the rescheduled_from_date of this BaseballScheduleItemRestObject.


        :param rescheduled_from_date: The rescheduled_from_date of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: date
        """

        self._rescheduled_from_date = rescheduled_from_date

    @property
    def end_date_time(self):
        """Gets the end_date_time of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The end_date_time of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: datetime
        """
        return self._end_date_time

    @end_date_time.setter
    def end_date_time(self, end_date_time):
        """Sets the end_date_time of this BaseballScheduleItemRestObject.


        :param end_date_time: The end_date_time of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: datetime
        """

        self._end_date_time = end_date_time

    @property
    def status(self):
        """Gets the status of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The status of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: GameStatusRestObject
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BaseballScheduleItemRestObject.


        :param status: The status of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: GameStatusRestObject
        """

        self._status = status

    @property
    def teams(self):
        """Gets the teams of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The teams of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: dict(str, BaseballScheduleItemTeamRestObject)
        """
        return self._teams

    @teams.setter
    def teams(self, teams):
        """Sets the teams of this BaseballScheduleItemRestObject.


        :param teams: The teams of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: dict(str, BaseballScheduleItemTeamRestObject)
        """

        self._teams = teams

    @property
    def linescore(self):
        """Gets the linescore of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The linescore of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: BaseballLinescoreRestObject
        """
        return self._linescore

    @linescore.setter
    def linescore(self, linescore):
        """Sets the linescore of this BaseballScheduleItemRestObject.


        :param linescore: The linescore of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: BaseballLinescoreRestObject
        """

        self._linescore = linescore

    @property
    def decisions(self):
        """Gets the decisions of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The decisions of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: BaseballDecisionRestObject
        """
        return self._decisions

    @decisions.setter
    def decisions(self, decisions):
        """Sets the decisions of this BaseballScheduleItemRestObject.


        :param decisions: The decisions of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: BaseballDecisionRestObject
        """

        self._decisions = decisions

    @property
    def scoring_plays(self):
        """Gets the scoring_plays of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The scoring_plays of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[BaseballPlayRestObject]
        """
        return self._scoring_plays

    @scoring_plays.setter
    def scoring_plays(self, scoring_plays):
        """Sets the scoring_plays of this BaseballScheduleItemRestObject.


        :param scoring_plays: The scoring_plays of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[BaseballPlayRestObject]
        """

        self._scoring_plays = scoring_plays

    @property
    def venue(self):
        """Gets the venue of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The venue of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: VenueRestObject
        """
        return self._venue

    @venue.setter
    def venue(self, venue):
        """Sets the venue of this BaseballScheduleItemRestObject.


        :param venue: The venue of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: VenueRestObject
        """

        self._venue = venue

    @property
    def tickets(self):
        """Gets the tickets of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The tickets of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[BaseballTicketRestObject]
        """
        return self._tickets

    @tickets.setter
    def tickets(self, tickets):
        """Sets the tickets of this BaseballScheduleItemRestObject.


        :param tickets: The tickets of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[BaseballTicketRestObject]
        """

        self._tickets = tickets

    @property
    def at_bat_tickets(self):
        """Gets the at_bat_tickets of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The at_bat_tickets of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[BaseballTicketRestObject]
        """
        return self._at_bat_tickets

    @at_bat_tickets.setter
    def at_bat_tickets(self, at_bat_tickets):
        """Sets the at_bat_tickets of this BaseballScheduleItemRestObject.


        :param at_bat_tickets: The at_bat_tickets of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[BaseballTicketRestObject]
        """

        self._at_bat_tickets = at_bat_tickets

    @property
    def promotions(self):
        """Gets the promotions of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The promotions of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[PromotionRestObject]
        """
        return self._promotions

    @promotions.setter
    def promotions(self, promotions):
        """Sets the promotions of this BaseballScheduleItemRestObject.


        :param promotions: The promotions of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[PromotionRestObject]
        """

        self._promotions = promotions

    @property
    def at_bat_promotions(self):
        """Gets the at_bat_promotions of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The at_bat_promotions of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[PromotionRestObject]
        """
        return self._at_bat_promotions

    @at_bat_promotions.setter
    def at_bat_promotions(self, at_bat_promotions):
        """Sets the at_bat_promotions of this BaseballScheduleItemRestObject.


        :param at_bat_promotions: The at_bat_promotions of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[PromotionRestObject]
        """

        self._at_bat_promotions = at_bat_promotions

    @property
    def sponsorships(self):
        """Gets the sponsorships of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The sponsorships of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[PromotionRestObject]
        """
        return self._sponsorships

    @sponsorships.setter
    def sponsorships(self, sponsorships):
        """Sets the sponsorships of this BaseballScheduleItemRestObject.


        :param sponsorships: The sponsorships of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[PromotionRestObject]
        """

        self._sponsorships = sponsorships

    @property
    def broadcasts(self):
        """Gets the broadcasts of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The broadcasts of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[GameDateBroadcastRestObject]
        """
        return self._broadcasts

    @broadcasts.setter
    def broadcasts(self, broadcasts):
        """Sets the broadcasts of this BaseballScheduleItemRestObject.


        :param broadcasts: The broadcasts of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[GameDateBroadcastRestObject]
        """

        self._broadcasts = broadcasts

    @property
    def radio_broadcasts(self):
        """Gets the radio_broadcasts of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The radio_broadcasts of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[GameDateBroadcastRestObject]
        """
        return self._radio_broadcasts

    @radio_broadcasts.setter
    def radio_broadcasts(self, radio_broadcasts):
        """Sets the radio_broadcasts of this BaseballScheduleItemRestObject.


        :param radio_broadcasts: The radio_broadcasts of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[GameDateBroadcastRestObject]
        """

        self._radio_broadcasts = radio_broadcasts

    @property
    def content(self):
        """Gets the content of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The content of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: GameContentRestObject
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this BaseballScheduleItemRestObject.


        :param content: The content of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: GameContentRestObject
        """

        self._content = content

    @property
    def series_status(self):
        """Gets the series_status of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The series_status of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: SeriesStatusRestObject
        """
        return self._series_status

    @series_status.setter
    def series_status(self, series_status):
        """Sets the series_status of this BaseballScheduleItemRestObject.


        :param series_status: The series_status of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: SeriesStatusRestObject
        """

        self._series_status = series_status

    @property
    def is_default_game(self):
        """Gets the is_default_game of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The is_default_game of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._is_default_game

    @is_default_game.setter
    def is_default_game(self, is_default_game):
        """Sets the is_default_game of this BaseballScheduleItemRestObject.


        :param is_default_game: The is_default_game of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: bool
        """

        self._is_default_game = is_default_game

    @property
    def sort_number(self):
        """Gets the sort_number of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The sort_number of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: int
        """
        return self._sort_number

    @sort_number.setter
    def sort_number(self, sort_number):
        """Sets the sort_number of this BaseballScheduleItemRestObject.


        :param sort_number: The sort_number of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: int
        """

        self._sort_number = sort_number

    @property
    def is_tie(self):
        """Gets the is_tie of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The is_tie of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._is_tie

    @is_tie.setter
    def is_tie(self, is_tie):
        """Sets the is_tie of this BaseballScheduleItemRestObject.


        :param is_tie: The is_tie of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: bool
        """

        self._is_tie = is_tie

    @property
    def is_featured_game(self):
        """Gets the is_featured_game of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The is_featured_game of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._is_featured_game

    @is_featured_game.setter
    def is_featured_game(self, is_featured_game):
        """Sets the is_featured_game of this BaseballScheduleItemRestObject.


        :param is_featured_game: The is_featured_game of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: bool
        """

        self._is_featured_game = is_featured_game

    @property
    def officials(self):
        """Gets the officials of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The officials of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[OfficialRestObject]
        """
        return self._officials

    @officials.setter
    def officials(self, officials):
        """Sets the officials of this BaseballScheduleItemRestObject.


        :param officials: The officials of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[OfficialRestObject]
        """

        self._officials = officials

    @property
    def pregame_officials(self):
        """Gets the pregame_officials of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The pregame_officials of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[OfficialRestObject]
        """
        return self._pregame_officials

    @pregame_officials.setter
    def pregame_officials(self, pregame_officials):
        """Sets the pregame_officials of this BaseballScheduleItemRestObject.


        :param pregame_officials: The pregame_officials of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[OfficialRestObject]
        """

        self._pregame_officials = pregame_officials

    @property
    def weather(self):
        """Gets the weather of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The weather of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: WeatherRestObject
        """
        return self._weather

    @weather.setter
    def weather(self, weather):
        """Sets the weather of this BaseballScheduleItemRestObject.


        :param weather: The weather of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: WeatherRestObject
        """

        self._weather = weather

    @property
    def xref_ids(self):
        """Gets the xref_ids of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The xref_ids of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[XrefIdRestObject]
        """
        return self._xref_ids

    @xref_ids.setter
    def xref_ids(self, xref_ids):
        """Sets the xref_ids of this BaseballScheduleItemRestObject.


        :param xref_ids: The xref_ids of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[XrefIdRestObject]
        """

        self._xref_ids = xref_ids

    @property
    def game_info(self):
        """Gets the game_info of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The game_info of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: GameInfoRestObject
        """
        return self._game_info

    @game_info.setter
    def game_info(self, game_info):
        """Sets the game_info of this BaseballScheduleItemRestObject.


        :param game_info: The game_info of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: GameInfoRestObject
        """

        self._game_info = game_info

    @property
    def game_number(self):
        """Gets the game_number of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The game_number of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: int
        """
        return self._game_number

    @game_number.setter
    def game_number(self, game_number):
        """Sets the game_number of this BaseballScheduleItemRestObject.


        :param game_number: The game_number of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: int
        """

        self._game_number = game_number

    @property
    def public_facing(self):
        """Gets the public_facing of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The public_facing of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._public_facing

    @public_facing.setter
    def public_facing(self, public_facing):
        """Sets the public_facing of this BaseballScheduleItemRestObject.


        :param public_facing: The public_facing of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: bool
        """

        self._public_facing = public_facing

    @property
    def story(self):
        """Gets the story of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The story of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: GameStoryRestObject
        """
        return self._story

    @story.setter
    def story(self, story):
        """Sets the story of this BaseballScheduleItemRestObject.


        :param story: The story of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: GameStoryRestObject
        """

        self._story = story

    @property
    def weather_forecast(self):
        """Gets the weather_forecast of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The weather_forecast of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: VendorWeatherForecastRestObject
        """
        return self._weather_forecast

    @weather_forecast.setter
    def weather_forecast(self, weather_forecast):
        """Sets the weather_forecast of this BaseballScheduleItemRestObject.


        :param weather_forecast: The weather_forecast of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: VendorWeatherForecastRestObject
        """

        self._weather_forecast = weather_forecast

    @property
    def rule_settings(self):
        """Gets the rule_settings of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The rule_settings of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[RuleSettingsRestObject]
        """
        return self._rule_settings

    @rule_settings.setter
    def rule_settings(self, rule_settings):
        """Sets the rule_settings of this BaseballScheduleItemRestObject.


        :param rule_settings: The rule_settings of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[RuleSettingsRestObject]
        """

        self._rule_settings = rule_settings

    @property
    def tracking_version(self):
        """Gets the tracking_version of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The tracking_version of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: TrackingVersionRestObject
        """
        return self._tracking_version

    @tracking_version.setter
    def tracking_version(self, tracking_version):
        """Sets the tracking_version of this BaseballScheduleItemRestObject.


        :param tracking_version: The tracking_version of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: TrackingVersionRestObject
        """

        self._tracking_version = tracking_version

    @property
    def coaching_video(self):
        """Gets the coaching_video of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The coaching_video of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[str]
        """
        return self._coaching_video

    @coaching_video.setter
    def coaching_video(self, coaching_video):
        """Sets the coaching_video of this BaseballScheduleItemRestObject.


        :param coaching_video: The coaching_video of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[str]
        """

        self._coaching_video = coaching_video

    @property
    def double_header(self):
        """Gets the double_header of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The double_header of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._double_header

    @double_header.setter
    def double_header(self, double_header):
        """Sets the double_header of this BaseballScheduleItemRestObject.


        :param double_header: The double_header of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._double_header = double_header

    @property
    def gameday_type(self):
        """Gets the gameday_type of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The gameday_type of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._gameday_type

    @gameday_type.setter
    def gameday_type(self, gameday_type):
        """Sets the gameday_type of this BaseballScheduleItemRestObject.


        :param gameday_type: The gameday_type of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._gameday_type = gameday_type

    @property
    def tiebreaker(self):
        """Gets the tiebreaker of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The tiebreaker of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._tiebreaker

    @tiebreaker.setter
    def tiebreaker(self, tiebreaker):
        """Sets the tiebreaker of this BaseballScheduleItemRestObject.


        :param tiebreaker: The tiebreaker of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._tiebreaker = tiebreaker

    @property
    def calendar_event_id(self):
        """Gets the calendar_event_id of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The calendar_event_id of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._calendar_event_id

    @calendar_event_id.setter
    def calendar_event_id(self, calendar_event_id):
        """Sets the calendar_event_id of this BaseballScheduleItemRestObject.


        :param calendar_event_id: The calendar_event_id of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._calendar_event_id = calendar_event_id

    @property
    def season_display(self):
        """Gets the season_display of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The season_display of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._season_display

    @season_display.setter
    def season_display(self, season_display):
        """Sets the season_display of this BaseballScheduleItemRestObject.


        :param season_display: The season_display of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._season_display = season_display

    @property
    def day_night(self):
        """Gets the day_night of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The day_night of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._day_night

    @day_night.setter
    def day_night(self, day_night):
        """Sets the day_night of this BaseballScheduleItemRestObject.


        :param day_night: The day_night of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._day_night = day_night

    @property
    def description(self):
        """Gets the description of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The description of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BaseballScheduleItemRestObject.


        :param description: The description of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def scheduled_innings(self):
        """Gets the scheduled_innings of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The scheduled_innings of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: int
        """
        return self._scheduled_innings

    @scheduled_innings.setter
    def scheduled_innings(self, scheduled_innings):
        """Sets the scheduled_innings of this BaseballScheduleItemRestObject.


        :param scheduled_innings: The scheduled_innings of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: int
        """

        self._scheduled_innings = scheduled_innings

    @property
    def reverse_home_away_status(self):
        """Gets the reverse_home_away_status of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The reverse_home_away_status of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: bool
        """
        return self._reverse_home_away_status

    @reverse_home_away_status.setter
    def reverse_home_away_status(self, reverse_home_away_status):
        """Sets the reverse_home_away_status of this BaseballScheduleItemRestObject.


        :param reverse_home_away_status: The reverse_home_away_status of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: bool
        """

        self._reverse_home_away_status = reverse_home_away_status

    @property
    def inning_break_length(self):
        """Gets the inning_break_length of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The inning_break_length of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: int
        """
        return self._inning_break_length

    @inning_break_length.setter
    def inning_break_length(self, inning_break_length):
        """Sets the inning_break_length of this BaseballScheduleItemRestObject.


        :param inning_break_length: The inning_break_length of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: int
        """

        self._inning_break_length = inning_break_length

    @property
    def games_in_series(self):
        """Gets the games_in_series of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The games_in_series of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: int
        """
        return self._games_in_series

    @games_in_series.setter
    def games_in_series(self, games_in_series):
        """Sets the games_in_series of this BaseballScheduleItemRestObject.


        :param games_in_series: The games_in_series of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: int
        """

        self._games_in_series = games_in_series

    @property
    def series_game_number(self):
        """Gets the series_game_number of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The series_game_number of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: int
        """
        return self._series_game_number

    @series_game_number.setter
    def series_game_number(self, series_game_number):
        """Sets the series_game_number of this BaseballScheduleItemRestObject.


        :param series_game_number: The series_game_number of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: int
        """

        self._series_game_number = series_game_number

    @property
    def series_description(self):
        """Gets the series_description of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The series_description of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._series_description

    @series_description.setter
    def series_description(self, series_description):
        """Sets the series_description of this BaseballScheduleItemRestObject.


        :param series_description: The series_description of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._series_description = series_description

    @property
    def review(self):
        """Gets the review of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The review of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: BaseballReviewRestObject
        """
        return self._review

    @review.setter
    def review(self, review):
        """Sets the review of this BaseballScheduleItemRestObject.


        :param review: The review of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: BaseballReviewRestObject
        """

        self._review = review

    @property
    def abs_challenge(self):
        """Gets the abs_challenge of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The abs_challenge of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: BaseballABSChallengeRestObject
        """
        return self._abs_challenge

    @abs_challenge.setter
    def abs_challenge(self, abs_challenge):
        """Sets the abs_challenge of this BaseballScheduleItemRestObject.


        :param abs_challenge: The abs_challenge of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: BaseballABSChallengeRestObject
        """

        self._abs_challenge = abs_challenge

    @property
    def flags(self):
        """Gets the flags of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The flags of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: BaseballGameFlagRestObject
        """
        return self._flags

    @flags.setter
    def flags(self, flags):
        """Sets the flags of this BaseballScheduleItemRestObject.


        :param flags: The flags of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: BaseballGameFlagRestObject
        """

        self._flags = flags

    @property
    def status_flags(self):
        """Gets the status_flags of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The status_flags of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: StatusFlagsRestObject
        """
        return self._status_flags

    @status_flags.setter
    def status_flags(self, status_flags):
        """Sets the status_flags of this BaseballScheduleItemRestObject.


        :param status_flags: The status_flags of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: StatusFlagsRestObject
        """

        self._status_flags = status_flags

    @property
    def alerts(self):
        """Gets the alerts of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The alerts of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[BaseballGameAlertRestObject]
        """
        return self._alerts

    @alerts.setter
    def alerts(self, alerts):
        """Sets the alerts of this BaseballScheduleItemRestObject.


        :param alerts: The alerts of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[BaseballGameAlertRestObject]
        """

        self._alerts = alerts

    @property
    def live_lookin(self):
        """Gets the live_lookin of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The live_lookin of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: BaseballGameLiveLookinRestObject
        """
        return self._live_lookin

    @live_lookin.setter
    def live_lookin(self, live_lookin):
        """Sets the live_lookin of this BaseballScheduleItemRestObject.


        :param live_lookin: The live_lookin of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: BaseballGameLiveLookinRestObject
        """

        self._live_lookin = live_lookin

    @property
    def previous_play(self):
        """Gets the previous_play of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The previous_play of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: BaseballPlayRestObject
        """
        return self._previous_play

    @previous_play.setter
    def previous_play(self, previous_play):
        """Sets the previous_play of this BaseballScheduleItemRestObject.


        :param previous_play: The previous_play of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: BaseballPlayRestObject
        """

        self._previous_play = previous_play

    @property
    def home_runs(self):
        """Gets the home_runs of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The home_runs of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: list[BaseballPlayRestObject]
        """
        return self._home_runs

    @home_runs.setter
    def home_runs(self, home_runs):
        """Sets the home_runs of this BaseballScheduleItemRestObject.


        :param home_runs: The home_runs of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: list[BaseballPlayRestObject]
        """

        self._home_runs = home_runs

    @property
    def record_source(self):
        """Gets the record_source of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The record_source of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._record_source

    @record_source.setter
    def record_source(self, record_source):
        """Sets the record_source of this BaseballScheduleItemRestObject.


        :param record_source: The record_source of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._record_source = record_source

    @property
    def if_necessary(self):
        """Gets the if_necessary of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The if_necessary of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._if_necessary

    @if_necessary.setter
    def if_necessary(self, if_necessary):
        """Sets the if_necessary of this BaseballScheduleItemRestObject.


        :param if_necessary: The if_necessary of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._if_necessary = if_necessary

    @property
    def if_necessary_description(self):
        """Gets the if_necessary_description of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The if_necessary_description of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._if_necessary_description

    @if_necessary_description.setter
    def if_necessary_description(self, if_necessary_description):
        """Sets the if_necessary_description of this BaseballScheduleItemRestObject.


        :param if_necessary_description: The if_necessary_description of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._if_necessary_description = if_necessary_description

    @property
    def day(self):
        """Gets the day of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The day of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this BaseballScheduleItemRestObject.


        :param day: The day of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._day = day

    @property
    def game_id(self):
        """Gets the game_id of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The game_id of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: str
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this BaseballScheduleItemRestObject.


        :param game_id: The game_id of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: str
        """

        self._game_id = game_id

    @property
    def lineups(self):
        """Gets the lineups of this BaseballScheduleItemRestObject.  # noqa: E501


        :return: The lineups of this BaseballScheduleItemRestObject.  # noqa: E501
        :rtype: BaseballLineupRestObject
        """
        return self._lineups

    @lineups.setter
    def lineups(self, lineups):
        """Sets the lineups of this BaseballScheduleItemRestObject.


        :param lineups: The lineups of this BaseballScheduleItemRestObject.  # noqa: E501
        :type: BaseballLineupRestObject
        """

        self._lineups = lineups

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BaseballScheduleItemRestObject, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BaseballScheduleItemRestObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
